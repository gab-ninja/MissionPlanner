%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1404.i003.046.S.m004.c11.space seamless pattern.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: ivan
%%CreationDate: 4/30/2014
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">template</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2014-04-30T02:33:08+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2014-04-30T02:33:08+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2014-04-30T02:33:07+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A8xZkNTNPyhvYbbzzZpLQ&#xA;C6SSBSaU5MvJeviVoPfLMcxE2eTjauBljNPo5ZL2MD05JF4UKhHK9OlKEZf+bxd/3um8GXcy7TvM&#xA;mo3ESVmIlSnOIqhJ/Cp+jKTqMV82B08u5gv59a5ZRflxqv1i1thdXzRW1vKsYEpkaVXb49z9iNjk&#xA;pxjVtuixXlB7nyTlD0DYBJAAqTsAOtcVVLq1ubS5mtbqJ4Lm3dop4JFKOkiHiyMpoQykUIOKq+jw&#xA;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&#xA;+w4+CAD5vr9V4+aU+h5e5//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:9B78149FF6CFE311B3B1A60A81516931</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:9B78149FF6CFE311B3B1A60A81516931</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:71ea0339-08cf-ce40-876c-92ea21ce1557</stRef:instanceID>
            <stRef:documentID>xmp.did:71ea0339-08cf-ce40-876c-92ea21ce1557</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:058F24A3598EE31196CDD07E1C5D6E57</stEvt:instanceID>
                  <stEvt:when>2014-02-05T16:35:39+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:72C86FB068C2E311B9E8F65303FCBED1</stEvt:instanceID>
                  <stEvt:when>2014-04-12T22:37:32+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B5A1DA8327C3E3119978F7C8F71DA31B</stEvt:instanceID>
                  <stEvt:when>2014-04-13T21:49:53+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B6A1DA8327C3E3119978F7C8F71DA31B</stEvt:instanceID>
                  <stEvt:when>2014-04-13T21:50:01+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:094ba2cd-e646-1d4e-82be-c741f13e39ce</stEvt:instanceID>
                  <stEvt:when>2014-04-19T16:05:47+06:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c3e9a0be-d5e5-4f49-af76-e2f16554035b</stEvt:instanceID>
                  <stEvt:when>2014-04-20T15:09:20+06:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fa650a02-39a8-d143-bb11-199946e614e2</stEvt:instanceID>
                  <stEvt:when>2014-04-20T22:28:43+06:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:71ea0339-08cf-ce40-876c-92ea21ce1557</stEvt:instanceID>
                  <stEvt:when>2014-04-29T17:02:27+06:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9B78149FF6CFE311B3B1A60A81516931</stEvt:instanceID>
                  <stEvt:when>2014-04-30T02:33:08+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 11.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
gsave
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
clp
gsave
0 0 mo
450 0 li
450 450 li
0 450 li
0 0 li
clp
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.0117647 .0431373 .0862745 rgb
f
404.165 390.188 mo
383.723 390.188 367.15 406.76 367.15 427.202 cv
367.15 447.644 383.723 464.217 404.165 464.217 cv
424.607 464.217 441.18 447.644 441.18 427.202 cv
441.18 406.76 424.607 390.188 404.165 390.188 cv
.847059 .266667 .266667 rgb
f
414.43 410.849 mo
412.742 410.849 410.878 410.459 409.045 409.646 cv
404.177 407.488 401.374 403.159 402.785 399.979 cv
403.665 397.995 405.974 396.927 408.769 396.927 cv
410.457 396.927 412.321 397.316 414.153 398.129 cv
419.021 400.288 421.825 404.616 420.414 407.797 cv
419.535 409.78 417.225 410.849 414.43 410.849 cv
409.644 397.928 mo
407.396 397.928 405.538 398.787 404.831 400.382 cv
403.696 402.939 405.951 406.421 409.865 408.157 cv
411.339 408.81 412.838 409.124 414.195 409.124 cv
416.443 409.124 418.301 408.265 419.008 406.67 cv
420.143 404.111 417.889 400.631 413.974 398.895 cv
412.5 398.241 411.001 397.928 409.644 397.928 cv
.74902 .227451 .184314 rgb
f
414.195 409.124 mo
412.838 409.124 411.339 408.81 409.865 408.157 cv
405.951 406.421 403.696 402.939 404.831 400.382 cv
405.538 398.787 407.396 397.928 409.644 397.928 cv
411.001 397.928 412.5 398.241 413.974 398.895 cv
417.889 400.631 420.143 404.111 419.008 406.67 cv
418.301 408.265 416.443 409.124 414.195 409.124 cv
.94902 .380392 .34902 rgb
f
431.385 432.549 mo
429.803 432.548 428.037 431.051 427.136 428.791 cv
426.064 426.105 426.618 423.362 428.372 422.662 cv
428.65 422.551 428.941 422.498 429.238 422.498 cv
430.82 422.498 432.586 423.996 433.487 426.256 cv
434.56 428.94 434.006 431.685 432.252 432.385 cv
431.974 432.496 431.683 432.549 431.385 432.549 cv
429.71 423.463 mo
429.47 423.463 429.237 423.506 429.014 423.595 cv
427.603 424.157 427.157 426.364 428.02 428.523 cv
428.744 430.341 430.164 431.545 431.436 431.545 cv
431.675 431.545 431.909 431.502 432.133 431.413 cv
433.544 430.85 433.989 428.644 433.127 426.485 cv
432.402 424.668 430.982 423.463 429.71 423.463 cv
.74902 .227451 .184314 rgb
f
431.436 431.545 mo
430.164 431.545 428.744 430.341 428.02 428.523 cv
427.157 426.364 427.603 424.157 429.014 423.595 cv
429.237 423.506 429.47 423.463 429.71 423.463 cv
430.982 423.463 432.402 424.668 433.127 426.485 cv
433.989 428.644 433.544 430.85 432.133 431.413 cv
431.909 431.502 431.675 431.545 431.436 431.545 cv
.94902 .380392 .34902 rgb
f
409.133 441.522 mo
406.595 441.522 404.537 439.838 404.537 437.761 cv
404.537 435.683 406.595 433.999 409.133 433.999 cv
411.671 433.999 413.729 435.683 413.729 437.761 cv
413.729 439.838 411.671 441.522 409.133 441.522 cv
.968627 .411765 .411765 rgb
f
403.093 420.009 mo
402.62 420.009 402.108 419.901 401.607 419.675 cv
400.21 419.043 399.44 417.727 399.889 416.734 cv
400.177 416.098 400.898 415.749 401.747 415.749 cv
402.22 415.749 402.732 415.857 403.231 416.083 cv
404.63 416.715 405.399 418.031 404.951 419.023 cv
404.663 419.661 403.943 420.009 403.093 420.009 cv
f
417.512 450 mo
395.559 450 li
395.32 448.747 394.294 447.359 392.738 446.376 cv
391.567 445.635 390.316 445.265 389.243 445.265 cv
388.174 445.265 387.281 445.632 386.816 446.368 cv
386.195 447.351 386.495 448.743 387.459 450 cv
375.003 450 li
370.083 443.716 367.15 435.801 367.15 427.202 cv
367.15 406.76 383.723 390.188 404.165 390.188 cv
404.774 390.188 405.367 390.25 405.969 390.279 cv
399.567 396.98 395.612 406.041 395.612 416.041 cv
395.612 431.15 404.598 444.138 417.512 450 cv
383.789 415.727 mo
381.191 415.727 378.475 416.867 376.429 419.068 cv
372.803 422.969 372.653 428.725 376.096 431.926 cv
377.595 433.32 379.529 433.999 381.534 433.999 cv
384.132 433.999 386.848 432.859 388.895 430.658 cv
392.522 426.758 392.67 421.002 389.228 417.801 cv
387.728 416.407 385.794 415.727 383.789 415.727 cv
386.529 400.881 mo
385.503 400.881 384.323 401.398 383.375 402.364 cv
381.836 403.934 381.49 406.091 382.603 407.183 cv
383.031 407.602 383.611 407.804 384.252 407.804 cv
385.278 407.804 386.458 407.286 387.406 406.32 cv
388.945 404.751 389.291 402.594 388.178 401.502 cv
387.75 401.082 387.17 400.881 386.529 400.881 cv
.74902 .227451 .184314 rgb
f
381.534 433.999 mo
379.529 433.999 377.595 433.32 376.096 431.926 cv
372.653 428.725 372.803 422.969 376.429 419.068 cv
378.475 416.867 381.191 415.727 383.789 415.727 cv
385.794 415.727 387.728 416.407 389.228 417.801 cv
392.67 421.002 392.522 426.758 388.895 430.658 cv
386.848 432.859 384.132 433.999 381.534 433.999 cv
383.212 416.986 mo
381.123 416.986 378.939 417.902 377.293 419.673 cv
374.377 422.809 374.257 427.438 377.025 430.012 cv
378.231 431.133 379.786 431.679 381.398 431.679 cv
383.487 431.679 385.672 430.763 387.317 428.993 cv
390.233 425.856 390.354 421.228 387.585 418.653 cv
386.379 417.532 384.824 416.986 383.212 416.986 cv
.662745 .196078 .12549 rgb
f
381.398 431.679 mo
379.786 431.679 378.231 431.133 377.025 430.012 cv
374.257 427.438 374.377 422.809 377.293 419.673 cv
378.939 417.902 381.123 416.986 383.212 416.986 cv
384.824 416.986 386.379 417.532 387.585 418.653 cv
390.354 421.228 390.233 425.856 387.317 428.993 cv
385.672 430.763 383.487 431.679 381.398 431.679 cv
.839216 .32549 .239216 rgb
f
395.559 450 mo
394.495 450 li
394.314 448.984 393.486 447.853 392.221 447.054 cv
391.278 446.458 390.272 446.16 389.409 446.16 cv
388.55 446.16 387.832 446.455 387.458 447.047 cv
386.953 447.846 387.206 448.981 388 450 cv
387.459 450 li
386.495 448.743 386.195 447.351 386.816 446.368 cv
387.281 445.632 388.174 445.265 389.243 445.265 cv
390.316 445.265 391.567 445.635 392.738 446.376 cv
394.294 447.359 395.32 448.747 395.559 450 cv
.662745 .196078 .12549 rgb
f
394.495 450 mo
388 450 li
387.206 448.981 386.953 447.846 387.458 447.047 cv
387.832 446.455 388.55 446.16 389.409 446.16 cv
390.272 446.16 391.278 446.458 392.221 447.054 cv
393.486 447.853 394.314 448.984 394.495 450 cv
.839216 .32549 .239216 rgb
f
384.252 407.804 mo
383.611 407.804 383.031 407.602 382.603 407.183 cv
381.49 406.091 381.836 403.934 383.375 402.364 cv
384.323 401.398 385.503 400.881 386.529 400.881 cv
387.17 400.881 387.75 401.082 388.178 401.502 cv
389.291 402.594 388.945 404.751 387.406 406.32 cv
386.458 407.286 385.278 407.804 384.252 407.804 cv
.854902 .352941 .282353 rgb
f
91.4297 234.495 mo
109.91 234.495 124.89 219.514 124.89 201.034 cv
124.89 182.554 109.91 167.574 91.4297 167.574 cv
72.9497 167.574 57.9688 182.554 57.9688 201.034 cv
57.9688 219.514 72.9497 234.495 91.4297 234.495 cv
.4 .2 .8 rgb
f
82.563 226.095 mo
86.102 227.664 89.8023 227.063 90.8276 224.75 cv
91.853 222.438 89.8154 219.292 86.2763 217.722 cv
82.7378 216.152 79.0376 216.754 78.0118 219.066 cv
76.9864 221.379 79.0239 224.525 82.563 226.095 cv
.156863 .647059 .917647 rgb
f
68.9668 203.766 mo
70.2421 203.257 70.644 201.263 69.8657 199.311 cv
69.0864 197.359 67.4213 196.189 66.1465 196.698 cv
64.8711 197.207 64.4693 199.202 65.2476 201.153 cv
66.0264 203.105 67.692 204.275 68.9668 203.766 cv
f
109.85 211.407 mo
108.037 211.407 106.289 210.793 104.933 209.533 cv
101.821 206.64 101.955 201.436 105.233 197.91 cv
107.083 195.92 109.539 194.89 111.887 194.89 cv
113.7 194.89 115.448 195.504 116.804 196.765 cv
119.915 199.658 119.781 204.861 116.503 208.387 cv
114.653 210.377 112.198 211.407 109.85 211.407 cv
.352941 .172549 .54902 rgb
f
115.722 207.312 mo
118.358 204.476 118.466 200.292 115.964 197.965 cv
113.461 195.639 109.296 196.051 106.66 198.886 cv
104.024 201.721 103.915 205.906 106.417 208.233 cv
108.92 210.56 113.086 210.147 115.722 207.312 cv
cp
.156863 .647059 .917647 rgb
f
104.919 184.706 mo
103.949 184.706 102.818 184.371 101.759 183.701 cv
99.6445 182.364 98.6128 180.201 99.4551 178.868 cv
99.8751 178.203 100.682 177.871 101.649 177.871 cv
102.619 177.871 103.749 178.206 104.809 178.876 cv
106.923 180.212 107.955 182.376 107.113 183.708 cv
106.693 184.373 105.885 184.706 104.919 184.706 cv
.352941 .172549 .54902 rgb
f
102.227 182.56 mo
103.927 183.634 105.855 183.637 106.532 182.565 cv
107.209 181.494 106.38 179.754 104.68 178.679 cv
102.979 177.604 101.051 177.602 100.374 178.673 cv
99.6968 179.745 100.526 181.484 102.227 182.56 cv
cp
.156863 .647059 .917647 rgb
f
84.709 196.579 mo
84.5235 196.579 84.3408 196.569 84.1618 196.55 cv
83.8564 194.726 83.6977 192.855 83.6977 190.944 cv
83.6977 190.587 83.7033 190.231 83.7143 189.876 cv
84.033 189.812 84.3661 189.778 84.709 189.778 cv
87.0034 189.778 88.8633 191.301 88.8633 193.179 cv
88.8633 195.057 87.0034 196.579 84.709 196.579 cv
.352941 .172549 .54902 rgb
f
109.888 223.8 mo
108.318 223.441 106.789 222.973 105.311 222.404 cv
105.404 221.572 105.839 220.666 106.58 219.912 cv
107.437 219.038 108.503 218.57 109.431 218.57 cv
110.01 218.57 110.535 218.752 110.921 219.131 cv
111.928 220.119 111.615 222.069 110.224 223.487 cv
110.115 223.598 110.003 223.702 109.888 223.8 cv
f
93.6158 211.388 mo
93.1885 211.388 92.7252 211.29 92.2734 211.086 cv
91.0098 210.515 90.3134 209.325 90.7187 208.428 cv
90.9794 207.852 91.6309 207.537 92.3987 207.537 cv
92.826 207.537 93.2894 207.635 93.7413 207.839 cv
95.0049 208.41 95.7007 209.6 95.2959 210.497 cv
95.0352 211.073 94.3836 211.388 93.6158 211.388 cv
f
91.4297 234.495 mo
91.1229 234.495 90.8171 234.491 90.5123 234.483 cv
72.4564 233.997 57.9692 219.207 57.9692 201.034 cv
57.9692 182.554 72.9497 167.574 91.4297 167.574 cv
91.9804 167.574 92.5166 167.629 93.0606 167.656 cv
87.5015 173.475 83.9835 181.26 83.7143 189.876 cv
81.9001 190.241 80.5547 191.581 80.5547 193.179 cv
80.5547 194.905 82.1256 196.331 84.1618 196.55 cv
86.1507 208.426 94.3532 218.186 105.311 222.404 cv
105.229 223.134 105.411 223.806 105.882 224.268 cv
106.268 224.647 106.793 224.829 107.372 224.829 cv
108.182 224.829 109.098 224.472 109.888 223.8 cv
111.612 224.194 113.385 224.456 115.198 224.576 cv
109.134 230.697 100.727 234.495 91.4297 234.495 cv
91.4297 234.495 li
82.1508 215.817 mo
79.6239 215.817 77.5355 216.783 76.7402 218.576 cv
75.4653 221.452 77.9991 225.364 82.3999 227.316 cv
84.0564 228.051 85.7417 228.403 87.267 228.403 cv
89.794 228.403 91.8824 227.437 92.6777 225.644 cv
93.9526 222.769 91.4189 218.856 87.0175 216.904 cv
85.3612 216.17 83.676 215.817 82.1508 215.817 cv
66.8217 196.201 mo
66.5529 196.201 66.29 196.249 66.0391 196.349 cv
64.4541 196.982 63.9536 199.462 64.9218 201.89 cv
65.7373 203.933 67.3335 205.286 68.764 205.286 cv
69.033 205.287 69.2959 205.239 69.5469 205.139 cv
71.1323 204.506 71.6329 202.025 70.6641 199.598 cv
69.849 197.555 68.2525 196.201 66.8217 196.201 cv
81.8298 173.489 mo
81.3787 173.489 80.8866 173.601 80.4112 173.834 cv
79.1655 174.444 78.5074 175.656 78.9404 176.54 cv
79.2082 177.086 79.8307 177.379 80.5613 177.379 cv
81.0123 177.379 81.5045 177.267 81.98 177.034 cv
83.225 176.424 83.8833 175.212 83.4502 174.329 cv
83.1825 173.782 82.5601 173.489 81.8298 173.489 cv
f
87.267 228.403 mo
85.7417 228.403 84.0564 228.051 82.3999 227.316 cv
77.9991 225.364 75.4653 221.452 76.7402 218.576 cv
77.5355 216.783 79.6239 215.817 82.1508 215.817 cv
83.676 215.817 85.3612 216.17 87.0175 216.904 cv
91.4189 218.856 93.9526 222.769 92.6777 225.644 cv
91.8824 227.437 89.794 228.403 87.267 228.403 cv
82.3629 216.848 mo
80.331 216.848 78.6514 217.625 78.0118 219.066 cv
76.9864 221.379 79.0239 224.525 82.563 226.095 cv
83.8953 226.686 85.2507 226.969 86.4774 226.969 cv
88.5091 226.969 90.1883 226.192 90.8276 224.75 cv
91.853 222.438 89.8154 219.292 86.2763 217.722 cv
84.9444 217.131 83.5894 216.848 82.3629 216.848 cv
.313725 .14902 .376471 rgb
f
86.4774 226.969 mo
85.2507 226.969 83.8953 226.686 82.563 226.095 cv
79.0239 224.525 76.9864 221.379 78.0118 219.066 cv
78.6514 217.625 80.331 216.848 82.3629 216.848 cv
83.5894 216.848 84.9444 217.131 86.2763 217.722 cv
89.8154 219.292 91.853 222.438 90.8276 224.75 cv
90.1883 226.192 88.5091 226.969 86.4774 226.969 cv
.137255 .552941 .631373 rgb
f
68.764 205.286 mo
67.3335 205.286 65.7373 203.933 64.9218 201.89 cv
63.9536 199.462 64.4541 196.982 66.0391 196.349 cv
66.29 196.249 66.5529 196.201 66.8217 196.201 cv
68.2525 196.201 69.849 197.555 70.6641 199.598 cv
71.6329 202.025 71.1323 204.506 69.5469 205.139 cv
69.2959 205.239 69.033 205.287 68.764 205.286 cv
66.7763 196.579 mo
66.5599 196.579 66.3484 196.618 66.1465 196.698 cv
64.8711 197.207 64.4693 199.202 65.2476 201.153 cv
65.9031 202.796 67.1871 203.885 68.3374 203.885 cv
68.5536 203.885 68.765 203.847 68.9668 203.766 cv
70.2421 203.257 70.644 201.263 69.8657 199.311 cv
69.2098 197.668 67.9263 196.579 66.7763 196.579 cv
.313725 .14902 .376471 rgb
f
68.3374 203.885 mo
67.1871 203.885 65.9031 202.796 65.2476 201.153 cv
64.4693 199.202 64.8711 197.207 66.1465 196.698 cv
66.3484 196.618 66.5599 196.579 66.7763 196.579 cv
67.9263 196.579 69.2098 197.668 69.8657 199.311 cv
70.644 201.263 70.2421 203.257 68.9668 203.766 cv
68.765 203.847 68.5536 203.885 68.3374 203.885 cv
.137255 .552941 .631373 rgb
f
84.1618 196.55 mo
82.1256 196.331 80.5547 194.905 80.5547 193.179 cv
80.5547 191.581 81.9001 190.241 83.7143 189.876 cv
83.7033 190.231 83.6977 190.587 83.6977 190.944 cv
83.6977 192.855 83.8564 194.726 84.1618 196.55 cv
.313725 .14902 .376471 rgb
f
107.372 224.829 mo
106.793 224.829 106.268 224.647 105.882 224.268 cv
105.411 223.806 105.229 223.134 105.311 222.404 cv
106.789 222.973 108.318 223.441 109.888 223.8 cv
109.098 224.472 108.182 224.829 107.372 224.829 cv
f
80.5613 177.379 mo
79.8307 177.379 79.2082 177.086 78.9404 176.54 cv
78.5074 175.656 79.1655 174.444 80.4112 173.834 cv
80.8866 173.601 81.3787 173.489 81.8298 173.489 cv
82.5601 173.489 83.1825 173.782 83.4502 174.329 cv
83.8833 175.212 83.225 176.424 81.98 177.034 cv
81.5045 177.267 81.0123 177.379 80.5613 177.379 cv
f
277.217 205.786 mo
260.761 205.786 247.422 219.555 247.422 236.54 cv
247.422 253.524 260.761 267.294 277.217 267.294 cv
293.672 267.294 307.012 253.524 307.012 236.54 cv
307.012 219.555 293.672 205.786 277.217 205.786 cv
.898039 .866667 .682353 rgb
f
281.216 248.437 mo
279.173 248.437 277.517 247.038 277.517 245.313 cv
277.517 243.586 279.173 242.187 281.216 242.187 cv
283.259 242.187 284.915 243.586 284.915 245.313 cv
284.915 247.038 283.259 248.437 281.216 248.437 cv
.792157 .741176 .470588 rgb
f
281.216 219.34 mo
279.173 219.34 277.517 217.941 277.517 216.215 cv
277.517 214.489 279.173 213.089 281.216 213.089 cv
283.259 213.089 284.915 214.489 284.915 216.215 cv
284.915 217.941 283.259 219.34 281.216 219.34 cv
f
292.144 236.052 mo
291.494 236.052 290.94 235.783 290.702 235.28 cv
290.315 234.469 290.902 233.355 292.011 232.794 cv
292.434 232.58 292.873 232.477 293.274 232.477 cv
293.925 232.477 294.479 232.746 294.718 233.248 cv
295.102 234.061 294.517 235.174 293.407 235.735 cv
292.984 235.949 292.546 236.052 292.144 236.052 cv
f
295.69 250.907 mo
295.039 250.907 294.485 250.637 294.246 250.135 cv
293.861 249.323 294.447 248.21 295.557 247.648 cv
295.98 247.434 296.418 247.332 296.819 247.332 cv
297.47 247.332 298.024 247.601 298.263 248.104 cv
298.648 248.915 298.061 250.028 296.953 250.59 cv
296.53 250.804 296.092 250.907 295.69 250.907 cv
f
276.353 230.563 mo
275.973 230.563 275.56 230.473 275.158 230.285 cv
274.033 229.76 273.413 228.667 273.774 227.842 cv
274.006 227.312 274.586 227.024 275.269 227.024 cv
275.65 227.024 276.063 227.113 276.466 227.301 cv
277.591 227.825 278.21 228.92 277.85 229.743 cv
277.617 230.273 277.037 230.563 276.353 230.563 cv
f
293.564 222.191 mo
293.184 222.191 292.771 222.102 292.369 221.914 cv
291.243 221.389 290.624 220.295 290.984 219.471 cv
291.217 218.941 291.797 218.652 292.481 218.652 cv
292.861 218.652 293.274 218.742 293.676 218.929 cv
294.801 219.455 295.421 220.548 295.06 221.373 cv
294.828 221.902 294.248 222.191 293.564 222.191 cv
f
277.217 267.294 mo
260.761 267.294 247.422 253.524 247.422 236.54 cv
247.422 236.54 li
247.422 253.524 260.761 267.294 277.217 267.294 cv
277.241 267.294 277.266 267.294 277.29 267.294 cv
277.266 267.294 277.242 267.294 277.217 267.294 cv
277.314 267.294 mo
277.319 267.294 277.325 267.294 277.33 267.294 cv
277.325 267.294 277.319 267.294 277.314 267.294 cv
277.362 267.294 mo
277.369 267.294 277.374 267.294 277.382 267.293 cv
277.375 267.294 277.368 267.294 277.362 267.294 cv
277.41 267.293 mo
277.415 267.293 277.419 267.293 277.424 267.293 cv
277.42 267.293 277.415 267.293 277.41 267.293 cv
277.459 267.293 mo
277.461 267.293 277.463 267.293 277.465 267.293 cv
277.463 267.293 277.461 267.293 277.459 267.293 cv
.0117647 .0352941 .0588235 rgb
f
277.217 267.294 mo
260.761 267.294 247.422 253.524 247.422 236.54 cv
247.422 219.555 260.761 205.786 277.217 205.786 cv
277.707 205.786 278.185 205.837 278.669 205.861 cv
273.516 211.429 270.332 218.957 270.332 227.266 cv
270.332 243.698 282.723 257.11 298.381 258.177 cv
293.035 263.747 285.644 267.224 277.465 267.293 cv
277.463 267.293 277.461 267.293 277.459 267.293 cv
277.447 267.293 277.436 267.293 277.424 267.293 cv
277.419 267.293 277.415 267.293 277.41 267.293 cv
277.401 267.293 277.391 267.293 277.382 267.293 cv
277.374 267.294 277.369 267.294 277.362 267.294 cv
277.351 267.294 277.341 267.294 277.33 267.294 cv
277.325 267.294 277.319 267.294 277.314 267.294 cv
277.306 267.294 277.298 267.294 277.29 267.294 cv
277.266 267.294 277.241 267.294 277.217 267.294 cv
286.895 258.281 mo
286.493 258.281 286.055 258.384 285.632 258.599 cv
284.522 259.16 283.936 260.272 284.321 261.085 cv
284.56 261.587 285.114 261.857 285.765 261.857 cv
286.166 261.857 286.605 261.754 287.028 261.54 cv
288.137 260.978 288.724 259.865 288.337 259.053 cv
288.099 258.551 287.545 258.281 286.895 258.281 cv
269.692 256.584 mo
269.537 256.584 269.384 256.618 269.241 256.69 cv
268.641 256.994 268.445 257.854 268.805 258.611 cv
269.079 259.188 269.596 259.539 270.092 259.539 cv
270.247 259.539 270.399 259.505 270.542 259.433 cv
271.144 259.128 271.338 258.269 270.979 257.512 cv
270.705 256.934 270.188 256.584 269.692 256.584 cv
263.034 241.421 mo
260.991 241.421 259.335 242.82 259.335 244.547 cv
259.335 246.272 260.991 247.672 263.034 247.672 cv
265.077 247.672 266.733 246.272 266.733 244.547 cv
266.733 242.82 265.077 241.421 263.034 241.421 cv
254.499 230.707 mo
253.815 230.707 253.235 230.997 253.003 231.526 cv
252.642 232.351 253.262 233.444 254.387 233.969 cv
254.789 234.157 255.202 234.246 255.582 234.246 cv
256.266 234.246 256.846 233.957 257.078 233.428 cv
257.438 232.604 256.819 231.51 255.694 230.984 cv
255.292 230.797 254.879 230.707 254.499 230.707 cv
263.02 214.669 mo
262.194 214.669 261.245 215.099 260.481 215.902 cv
259.242 217.206 258.964 218.998 259.86 219.906 cv
260.204 220.254 260.672 220.422 261.187 220.422 cv
262.014 220.422 262.963 219.992 263.727 219.189 cv
264.966 217.885 265.243 216.093 264.348 215.186 cv
264.003 214.837 263.536 214.669 263.02 214.669 cv
.792157 .741176 .470588 rgb
f
270.092 259.539 mo
269.596 259.539 269.079 259.188 268.805 258.611 cv
268.445 257.854 268.641 256.994 269.241 256.69 cv
269.384 256.618 269.537 256.584 269.692 256.584 cv
270.188 256.584 270.705 256.934 270.979 257.512 cv
271.338 258.269 271.144 259.128 270.542 259.433 cv
270.399 259.505 270.247 259.539 270.092 259.539 cv
.701961 .631373 .32549 rgb
f
263.034 247.672 mo
260.991 247.672 259.335 246.272 259.335 244.547 cv
259.335 242.82 260.991 241.421 263.034 241.421 cv
265.077 241.421 266.733 242.82 266.733 244.547 cv
266.733 246.272 265.077 247.672 263.034 247.672 cv
f
261.187 220.422 mo
260.672 220.422 260.204 220.254 259.86 219.906 cv
258.964 218.998 259.242 217.206 260.481 215.902 cv
261.245 215.099 262.194 214.669 263.02 214.669 cv
263.536 214.669 264.003 214.837 264.348 215.186 cv
265.243 216.093 264.966 217.885 263.727 219.189 cv
262.963 219.992 262.014 220.422 261.187 220.422 cv
f
285.765 261.857 mo
285.114 261.857 284.56 261.587 284.321 261.085 cv
283.936 260.272 284.522 259.16 285.632 258.599 cv
286.055 258.384 286.493 258.281 286.895 258.281 cv
287.545 258.281 288.099 258.551 288.337 259.053 cv
288.724 259.865 288.137 260.978 287.028 261.54 cv
286.605 261.754 286.166 261.857 285.765 261.857 cv
f
255.582 234.246 mo
255.202 234.246 254.789 234.157 254.387 233.969 cv
253.262 233.444 252.642 232.351 253.003 231.526 cv
253.235 230.997 253.815 230.707 254.499 230.707 cv
254.879 230.707 255.292 230.797 255.694 230.984 cv
256.819 231.51 257.438 232.604 257.078 233.428 cv
256.846 233.957 256.266 234.246 255.582 234.246 cv
f
66.5645 342.414 mo
52.3159 342.414 40.7646 353.965 40.7646 368.214 cv
40.7646 382.463 52.3159 394.014 66.5645 394.014 cv
80.813 394.014 92.3642 382.463 92.3642 368.214 cv
92.3642 353.965 80.813 342.414 66.5645 342.414 cv
.776471 .776471 .776471 rgb
f
70.0273 372.951 mo
68.2584 372.951 66.8242 374.125 66.8242 375.573 cv
66.8242 377.022 68.2584 378.195 70.0273 378.195 cv
71.7963 378.195 73.2304 377.022 73.2304 375.573 cv
73.2304 374.125 71.7963 372.951 70.0273 372.951 cv
.6 .6 .6 rgb
f
61.1635 385.808 mo
60.852 385.172 60.1782 384.864 59.6587 385.118 cv
59.1386 385.373 58.9697 386.095 59.2808 386.729 cv
59.5918 387.365 60.2657 387.673 60.7852 387.419 cv
61.3051 387.164 61.4746 386.442 61.1635 385.808 cv
f
54.2841 372.309 mo
52.5152 372.309 51.0806 373.482 51.0806 374.931 cv
51.0806 376.379 52.5152 377.553 54.2841 377.553 cv
56.0532 377.553 57.4872 376.379 57.4872 374.931 cv
57.4872 373.482 56.0532 372.309 54.2841 372.309 cv
f
70.0273 348.542 mo
68.2583 348.542 66.8242 349.716 66.8242 351.164 cv
66.8242 352.612 68.2583 353.786 70.0273 353.786 cv
71.7964 353.786 73.2305 352.612 73.2305 351.164 cv
73.2305 349.716 71.7964 348.542 70.0273 348.542 cv
cp
f
52.0737 350.901 mo
51.0005 351.995 50.7598 353.499 51.5356 354.26 cv
52.3115 355.022 53.8101 354.752 54.8833 353.658 cv
55.956 352.565 56.1972 351.061 55.4214 350.3 cv
54.6455 349.539 53.1465 349.808 52.0737 350.901 cv
f
73.8511 386.719 mo
72.8906 387.19 72.3828 388.124 72.7168 388.805 cv
73.0508 389.486 74.1001 389.657 75.06 389.187 cv
76.0205 388.716 76.5278 387.782 76.1943 387.101 cv
75.8604 386.419 74.811 386.248 73.8511 386.719 cv
f
79.375 365.072 mo
78.4146 365.543 77.9072 366.477 78.2407 367.157 cv
78.5752 367.839 79.6245 368.01 80.5845 367.539 cv
81.5449 367.068 82.0522 366.135 81.7183 365.453 cv
81.3843 364.771 80.335 364.602 79.375 365.072 cv
cp
f
82.4448 377.533 mo
81.4844 378.004 80.9766 378.938 81.311 379.619 cv
81.645 380.301 82.6938 380.472 83.6543 380.001 cv
84.6143 379.53 85.1221 378.596 84.7881 377.915 cv
84.4541 377.233 83.4048 377.063 82.4448 377.533 cv
cp
f
65.9141 360.464 mo
64.9395 360.022 63.896 360.227 63.5835 360.918 cv
63.271 361.609 63.8076 362.526 64.7822 362.967 cv
65.7568 363.408 66.7998 363.204 67.1123 362.513 cv
67.4248 361.821 66.8887 360.904 65.9141 360.464 cv
cp
f
80.8164 353.44 mo
79.8423 353.001 78.7988 353.204 78.4863 353.896 cv
78.1738 354.587 78.71 355.504 79.6846 355.945 cv
80.6592 356.385 81.7026 356.182 82.0151 355.49 cv
82.3276 354.799 81.791 353.882 80.8164 353.44 cv
cp
f
47.9278 363.554 mo
46.9537 363.113 45.9101 363.316 45.5977 364.008 cv
45.2852 364.699 45.8218 365.617 46.7963 366.058 cv
47.771 366.498 48.814 366.295 49.1265 365.603 cv
49.4389 364.912 48.9023 363.994 47.9278 363.554 cv
f
66.5645 394.014 mo
52.3159 394.014 40.7646 382.463 40.7646 368.214 cv
40.7646 368.214 li
40.7646 382.463 52.3159 394.014 66.5645 394.014 cv
66.5871 394.014 66.6105 394.014 66.6331 394.014 cv
66.6104 394.014 66.5872 394.014 66.5645 394.014 cv
66.6482 394.014 mo
66.6542 394.014 66.6604 394.013 66.6665 394.013 cv
66.6603 394.013 66.6543 394.014 66.6482 394.014 cv
66.69 394.013 mo
66.6952 394.013 66.6994 394.013 66.7046 394.013 cv
66.6998 394.013 66.6948 394.013 66.69 394.013 cv
66.732 394.013 mo
66.7364 394.013 66.7393 394.013 66.7437 394.013 cv
66.7397 394.013 66.736 394.013 66.732 394.013 cv
66.7739 394.013 mo
66.7773 394.013 66.7799 394.013 66.7834 394.013 cv
66.7803 394.013 66.7769 394.013 66.7739 394.013 cv
66.8162 394.012 mo
66.8169 394.012 li
66.8165 394.012 66.8166 394.012 66.8162 394.012 cv
.0117647 .0352941 .0588235 rgb
f
66.5645 394.014 mo
52.3159 394.014 40.7646 382.463 40.7646 368.214 cv
40.7646 353.965 52.3159 342.414 66.5645 342.414 cv
66.9893 342.414 67.4023 342.457 67.8218 342.478 cv
63.3593 347.148 60.603 353.464 60.603 360.435 cv
60.603 374.22 71.332 385.471 84.8906 386.365 cv
80.2704 391.03 73.8852 393.944 66.8169 394.012 cv
66.8162 394.012 li
66.8053 394.013 66.7943 394.013 66.7834 394.013 cv
66.7799 394.013 66.7773 394.013 66.7739 394.013 cv
66.7638 394.013 66.7537 394.013 66.7437 394.013 cv
66.7393 394.013 66.7364 394.013 66.732 394.013 cv
66.7229 394.013 66.7138 394.013 66.7046 394.013 cv
66.6994 394.013 66.6952 394.013 66.69 394.013 cv
66.6822 394.013 66.6743 394.013 66.6665 394.013 cv
66.6604 394.013 66.6542 394.014 66.6482 394.014 cv
66.6429 394.014 66.6384 394.014 66.6331 394.014 cv
66.6105 394.014 66.5871 394.014 66.5645 394.014 cv
74.9446 386.453 mo
74.5969 386.453 74.2175 386.539 73.8511 386.719 cv
72.8906 387.19 72.3828 388.124 72.7168 388.805 cv
72.9233 389.226 73.4034 389.452 73.9666 389.452 cv
74.3143 389.452 74.6937 389.366 75.06 389.187 cv
76.0205 388.716 76.5278 387.782 76.1943 387.101 cv
75.9879 386.679 75.5078 386.453 74.9446 386.453 cv
60.0486 385.029 mo
59.9145 385.029 59.7823 385.058 59.6587 385.118 cv
59.1386 385.373 58.9697 386.095 59.2808 386.729 cv
59.5179 387.214 59.9657 387.508 60.3953 387.508 cv
60.5294 387.508 60.6616 387.479 60.7852 387.419 cv
61.3051 387.164 61.4746 386.442 61.1635 385.808 cv
60.9261 385.323 60.4782 385.029 60.0486 385.029 cv
54.2841 372.309 mo
52.5152 372.309 51.0806 373.482 51.0806 374.931 cv
51.0806 376.379 52.5152 377.553 54.2841 377.553 cv
56.0532 377.553 57.4872 376.379 57.4872 374.931 cv
57.4872 373.482 56.0532 372.309 54.2841 372.309 cv
46.8927 363.321 mo
46.3008 363.321 45.7984 363.564 45.5977 364.008 cv
45.2852 364.699 45.8218 365.617 46.7963 366.058 cv
47.1449 366.215 47.5023 366.29 47.8318 366.29 cv
48.4237 366.29 48.9258 366.048 49.1265 365.603 cv
49.4389 364.912 48.9023 363.994 47.9278 363.554 cv
47.5794 363.396 47.2222 363.321 46.8927 363.321 cv
54.2722 349.867 mo
53.5566 349.867 52.7344 350.228 52.0737 350.901 cv
51.0005 351.995 50.7598 353.499 51.5356 354.26 cv
51.8336 354.552 52.2384 354.693 52.6846 354.693 cv
53.4001 354.693 54.2223 354.332 54.8833 353.658 cv
55.956 352.565 56.1972 351.061 55.4214 350.3 cv
55.1234 350.008 54.7185 349.867 54.2722 349.867 cv
.686274 .662745 .533333 rgb
f
60.3953 387.508 mo
59.9657 387.508 59.5179 387.214 59.2808 386.729 cv
58.9697 386.095 59.1386 385.373 59.6587 385.118 cv
59.7823 385.058 59.9145 385.029 60.0486 385.029 cv
60.4782 385.029 60.9261 385.323 61.1635 385.808 cv
61.4746 386.442 61.3051 387.164 60.7852 387.419 cv
60.6616 387.479 60.5294 387.508 60.3953 387.508 cv
.529412 .513725 .411765 rgb
f
54.2841 377.553 mo
52.5152 377.553 51.0806 376.379 51.0806 374.931 cv
51.0806 373.482 52.5152 372.309 54.2841 372.309 cv
56.0532 372.309 57.4872 373.482 57.4872 374.931 cv
57.4872 376.379 56.0532 377.553 54.2841 377.553 cv
f
52.6846 354.693 mo
52.2384 354.693 51.8336 354.552 51.5356 354.26 cv
50.7598 353.499 51.0005 351.995 52.0737 350.901 cv
52.7344 350.228 53.5566 349.867 54.2722 349.867 cv
54.7185 349.867 55.1234 350.008 55.4214 350.3 cv
56.1972 351.061 55.956 352.565 54.8833 353.658 cv
54.2223 354.332 53.4001 354.693 52.6846 354.693 cv
f
73.9666 389.452 mo
73.4034 389.452 72.9233 389.226 72.7168 388.805 cv
72.3828 388.124 72.8906 387.19 73.8511 386.719 cv
74.2175 386.539 74.5969 386.453 74.9446 386.453 cv
75.5078 386.453 75.9879 386.679 76.1943 387.101 cv
76.5278 387.782 76.0205 388.716 75.06 389.187 cv
74.6937 389.366 74.3143 389.452 73.9666 389.452 cv
f
47.8318 366.29 mo
47.5023 366.29 47.1449 366.215 46.7963 366.058 cv
45.8218 365.617 45.2852 364.699 45.5977 364.008 cv
45.7984 363.564 46.3008 363.321 46.8927 363.321 cv
47.2222 363.321 47.5794 363.396 47.9278 363.554 cv
48.9023 363.994 49.4389 364.912 49.1265 365.603 cv
48.9258 366.048 48.4237 366.29 47.8318 366.29 cv
f
484.946 156.697 mo
484.946 184.054 462.769 206.231 435.411 206.231 cv
408.055 206.231 385.877 184.054 385.877 156.697 cv
385.877 129.339 408.055 107.162 435.411 107.162 cv
462.769 107.162 484.946 129.339 484.946 156.697 cv
.631373 .894118 1 rgb
f
435.409 204.016 mo
409.314 204.016 388.087 182.785 388.087 156.697 cv
388.087 139.46 397.355 124.344 411.17 116.07 cv
411.695 116.456 412.354 116.719 413.194 116.719 cv
413.194 116.719 414.102 116.719 408.303 121.249 cv
402.501 125.784 403.042 132.071 404.855 128.113 cv
406.67 124.151 408.303 125.602 405.4 131.225 cv
402.501 136.847 406.927 135.032 408.426 138.475 cv
409.934 141.918 410.477 137.751 411.199 144.279 cv
411.199 144.279 413.021 146.453 416.278 145.366 cv
419.542 144.279 415.735 148.263 412.289 151.53 cv
408.844 154.795 409.931 155.878 411.746 157.875 cv
413.559 159.872 414.287 161.5 412.653 163.68 cv
411.023 165.853 415.191 166.576 416.278 167.845 cv
417.365 169.114 417.184 173.286 414.648 175.101 cv
412.112 176.911 415.917 180.9 415.368 186.522 cv
414.825 192.139 414.959 194.496 417.52 194.859 cv
420.085 195.223 417.184 189.966 418.271 187.609 cv
418.685 186.713 419.126 186.735 419.653 186.757 cv
420.511 186.793 421.597 186.829 423.168 182.897 cv
423.168 182.897 427.704 183.984 429.691 177.093 cv
429.691 177.093 433.68 176.546 434.408 174.373 cv
435.136 172.199 434.227 170.748 440.025 166.035 cv
445.824 161.317 436.036 157.693 430.783 157.511 cv
430.783 157.511 428.855 158.298 432.234 152.252 cv
433.707 149.612 429.332 150.26 428.245 147.905 cv
427.158 145.548 424.62 142.828 419.542 143.369 cv
414.466 143.916 413.01 145.731 412.836 142.646 cv
412.653 139.562 415.007 138.116 412.469 137.751 cv
409.934 137.388 411.199 137.206 413.926 134.667 cv
413.926 134.667 412.289 133.575 410.659 135.214 cv
409.025 136.847 406.123 134.309 409.569 130.684 cv
413.021 127.053 418.452 124.333 418.091 131.225 cv
417.729 138.116 420.268 128.113 420.268 128.113 cv
420.268 128.113 424.074 123.246 428.791 122.887 cv
433.498 122.523 430.602 122.341 430.602 120.708 cv
430.602 119.856 431.198 120.642 432.144 121.428 cv
433.005 122.144 434.155 122.859 435.409 122.341 cv
438.033 121.249 432.593 120.89 433.139 119.08 cv
433.68 117.265 436.769 117.806 438.033 120.167 cv
439.303 122.523 440.753 118.898 437.492 115.085 cv
434.227 111.284 434.772 113.64 431.689 115.268 cv
428.609 116.901 429.878 117.806 429.332 115.085 cv
429.027 113.555 428.836 113.808 428.468 114.061 cv
428.183 114.257 427.791 114.452 427.158 113.822 cv
425.701 112.371 429.744 113.04 431.87 113.276 cv
433.996 113.506 433.321 112.006 433.321 112.006 cv
435.409 111.102 li
435.409 111.102 436.769 113.094 438.397 112.729 cv
440.025 112.371 437.311 109.827 438.938 110.191 cv
439.483 110.313 440.087 110.232 440.657 110.152 cv
441.799 109.991 442.806 109.831 442.928 111.284 cv
443.109 113.457 441.658 116.36 447.644 113.094 cv
448.855 112.435 449.663 112.006 450.215 111.75 cv
450.622 111.883 451.019 112.022 451.42 112.173 cv
451.458 112.606 451.597 113.169 452.357 113.64 cv
454.713 115.085 453.99 113.816 457.069 115.632 cv
460.153 117.447 458.156 119.439 460.512 119.803 cv
462.868 120.167 465.048 123.428 463.238 123.61 cv
461.423 123.792 461.24 121.618 458.525 121.249 cv
455.8 120.89 459.612 122.154 461.423 123.792 cv
463.238 125.42 463.238 127.354 461.423 128.113 cv
459.612 128.868 460.951 133.04 463.907 132.494 cv
466.862 131.947 465.771 128.868 467.403 129.597 cv
469.037 130.319 468.49 132.13 471.211 133.222 cv
473.937 134.309 470.847 135.755 474.113 135.937 cv
477.379 136.119 479.007 137.388 476.105 138.657 cv
473.203 139.931 474.659 141.013 472.116 137.929 cv
469.578 134.85 469.829 137.8 469.578 134.85 cv
469.331 131.899 465.23 134.667 463.056 135.032 cv
460.876 135.396 462.691 137.57 460.694 137.929 cv
458.697 138.293 457.792 137.751 458.338 142.464 cv
458.879 147.182 457.615 148.263 455.436 148.263 cv
453.262 148.263 457.257 150.801 458.338 154.067 cv
459.426 157.329 459.612 159.326 464.324 158.057 cv
469.037 156.788 467.586 156.788 468.132 159.326 cv
468.402 160.595 469.037 160.232 469.648 159.869 cv
470.26 159.507 470.849 159.144 471.028 160.413 cv
471.393 162.951 466.499 163.497 469.214 165.125 cv
471.934 166.753 469.947 170.565 468.673 171.47 cv
467.403 172.38 468.309 175.636 465.594 177.093 cv
462.868 178.544 466.862 181.077 465.23 182.715 cv
463.602 184.348 459.243 186.34 460.876 190.33 cv
462.515 194.313 462.515 191.957 465.958 189.055 cv
469.395 186.158 472.303 181.264 473.937 181.446 cv
474.519 181.511 474.799 181.966 475.146 182.351 cv
466.702 195.379 452.047 204.016 435.409 204.016 cv
435.409 106.657 mo
407.812 106.657 385.366 129.104 385.366 156.697 cv
385.366 184.284 407.812 206.736 435.409 206.736 cv
462.996 206.736 485.443 184.284 485.443 156.697 cv
485.443 129.104 462.996 106.657 435.409 106.657 cv
.376471 .729412 .145098 rgb
f
435.409 204.016 mo
409.314 204.016 388.087 182.785 388.087 156.697 cv
388.087 139.46 397.355 124.344 411.17 116.07 cv
411.695 116.456 412.354 116.719 413.194 116.719 cv
413.194 116.719 414.102 116.719 408.303 121.249 cv
403.789 124.777 403.115 129.366 403.891 129.366 cv
404.112 129.366 404.452 128.992 404.855 128.113 cv
405.549 126.597 406.217 125.873 406.615 125.873 cv
407.255 125.873 407.192 127.754 405.4 131.225 cv
402.501 136.847 406.927 135.032 408.426 138.475 cv
409.934 141.918 410.477 137.751 411.199 144.279 cv
411.199 144.279 411.921 145.14 413.268 145.508 cv
413.65 146.794 414.085 148.06 414.567 149.301 cv
413.845 150.036 413.058 150.801 412.289 151.53 cv
408.844 154.795 409.931 155.878 411.746 157.875 cv
413.559 159.872 414.287 161.5 412.653 163.68 cv
411.023 165.853 415.191 166.576 416.278 167.845 cv
417.365 169.114 417.184 173.286 414.648 175.101 cv
412.112 176.911 415.917 180.9 415.368 186.522 cv
414.825 192.139 414.959 194.496 417.52 194.859 cv
417.605 194.871 417.685 194.877 417.758 194.877 cv
419.897 194.877 417.22 189.888 418.271 187.609 cv
418.621 186.852 418.99 186.75 419.413 186.75 cv
419.491 186.75 419.571 186.754 419.653 186.757 cv
419.734 186.76 419.818 186.764 419.904 186.764 cv
420.721 186.764 421.746 186.455 423.168 182.897 cv
423.168 182.897 423.429 182.96 423.853 182.96 cv
425.197 182.96 428.181 182.332 429.691 177.093 cv
429.691 177.093 433.68 176.546 434.408 174.373 cv
434.513 174.058 434.585 173.758 434.647 173.462 cv
439.306 176.357 444.478 178.499 450 179.721 cv
450 201.713 li
445.402 203.208 440.499 204.016 435.409 204.016 cv
411.606 137.599 mo
410.923 137.433 410.964 137.228 411.506 136.743 cv
411.537 137.029 411.571 137.315 411.606 137.599 cv
409.519 135.72 mo
408.079 135.72 406.855 133.539 409.569 130.684 cv
410.098 130.127 410.673 129.593 411.267 129.11 cv
411.234 129.855 411.217 130.604 411.217 131.356 cv
411.217 132.475 411.254 133.583 411.327 134.683 cv
411.107 134.815 410.883 134.989 410.659 135.214 cv
410.312 135.561 409.908 135.72 409.519 135.72 cv
.4 .8 1 rgb
f
435.411 206.231 mo
408.055 206.231 385.877 184.054 385.877 156.697 cv
385.877 136.453 398.027 119.056 415.428 111.372 cv
413.013 116.839 411.55 122.82 411.267 129.11 cv
410.673 129.593 410.098 130.127 409.569 130.684 cv
406.855 133.539 408.079 135.72 409.519 135.72 cv
409.908 135.72 410.312 135.561 410.659 135.214 cv
410.883 134.989 411.107 134.815 411.327 134.683 cv
411.372 135.373 411.433 136.062 411.506 136.743 cv
410.964 137.228 410.923 137.433 411.606 137.599 cv
411.947 140.31 412.507 142.951 413.268 145.508 cv
411.921 145.14 411.199 144.279 411.199 144.279 cv
410.477 137.751 409.934 141.918 408.426 138.475 cv
406.927 135.032 402.501 136.847 405.4 131.225 cv
407.192 127.754 407.255 125.873 406.615 125.873 cv
406.217 125.873 405.549 126.597 404.855 128.113 cv
404.452 128.992 404.112 129.366 403.891 129.366 cv
403.115 129.366 403.789 124.777 408.303 121.249 cv
414.102 116.719 413.194 116.719 413.194 116.719 cv
412.354 116.719 411.695 116.456 411.17 116.07 cv
397.355 124.344 388.087 139.46 388.087 156.697 cv
388.087 182.785 409.314 204.016 435.409 204.016 cv
440.499 204.016 445.402 203.208 450 201.713 cv
450 204.047 li
445.388 205.467 440.489 206.231 435.411 206.231 cv
417.758 194.877 mo
417.685 194.877 417.605 194.871 417.52 194.859 cv
414.959 194.496 414.825 192.139 415.368 186.522 cv
415.917 180.9 412.112 176.911 414.648 175.101 cv
417.184 173.286 417.365 169.114 416.278 167.845 cv
415.191 166.576 411.023 165.853 412.653 163.68 cv
414.287 161.5 413.559 159.872 411.746 157.875 cv
409.931 155.878 408.844 154.795 412.289 151.53 cv
413.058 150.801 413.845 150.036 414.567 149.301 cv
418.48 159.365 425.589 167.834 434.647 173.462 cv
434.585 173.758 434.513 174.058 434.408 174.373 cv
433.68 176.546 429.691 177.093 429.691 177.093 cv
428.181 182.332 425.197 182.96 423.853 182.96 cv
423.429 182.96 423.168 182.897 423.168 182.897 cv
421.746 186.455 420.721 186.764 419.904 186.764 cv
419.818 186.764 419.734 186.76 419.653 186.757 cv
419.571 186.754 419.491 186.75 419.413 186.75 cv
418.99 186.75 418.621 186.852 418.271 187.609 cv
417.22 189.888 419.897 194.877 417.758 194.877 cv
.239216 .65098 .145098 rgb
f
252.194 130.398 mo
251.869 126.653 250.75 123.135 249.006 120.013 cv
248.857 119.987 248.708 119.961 248.56 119.938 cv
243.239 119.111 237.846 119.678 232.453 120.245 cv
226.974 120.821 221.496 121.397 216.097 120.511 cv
212.393 119.902 208.872 118.628 205.464 117.043 cv
204.318 118.564 203.335 120.215 202.541 121.97 cv
201.506 124.258 200.793 126.723 200.458 129.306 cv
217.683 131.412 234.857 133.927 251.963 136.847 cv
252.182 135.492 252.296 134.102 252.296 132.685 cv
252.296 131.914 252.261 131.152 252.194 130.398 cv
.94902 .85098 .635294 rgb
f
245.773 115.454 mo
241.005 110.06 234.034 106.657 226.269 106.657 cv
222.688 106.657 219.276 107.38 216.172 108.689 cv
211.902 110.487 208.214 113.391 205.464 117.043 cv
208.872 118.628 212.393 119.902 216.097 120.511 cv
221.496 121.397 226.974 120.821 232.453 120.245 cv
237.846 119.678 243.239 119.111 248.56 119.938 cv
248.708 119.961 248.857 119.987 249.006 120.013 cv
248.092 118.376 247.007 116.849 245.773 115.454 cv
1 .54902 .470588 rgb
f
200.458 129.306 mo
200.315 130.412 200.24 131.54 200.24 132.685 cv
200.24 135.892 200.822 138.963 201.882 141.799 cv
203.049 144.918 204.794 147.753 206.991 150.173 cv
218.613 149.117 230.443 150.312 241.606 153.713 cv
244.243 151.787 246.503 149.378 248.257 146.616 cv
250.107 143.701 251.394 140.394 251.963 136.847 cv
234.857 133.927 217.683 131.412 200.458 129.306 cv
f
206.991 150.173 mo
208.947 152.328 211.259 154.153 213.834 155.556 cv
217.558 157.933 221.514 158.671 226.269 158.713 cv
228.791 158.735 231.23 158.353 233.535 157.683 cv
236.474 156.83 239.197 155.474 241.606 153.713 cv
230.443 150.312 218.613 149.117 206.991 150.173 cv
.94902 .85098 .635294 rgb
f
224.037 158.886 mo
220.408 158.886 216.948 157.539 213.858 155.571 cv
217.574 157.936 221.524 158.672 226.269 158.713 cv
226.269 158.713 li
226.269 158.713 li
225.518 158.83 224.774 158.886 224.037 158.886 cv
233.535 157.683 mo
233.535 157.683 li
236.474 156.83 239.197 155.474 241.606 153.713 cv
233.071 151.113 224.143 149.802 215.219 149.801 cv
224.144 149.802 233.07 151.113 241.606 153.713 cv
241.606 153.713 li
241.606 153.713 li
239.197 155.474 236.474 156.83 233.535 157.683 cv
233.535 157.683 li
241.643 153.686 mo
241.644 153.686 241.644 153.685 241.645 153.685 cv
241.644 153.685 241.644 153.686 241.643 153.686 cv
207.082 150.165 mo
207.103 150.163 207.126 150.161 207.147 150.159 cv
207.126 150.161 207.103 150.163 207.082 150.165 cv
215.21 149.801 mo
215.211 149.801 215.211 149.801 215.212 149.801 cv
215.212 149.801 li
215.211 149.801 215.211 149.801 215.21 149.801 cv
217.812 120.745 mo
217.255 120.684 216.699 120.609 216.144 120.518 cv
216.699 120.609 217.255 120.684 217.812 120.745 cv
217.812 120.745 li
216.172 108.689 mo
216.182 108.684 216.193 108.68 216.203 108.675 cv
216.193 108.68 216.182 108.684 216.172 108.689 cv
216.218 108.669 mo
216.223 108.667 216.229 108.665 216.234 108.662 cv
216.229 108.665 216.223 108.667 216.218 108.669 cv
216.252 108.655 mo
216.255 108.654 216.257 108.653 216.26 108.652 cv
216.257 108.653 216.255 108.654 216.252 108.655 cv
.0117647 .0313725 .0627451 rgb
f
218.992 131.733 mo
212.821 130.871 206.643 130.062 200.458 129.306 cv
200.793 126.723 201.506 124.258 202.541 121.97 cv
203.335 120.215 204.318 118.564 205.464 117.043 cv
205.464 117.043 li
208.872 118.628 212.393 119.902 216.097 120.511 cv
216.112 120.513 216.128 120.516 216.144 120.518 cv
216.699 120.609 217.255 120.684 217.812 120.745 cv
217.719 121.643 217.672 122.555 217.672 123.478 cv
217.672 126.361 218.135 129.136 218.992 131.733 cv
.843137 .623529 .454902 rgb
f
217.812 120.745 mo
217.255 120.684 216.699 120.609 216.144 120.518 cv
216.128 120.516 216.112 120.513 216.097 120.511 cv
212.393 119.902 208.872 118.628 205.464 117.043 cv
208.214 113.391 211.902 110.487 216.172 108.689 cv
216.172 108.689 li
216.182 108.684 216.193 108.68 216.203 108.675 cv
216.208 108.673 216.213 108.671 216.218 108.669 cv
216.223 108.667 216.229 108.665 216.234 108.662 cv
216.24 108.66 216.246 108.657 216.252 108.655 cv
216.255 108.654 216.257 108.653 216.26 108.652 cv
218.57 107.688 221.05 107.049 223.641 106.789 cv
220.455 110.67 218.356 115.476 217.812 120.745 cv
.886274 .403922 .337255 rgb
f
241.606 153.713 mo
233.07 151.113 224.144 149.802 215.219 149.801 cv
215.216 149.801 215.214 149.801 215.212 149.801 cv
215.212 149.801 li
215.212 149.801 li
215.211 149.801 215.211 149.801 215.21 149.801 cv
212.518 149.801 209.828 149.92 207.147 150.159 cv
207.126 150.161 207.103 150.163 207.082 150.165 cv
207.052 150.168 207.022 150.171 206.991 150.173 cv
206.991 150.173 206.991 150.173 206.991 150.173 cv
204.94 147.914 203.283 145.293 202.122 142.417 cv
202.04 142.212 201.96 142.006 201.882 141.799 cv
201.882 141.799 li
200.826 138.973 200.245 135.916 200.24 132.723 cv
200.24 132.71 200.24 132.698 200.24 132.685 cv
200.24 131.54 200.315 130.412 200.458 129.306 cv
200.458 129.306 li
206.643 130.062 212.821 130.871 218.992 131.733 cv
222.455 142.227 232.341 149.801 243.995 149.801 cv
244.646 149.801 245.284 149.75 245.923 149.704 cv
244.644 151.18 243.222 152.528 241.645 153.685 cv
241.644 153.685 241.644 153.686 241.643 153.686 cv
241.631 153.695 241.619 153.704 241.606 153.713 cv
241.606 153.713 li
f
213.834 155.556 mo
213.834 155.556 li
211.903 154.504 210.119 153.214 208.523 151.726 cv
210.119 153.214 211.903 154.504 213.834 155.556 cv
213.834 155.556 li
.0117647 .0313725 .0627451 rgb
f
226.269 158.713 mo
226.269 158.713 li
221.524 158.672 217.574 157.936 213.858 155.571 cv
213.85 155.566 213.842 155.561 213.834 155.556 cv
213.834 155.556 li
211.903 154.504 210.119 153.214 208.523 151.726 cv
207.991 151.23 207.48 150.712 206.992 150.173 cv
207.022 150.171 207.052 150.168 207.082 150.165 cv
207.103 150.163 207.126 150.161 207.147 150.159 cv
209.828 149.92 212.518 149.801 215.21 149.801 cv
215.211 149.801 215.211 149.801 215.212 149.801 cv
215.212 149.801 li
215.214 149.801 215.216 149.801 215.219 149.801 cv
224.143 149.802 233.071 151.113 241.606 153.713 cv
239.197 155.474 236.474 156.83 233.535 157.683 cv
233.535 157.683 li
231.229 158.353 228.761 158.323 226.269 158.713 cv
.843137 .623529 .454902 rgb
f
179.378 420.842 mo
181.022 423.824 183.712 423.824 185.356 420.842 cv
187 417.859 189.233 418.06 190.318 421.288 cv
191.403 424.517 194.05 424.997 196.201 422.355 cv
198.351 419.715 200.512 420.311 201.003 423.681 cv
201.494 427.052 204.012 427.997 206.6 425.782 cv
209.187 423.566 211.207 424.539 211.088 427.943 cv
210.97 431.347 213.279 432.727 216.22 431.01 cv
219.161 429.292 220.975 430.609 220.25 433.938 cv
219.526 437.266 221.552 439.035 224.752 437.871 cv
227.953 436.706 229.502 438.327 228.195 441.472 cv
226.888 444.617 228.565 446.72 231.923 446.146 cv
235.279 445.571 236.515 447.442 234.667 450.304 cv
232.819 453.164 234.094 455.533 237.5 455.567 cv
240.905 455.602 241.786 457.663 239.458 460.148 cv
237.129 462.634 237.96 465.192 241.305 465.834 cv
244.65 466.476 245.148 468.661 242.414 470.691 cv
239.679 472.721 240.04 475.387 243.216 476.615 cv
246.393 477.844 246.493 480.083 243.439 481.592 cv
240.386 483.101 240.266 485.788 243.172 487.564 cv
246.077 489.34 245.776 491.562 242.503 492.501 cv
239.229 493.439 238.63 496.063 241.173 498.329 cv
243.715 500.596 243.022 502.728 239.633 503.067 cv
236.244 503.406 235.187 505.88 237.283 508.564 cv
239.38 511.248 238.317 513.223 234.923 512.951 cv
231.527 512.68 230.046 514.925 231.629 517.94 cv
233.213 520.955 231.815 522.708 228.523 521.835 cv
225.231 520.962 223.372 522.906 224.392 526.156 cv
225.412 529.405 223.724 530.881 220.64 529.434 cv
217.557 527.987 215.38 529.568 215.804 532.947 cv
216.227 536.327 214.303 537.477 211.527 535.503 cv
208.752 533.528 206.328 534.696 206.141 538.097 cv
205.954 541.497 203.855 542.285 201.477 539.847 cv
199.099 537.409 196.505 538.125 195.714 541.438 cv
194.923 544.75 192.717 545.15 190.813 542.327 cv
188.908 539.504 186.229 539.745 184.858 542.863 cv
183.488 545.981 181.247 545.981 179.876 542.863 cv
178.507 539.745 175.827 539.504 173.922 542.327 cv
172.018 545.15 169.812 544.75 169.021 541.438 cv
168.229 538.125 165.636 537.409 163.258 539.847 cv
160.88 542.285 158.781 541.497 158.594 538.097 cv
158.407 534.696 155.983 533.528 153.208 535.503 cv
150.433 537.477 148.508 536.327 148.931 532.947 cv
149.354 529.568 147.178 527.987 144.095 529.434 cv
141.012 530.881 139.323 529.405 140.343 526.156 cv
141.363 522.906 139.504 520.962 136.212 521.835 cv
132.92 522.708 131.522 520.955 133.106 517.94 cv
134.689 514.925 133.208 512.68 129.813 512.951 cv
126.417 513.223 125.355 511.248 127.452 508.564 cv
129.548 505.88 128.491 503.406 125.102 503.067 cv
121.713 502.728 121.021 500.596 123.563 498.329 cv
126.105 496.063 125.506 493.439 122.232 492.501 cv
118.958 491.562 118.658 489.34 121.563 487.564 cv
124.47 485.788 124.349 483.101 121.295 481.592 cv
118.242 480.083 118.342 477.844 121.519 476.615 cv
124.695 475.387 125.057 472.721 122.321 470.691 cv
119.586 468.661 120.085 466.476 123.43 465.834 cv
126.775 465.192 127.606 462.634 125.277 460.148 cv
122.949 457.663 123.83 455.602 127.235 455.567 cv
130.641 455.533 131.916 453.164 130.068 450.304 cv
128.221 447.442 129.456 445.571 132.813 446.146 cv
136.17 446.72 137.847 444.617 136.54 441.472 cv
135.233 438.327 136.782 436.706 139.983 437.871 cv
143.183 439.035 145.209 437.266 144.485 433.938 cv
143.76 430.609 145.574 429.292 148.515 431.01 cv
151.456 432.727 153.766 431.347 153.647 427.943 cv
153.528 424.539 155.548 423.566 158.135 425.782 cv
160.723 427.997 163.241 427.052 163.732 423.681 cv
164.224 420.311 166.384 419.715 168.535 422.355 cv
170.685 424.997 173.332 424.517 174.417 421.288 cv
175.501 418.06 177.734 417.859 179.378 420.842 cv
cp
1 .4 .2 rgb
f
238.932 481.966 mo
238.932 513.205 213.607 538.53 182.368 538.53 cv
151.128 538.53 125.803 513.205 125.803 481.966 cv
125.803 450.726 151.128 425.401 182.368 425.401 cv
213.607 425.401 238.932 450.726 238.932 481.966 cv
cp
1 .901961 .180392 rgb
f
308.771 345.55 mo
287.341 338.309 264.845 334.237 242.237 333.486 cv
240.414 337.518 239.158 341.859 238.567 346.41 cv
268.91 350.121 299.165 354.551 329.298 359.694 cv
329.682 357.307 329.884 354.858 329.884 352.363 cv
329.884 351.005 329.821 349.662 329.706 348.335 cv
322.893 350.472 315.562 347.845 308.771 345.55 cv
.94902 .85098 .635294 rgb
f
238.59 358.468 mo
239.051 361.921 239.893 365.253 241.076 368.419 cv
254.179 366.664 265.17 370.259 278.421 370.297 cv
285.332 370.317 292.378 370.357 298.948 372.504 cv
302.531 373.674 305.883 375.443 309.357 376.903 cv
311.308 377.723 313.982 377.389 316.622 377.056 cv
318.846 376.775 321.047 376.494 322.769 376.903 cv
323.963 375.021 325.021 373.046 325.936 370.991 cv
318.813 368.111 309.357 361.187 287.497 356.938 cv
263.45 352.262 245.747 356.262 238.59 358.468 cv
.956863 .478431 .345098 rgb
f
238.567 346.41 mo
238.315 348.358 238.184 350.346 238.184 352.363 cv
238.184 354.434 238.324 356.471 238.59 358.468 cv
245.747 356.262 263.45 352.262 287.497 356.938 cv
309.357 361.187 318.813 368.111 325.936 370.991 cv
327.516 367.44 328.662 363.653 329.298 359.694 cv
312.787 356.876 296.062 348.979 279.483 346.591 cv
272.455 345.578 265.467 346.001 258.474 346.424 cv
251.858 346.825 245.236 347.226 238.567 346.41 cv
.8 .619608 .529412 rgb
f
323.302 329.908 mo
313.929 328.452 304.428 329.45 294.93 330.449 cv
285.277 331.464 275.627 332.479 266.115 330.917 cv
259.591 329.845 253.39 327.602 247.386 324.808 cv
245.368 327.488 243.636 330.395 242.237 333.486 cv
264.845 334.237 287.341 338.309 308.771 345.55 cv
315.562 347.845 322.893 350.472 329.706 348.335 cv
329.132 341.736 327.16 335.54 324.088 330.04 cv
323.826 329.995 323.564 329.948 323.302 329.908 cv
.956863 .478431 .345098 rgb
f
299.236 319.896 mo
287.997 318.175 276.743 315.572 266.663 310.311 cv
266.524 310.239 266.387 310.164 266.248 310.091 cv
258.727 313.259 252.231 318.375 247.386 324.808 cv
253.39 327.602 259.591 329.845 266.115 330.917 cv
275.627 332.479 285.277 331.464 294.93 330.449 cv
304.428 329.45 313.929 328.452 323.302 329.908 cv
323.564 329.948 323.826 329.995 324.088 330.04 cv
322.479 327.156 320.566 324.466 318.395 322.009 cv
311.982 321.569 305.589 320.867 299.236 319.896 cv
.94902 .85098 .635294 rgb
f
284.034 306.513 mo
277.727 306.513 271.717 307.787 266.248 310.091 cv
266.387 310.164 266.524 310.239 266.663 310.311 cv
276.743 315.572 287.997 318.175 299.236 319.896 cv
305.589 320.867 311.982 321.569 318.395 322.009 cv
309.993 312.507 297.715 306.513 284.034 306.513 cv
.8 .619608 .529412 rgb
f
250.075 383.17 mo
253.521 386.966 257.594 390.181 262.131 392.652 cv
273.752 390.751 285.897 392.032 296.836 396.399 cv
302.012 394.897 306.81 392.507 311.055 389.405 cv
308.14 372.406 264.649 364.81 250.075 383.17 cv
.956863 .478431 .345098 rgb
f
262.131 392.652 mo
268.689 396.839 274.891 398.003 284.034 398.213 cv
288.477 398.315 292.772 397.578 296.836 396.399 cv
285.897 392.032 273.752 390.751 262.131 392.652 cv
.8 .619608 .529412 rgb
f
262.992 370.422 mo
260.217 371.955 257.698 372.414 257.698 372.414 cv
260.838 373.818 260.582 374.572 264.233 374.572 cv
268.641 374.572 271.721 372.796 271.721 372.796 cv
271.721 372.796 265.767 368.889 262.992 370.422 cv
.94902 .85098 .635294 rgb
f
263.634 377.414 mo
257.269 377.414 256.143 376.397 252.714 374.48 cv
244.841 376.161 li
246.363 378.664 248.116 381.012 250.075 383.17 cv
256.615 380.993 264.649 383.306 277.753 380.168 cv
288.591 377.573 304.507 383.801 311.055 389.405 cv
312.979 387.999 314.782 386.438 316.463 384.757 cv
311.586 382.663 300.093 376.713 277.936 374.626 cv
275.037 375.808 269.939 377.414 263.634 377.414 cv
f
260.826 368.029 mo
264.973 365.738 272.254 368.816 276.72 371.17 cv
276.719 371.17 li
300.337 373.572 315.252 379.671 319.339 381.599 cv
320.574 380.108 321.727 378.545 322.769 376.903 cv
319.004 376.009 315.31 374.845 311.715 373.334 cv
308.24 371.875 304.888 370.105 301.306 368.935 cv
294.735 366.788 287.689 366.748 280.777 366.729 cv
273.229 366.706 269.496 358.474 256.945 363.818 cv
251.694 366.055 246.715 367.663 241.076 368.419 cv
241.692 370.065 242.41 371.661 243.204 373.213 cv
249.379 372.426 li
250.92 372.083 255.675 370.876 260.826 368.029 cv
f
262.992 370.422 mo
260.217 371.955 257.698 372.414 257.698 372.414 cv
260.838 373.818 260.582 374.572 264.233 374.572 cv
268.641 374.572 271.721 372.796 271.721 372.796 cv
271.721 372.796 265.767 368.889 262.992 370.422 cv
f
264.233 374.572 mo
260.582 374.572 260.838 373.818 257.698 372.414 cv
257.698 372.414 260.217 371.955 262.992 370.422 cv
265.767 368.889 271.721 372.796 271.721 372.796 cv
271.721 372.796 268.641 374.572 264.233 374.572 cv
276.719 371.17 mo
276.72 371.17 li
272.254 368.816 264.973 365.738 260.826 368.029 cv
255.675 370.876 250.92 372.083 249.379 372.426 cv
243.204 373.213 li
243.717 374.216 244.257 375.202 244.841 376.161 cv
252.714 374.48 li
256.143 376.397 257.269 377.414 263.634 377.414 cv
269.939 377.414 275.037 375.808 277.936 374.626 cv
300.093 376.713 311.586 382.663 316.463 384.757 cv
317.47 383.749 318.429 382.696 319.339 381.599 cv
315.252 379.671 300.337 373.572 276.719 371.17 cv
.8 .619608 .529412 rgb
f
284.034 398.213 mo
284.034 398.213 li
279.021 398.14 274.766 397.71 270.826 396.589 cv
274.69 397.676 278.898 398.095 284.034 398.213 cv
284.034 398.213 li
286.369 398.191 mo
289.984 398.042 293.488 397.37 296.836 396.399 cv
296.786 396.379 296.735 396.359 296.685 396.339 cv
296.735 396.359 296.786 396.379 296.836 396.399 cv
302.012 394.897 306.81 392.507 311.055 389.405 cv
311.055 389.405 li
311.055 389.405 li
311.055 389.405 li
306.81 392.507 302.012 394.897 296.836 396.399 cv
293.414 397.392 290.338 398.052 286.369 398.191 cv
296.575 396.296 mo
296.569 396.293 296.563 396.291 296.557 396.289 cv
296.563 396.291 296.569 396.293 296.575 396.296 cv
296.479 396.258 mo
296.476 396.257 296.472 396.255 296.468 396.254 cv
296.472 396.255 296.476 396.257 296.479 396.258 cv
296.393 396.224 mo
288.865 393.285 280.778 391.799 272.696 391.798 cv
280.779 391.799 288.864 393.285 296.393 396.224 cv
262.131 392.652 mo
262.131 392.652 li
257.594 390.181 253.521 386.966 250.075 383.17 cv
250.06 383.153 250.045 383.136 250.029 383.119 cv
250.045 383.136 250.06 383.153 250.075 383.17 cv
250.075 383.17 li
253.521 386.966 257.594 390.181 262.131 392.652 cv
262.131 392.652 li
262.131 392.652 li
262.131 392.652 li
272.685 391.798 mo
272.686 391.798 272.687 391.798 272.687 391.798 cv
272.687 391.798 li
272.687 391.798 272.686 391.798 272.685 391.798 cv
250.028 383.118 mo
246.19 378.877 243.137 373.914 241.091 368.459 cv
241.704 370.091 242.417 371.674 243.204 373.213 cv
249.379 372.426 li
250.798 372.11 254.941 371.062 259.609 368.676 cv
259.609 368.676 li
254.941 371.062 250.798 372.11 249.379 372.426 cv
243.204 373.213 li
243.717 374.216 244.257 375.202 244.841 376.161 cv
244.841 376.161 li
246.351 378.644 248.088 380.974 250.028 383.118 cv
.0117647 .0313725 .0627451 rgb
f
271.676 372.767 mo
271.224 372.477 267.427 370.095 264.626 370.066 cv
267.427 370.095 271.224 372.477 271.676 372.767 cv
276.627 371.121 mo
276.623 371.119 276.62 371.117 276.616 371.116 cv
276.62 371.117 276.623 371.119 276.627 371.121 cv
276.561 371.086 mo
276.008 370.798 275.415 370.499 274.792 370.202 cv
274.792 370.202 li
275.415 370.499 276.008 370.798 276.561 371.086 cv
f
274.792 370.202 mo
274.792 370.202 li
271.636 368.697 267.712 367.226 264.416 367.223 cv
267.712 367.226 271.636 368.697 274.792 370.202 cv
.847059 .34902 .247059 rgb
f
262.992 370.422 mo
263.003 370.416 263.015 370.41 263.026 370.404 cv
263.015 370.41 263.003 370.416 262.992 370.422 cv
264.572 370.065 mo
264.573 370.065 264.573 370.065 264.574 370.065 cv
264.574 370.065 li
264.573 370.065 264.573 370.065 264.572 370.065 cv
241.055 368.363 mo
241.055 368.362 241.054 368.36 241.053 368.358 cv
241.054 368.36 241.055 368.362 241.055 368.363 cv
240.989 368.185 mo
240.989 368.184 240.989 368.184 240.989 368.184 cv
240.989 368.184 240.989 368.184 240.989 368.185 cv
240.948 368.071 mo
240.947 368.068 240.946 368.065 240.944 368.062 cv
240.945 368.065 240.947 368.068 240.948 368.071 cv
240.925 368.009 mo
240.924 368.007 240.923 368.004 240.923 368.002 cv
240.923 368.004 240.924 368.007 240.925 368.009 cv
240.908 367.961 mo
240.905 367.954 240.903 367.947 240.9 367.939 cv
240.903 367.947 240.905 367.954 240.908 367.961 cv
240.891 367.914 mo
240.885 367.897 240.879 367.88 240.873 367.864 cv
240.879 367.88 240.885 367.897 240.891 367.914 cv
240.871 367.859 mo
239.15 363.065 238.202 357.904 238.184 352.524 cv
238.191 354.539 238.331 356.522 238.59 358.468 cv
238.59 358.468 li
239.024 361.718 239.795 364.861 240.871 367.859 cv
238.728 358.425 mo
238.729 358.425 238.73 358.425 238.731 358.425 cv
238.73 358.425 238.729 358.425 238.728 358.425 cv
272.894 355.02 mo
270.288 354.844 267.792 354.766 265.414 354.765 cv
267.792 354.765 270.288 354.844 272.894 355.02 cv
272.894 355.02 li
265.407 354.765 mo
265.408 354.765 265.409 354.765 265.41 354.765 cv
265.41 354.765 li
265.409 354.765 265.408 354.765 265.407 354.765 cv
.0117647 .0313725 .0627451 rgb
f
241.076 368.419 mo
241.076 368.419 li
241.069 368.4 241.062 368.382 241.055 368.363 cv
241.055 368.362 241.054 368.36 241.053 368.358 cv
241.032 368.3 241.011 368.243 240.989 368.185 cv
240.989 368.184 240.989 368.184 240.989 368.184 cv
240.975 368.146 240.961 368.109 240.948 368.071 cv
240.947 368.068 240.945 368.065 240.944 368.062 cv
240.938 368.044 240.932 368.027 240.925 368.009 cv
240.924 368.007 240.923 368.004 240.923 368.002 cv
240.918 367.988 240.913 367.975 240.908 367.961 cv
240.905 367.954 240.903 367.947 240.9 367.939 cv
240.897 367.931 240.894 367.922 240.891 367.914 cv
240.885 367.897 240.879 367.88 240.873 367.864 cv
240.872 367.862 240.871 367.86 240.871 367.859 cv
239.795 364.861 239.024 361.718 238.59 358.468 cv
238.635 358.454 238.682 358.44 238.728 358.425 cv
238.729 358.425 238.73 358.425 238.731 358.425 cv
243.506 356.965 252.793 354.766 265.407 354.765 cv
265.408 354.765 265.409 354.765 265.41 354.765 cv
265.411 354.765 265.413 354.765 265.414 354.765 cv
267.792 354.766 270.288 354.844 272.894 355.02 cv
274.805 359.301 277.347 363.243 280.4 366.721 cv
274.92 366.505 271.403 362.014 264.767 362.014 cv
262.565 362.014 260.02 362.509 256.945 363.818 cv
251.694 366.055 246.715 367.663 241.076 368.419 cv
241.076 368.419 li
264.403 367.223 mo
264.403 367.223 264.404 367.223 264.404 367.223 cv
264.404 367.223 li
264.404 367.223 264.403 367.223 264.403 367.223 cv
.847059 .34902 .247059 rgb
f
238.184 352.506 mo
238.184 352.496 238.184 352.488 238.184 352.478 cv
238.184 352.487 238.184 352.497 238.184 352.506 cv
238.184 352.443 mo
238.184 352.436 238.184 352.429 238.184 352.421 cv
238.184 352.428 238.184 352.436 238.184 352.443 cv
.0117647 .0313725 .0627451 rgb
f
247.069 346.884 mo
244.241 346.884 241.409 346.758 238.567 346.41 cv
239.158 341.859 240.414 337.518 242.237 333.486 cv
242.237 333.486 li
251.159 333.783 260.062 334.596 268.891 335.917 cv
268.891 335.992 268.891 336.068 268.891 336.143 cv
268.891 339.513 269.25 342.799 269.933 345.965 cv
269.911 345.965 269.889 345.965 269.866 345.965 cv
266.065 345.965 262.271 346.195 258.474 346.424 cv
254.677 346.654 250.877 346.884 247.069 346.884 cv
.843137 .623529 .454902 rgb
f
269.138 331.329 mo
268.161 331.222 267.186 331.091 266.212 330.933 cv
267.186 331.091 268.161 331.222 269.138 331.329 cv
269.138 331.329 li
266.248 310.091 mo
266.269 310.082 266.289 310.073 266.31 310.065 cv
266.289 310.073 266.269 310.082 266.248 310.091 cv
266.315 310.063 mo
266.827 309.848 267.343 309.642 267.864 309.446 cv
267.343 309.642 266.827 309.848 266.315 310.063 cv
267.869 309.444 mo
267.886 309.438 267.904 309.431 267.921 309.425 cv
267.904 309.431 267.886 309.438 267.869 309.444 cv
267.94 309.417 mo
267.953 309.413 267.964 309.409 267.976 309.404 cv
267.964 309.408 267.952 309.413 267.94 309.417 cv
268.098 309.359 mo
268.099 309.358 268.1 309.358 268.101 309.357 cv
268.1 309.358 268.099 309.358 268.098 309.359 cv
.0117647 .0313725 .0627451 rgb
f
238.59 358.468 mo
238.331 356.522 238.191 354.539 238.184 352.524 cv
238.184 352.518 238.184 352.511 238.184 352.506 cv
238.184 352.497 238.184 352.487 238.184 352.478 cv
238.184 352.467 238.184 352.454 238.184 352.443 cv
238.184 352.436 238.184 352.428 238.184 352.421 cv
238.184 352.402 238.184 352.383 238.184 352.363 cv
238.184 352.363 li
238.184 350.346 238.315 348.358 238.567 346.41 cv
238.567 346.41 li
241.409 346.758 244.241 346.884 247.069 346.884 cv
250.877 346.884 254.677 346.654 258.474 346.424 cv
262.271 346.195 266.065 345.965 269.866 345.965 cv
269.889 345.965 269.911 345.965 269.933 345.965 cv
270.612 349.115 271.611 352.144 272.894 355.02 cv
270.288 354.844 267.792 354.765 265.414 354.765 cv
265.413 354.765 265.411 354.765 265.41 354.765 cv
265.41 354.765 li
265.409 354.765 265.408 354.765 265.407 354.765 cv
252.793 354.766 243.506 356.965 238.731 358.425 cv
238.73 358.425 238.729 358.425 238.728 358.425 cv
238.682 358.44 238.635 358.454 238.59 358.468 cv
238.59 358.468 li
.709804 .454902 .380392 rgb
f
268.891 335.917 mo
260.062 334.596 251.159 333.783 242.237 333.486 cv
243.636 330.395 245.368 327.488 247.386 324.808 cv
247.386 324.808 li
253.39 327.602 259.591 329.845 266.115 330.917 cv
266.147 330.922 266.18 330.927 266.212 330.933 cv
267.186 331.091 268.161 331.222 269.138 331.329 cv
268.982 332.838 268.899 334.369 268.891 335.917 cv
.847059 .34902 .247059 rgb
f
269.138 331.329 mo
268.161 331.222 267.186 331.091 266.212 330.933 cv
266.18 330.927 266.147 330.922 266.115 330.917 cv
259.591 329.845 253.39 327.602 247.386 324.808 cv
252.231 318.375 258.727 313.259 266.248 310.091 cv
266.248 310.091 li
266.387 310.164 266.524 310.239 266.663 310.311 cv
269.237 311.655 271.888 312.825 274.596 313.851 cv
271.691 319.136 269.787 325.045 269.138 331.329 cv
.843137 .623529 .454902 rgb
f
274.596 313.851 mo
271.888 312.825 269.237 311.655 266.663 310.311 cv
266.524 310.239 266.387 310.164 266.248 310.091 cv
266.248 310.091 li
266.269 310.082 266.289 310.073 266.31 310.065 cv
266.312 310.064 266.313 310.063 266.315 310.063 cv
266.827 309.848 267.343 309.642 267.864 309.446 cv
267.866 309.445 267.867 309.445 267.869 309.444 cv
267.886 309.438 267.904 309.431 267.921 309.425 cv
267.927 309.422 267.934 309.42 267.94 309.417 cv
267.952 309.413 267.964 309.408 267.976 309.404 cv
268.017 309.389 268.057 309.374 268.098 309.359 cv
268.099 309.358 268.1 309.358 268.101 309.357 cv
271.68 308.031 275.47 307.14 279.405 306.746 cv
277.593 308.953 275.981 311.331 274.596 313.851 cv
.709804 .454902 .380392 rgb
f
296.836 396.399 mo
296.786 396.379 296.735 396.359 296.685 396.339 cv
296.648 396.325 296.611 396.31 296.575 396.296 cv
296.569 396.293 296.563 396.291 296.557 396.289 cv
296.53 396.278 296.506 396.269 296.479 396.258 cv
296.476 396.257 296.472 396.255 296.468 396.254 cv
296.443 396.244 296.418 396.234 296.393 396.224 cv
288.864 393.285 280.779 391.799 272.696 391.798 cv
272.693 391.798 272.69 391.798 272.687 391.798 cv
272.687 391.798 li
272.687 391.798 li
272.687 391.798 272.686 391.798 272.685 391.798 cv
269.15 391.798 265.618 392.082 262.131 392.652 cv
262.131 392.652 li
257.594 390.181 253.521 386.966 250.075 383.17 cv
256.615 380.993 264.649 383.306 277.753 380.168 cv
279.497 379.75 281.373 379.561 283.319 379.561 cv
293.471 379.561 305.56 384.702 311.055 389.405 cv
306.81 392.507 302.012 394.897 296.836 396.399 cv
.847059 .34902 .247059 rgb
f
284.772 398.218 mo
284.53 398.218 284.284 398.217 284.034 398.213 cv
284.034 398.213 li
278.898 398.095 274.69 397.676 270.826 396.589 cv
267.808 395.731 264.976 394.468 262.131 392.652 cv
262.131 392.652 li
262.131 392.652 li
265.618 392.082 269.15 391.798 272.685 391.798 cv
272.686 391.798 272.687 391.798 272.687 391.798 cv
272.687 391.798 li
272.69 391.798 272.693 391.798 272.696 391.798 cv
280.778 391.799 288.865 393.285 296.393 396.224 cv
296.418 396.234 296.443 396.244 296.468 396.254 cv
296.472 396.255 296.476 396.257 296.479 396.258 cv
296.506 396.269 296.53 396.278 296.557 396.289 cv
296.563 396.291 296.569 396.293 296.575 396.296 cv
296.611 396.31 296.648 396.325 296.685 396.339 cv
296.735 396.359 296.786 396.379 296.836 396.399 cv
293.488 397.37 289.984 398.042 286.369 398.191 cv
285.852 398.209 285.321 398.218 284.772 398.218 cv
.709804 .454902 .380392 rgb
f
311.055 389.405 mo
311.055 389.405 li
305.56 384.702 293.471 379.561 283.319 379.561 cv
281.373 379.561 279.497 379.75 277.753 380.168 cv
264.649 383.306 256.615 380.993 250.075 383.17 cv
250.075 383.17 li
250.06 383.153 250.045 383.136 250.029 383.119 cv
250.029 383.119 250.028 383.118 250.028 383.118 cv
248.088 380.974 246.351 378.644 244.841 376.161 cv
252.714 374.48 li
256.143 376.397 257.269 377.414 263.634 377.414 cv
269.939 377.414 275.037 375.808 277.936 374.626 cv
283.698 375.169 288.74 375.973 293.131 376.902 cv
298.481 379.814 304.47 381.703 310.831 382.306 cv
313.253 383.302 315.093 384.168 316.436 384.745 cv
314.768 386.435 312.977 388.001 311.055 389.405 cv
311.055 389.405 li
.843137 .623529 .454902 rgb
f
243.204 373.213 mo
242.417 371.674 241.704 370.091 241.091 368.459 cv
241.086 368.445 241.081 368.432 241.076 368.419 cv
241.076 368.419 li
241.076 368.419 li
246.715 367.663 251.694 366.055 256.945 363.818 cv
260.02 362.509 262.565 362.014 264.767 362.014 cv
271.403 362.014 274.92 366.505 280.4 366.721 cv
282.216 368.79 284.212 370.695 286.367 372.413 cv
283.335 371.938 280.116 371.516 276.719 371.17 cv
276.72 371.17 li
276.72 371.17 li
276.72 371.17 li
276.72 371.17 li
276.689 371.154 276.658 371.137 276.627 371.121 cv
276.623 371.119 276.62 371.117 276.616 371.116 cv
276.598 371.106 276.579 371.096 276.561 371.086 cv
276.008 370.798 275.415 370.499 274.792 370.202 cv
271.636 368.697 267.712 367.226 264.416 367.223 cv
264.412 367.223 264.408 367.223 264.404 367.223 cv
264.404 367.223 li
264.404 367.223 li
264.404 367.223 264.403 367.223 264.403 367.223 cv
263.078 367.223 261.855 367.461 260.826 368.029 cv
260.826 368.029 li
260.417 368.255 260.012 368.47 259.609 368.676 cv
254.941 371.062 250.798 372.11 249.379 372.426 cv
243.204 373.213 li
f
264.233 374.572 mo
260.582 374.572 260.838 373.818 257.698 372.414 cv
257.698 372.414 260.217 371.955 262.992 370.422 cv
262.992 370.422 li
263.003 370.416 263.015 370.41 263.026 370.404 cv
263.474 370.165 264.002 370.065 264.572 370.065 cv
264.573 370.065 264.573 370.065 264.574 370.065 cv
264.591 370.065 264.609 370.065 264.626 370.066 cv
267.427 370.095 271.224 372.477 271.676 372.767 cv
271.705 372.786 271.721 372.796 271.721 372.796 cv
271.721 372.796 268.641 374.572 264.233 374.572 cv
f
316.436 384.745 mo
315.093 384.168 313.253 383.302 310.831 382.306 cv
312.289 382.444 313.767 382.515 315.262 382.515 cv
316.408 382.515 317.532 382.425 318.657 382.343 cv
317.943 383.167 317.203 383.969 316.436 384.745 cv
263.634 377.414 mo
257.269 377.414 256.143 376.397 252.714 374.48 cv
244.841 376.161 li
244.257 375.202 243.717 374.216 243.204 373.213 cv
249.379 372.426 li
250.798 372.11 254.941 371.062 259.609 368.676 cv
260.012 368.47 260.417 368.255 260.826 368.029 cv
260.826 368.029 li
261.855 367.461 263.078 367.223 264.403 367.223 cv
264.403 367.223 264.404 367.223 264.404 367.223 cv
264.404 367.223 li
264.408 367.223 264.412 367.223 264.416 367.223 cv
267.712 367.226 271.636 368.697 274.792 370.202 cv
275.415 370.499 276.008 370.798 276.561 371.086 cv
276.579 371.096 276.598 371.106 276.616 371.116 cv
276.62 371.117 276.623 371.119 276.627 371.121 cv
276.658 371.137 276.689 371.154 276.72 371.17 cv
276.72 371.17 li
276.72 371.17 li
276.719 371.17 li
280.116 371.516 283.335 371.938 286.367 372.413 cv
288.479 374.098 290.741 375.602 293.131 376.902 cv
288.74 375.973 283.698 375.169 277.936 374.626 cv
275.037 375.808 269.939 377.414 263.634 377.414 cv
257.698 372.414 mo
257.698 372.414 li
260.838 373.818 260.582 374.572 264.233 374.572 cv
268.641 374.572 271.721 372.796 271.721 372.796 cv
271.721 372.796 li
271.721 372.796 271.705 372.786 271.676 372.767 cv
271.676 372.767 li
271.224 372.477 267.427 370.095 264.626 370.066 cv
264.626 370.066 li
264.609 370.065 264.591 370.065 264.574 370.065 cv
264.574 370.065 li
264.574 370.065 li
264.573 370.065 264.573 370.065 264.572 370.065 cv
264.572 370.065 li
264.002 370.065 263.474 370.165 263.026 370.404 cv
263.026 370.404 li
263.015 370.41 263.003 370.416 262.992 370.422 cv
262.992 370.422 li
262.992 370.422 li
260.217 371.955 257.698 372.414 257.698 372.414 cv
.709804 .454902 .380392 rgb
f
63.9462 442.822 mo
59.5455 442.138 55.0847 442.607 50.6249 443.076 cv
46.0926 443.553 41.5613 444.029 37.0952 443.296 cv
34.0312 442.793 31.1196 441.739 28.3008 440.428 cv
27.353 441.686 26.5396 443.051 25.8828 444.503 cv
36.4985 444.855 47.0615 446.767 57.1241 450.167 cv
60.3126 451.244 63.7549 452.478 66.9542 451.475 cv
66.6841 448.376 65.7583 445.467 64.3159 442.884 cv
64.1929 442.863 64.0698 442.841 63.9462 442.822 cv
.027451 .682353 .462745 rgb
f
52.647 438.12 mo
47.3692 437.313 42.085 436.091 37.3521 433.621 cv
37.1572 433.517 li
33.6259 435.005 30.5752 437.407 28.3008 440.428 cv
31.1196 441.739 34.0312 442.793 37.0952 443.296 cv
41.5613 444.029 46.0926 443.553 50.6249 443.076 cv
55.0847 442.607 59.5455 442.138 63.9462 442.822 cv
64.0698 442.841 64.1929 442.863 64.3159 442.884 cv
63.5601 441.53 62.6621 440.267 61.6426 439.113 cv
58.6318 438.906 55.6299 438.577 52.647 438.12 cv
.658824 .866667 .658824 rgb
f
57.1241 450.167 mo
47.0615 446.767 36.4985 444.855 25.8828 444.503 cv
25.0268 446.395 24.437 448.434 24.1597 450.57 cv
38.4073 452.313 52.6133 454.393 66.7627 456.809 cv
66.9424 455.687 67.0375 454.538 67.0375 453.366 cv
67.0375 452.728 67.0083 452.098 66.9542 451.475 cv
63.7549 452.478 60.3126 451.244 57.1241 450.167 cv
.6 1 1 rgb
f
45.5083 431.837 mo
42.5469 431.837 39.7252 432.436 37.1572 433.517 cv
37.3521 433.621 li
42.085 436.091 47.3692 437.313 52.647 438.12 cv
55.6299 438.577 58.6318 438.906 61.6426 439.113 cv
57.6977 434.651 51.9327 431.837 45.5083 431.837 cv
.466667 .823529 .862745 rgb
f
39.4884 443.579 mo
38.7568 443.524 38.0261 443.442 37.2977 443.328 cv
38.0261 443.442 38.7568 443.524 39.4884 443.579 cv
39.4884 443.579 li
37.2743 443.325 mo
37.2647 443.323 37.2551 443.322 37.2456 443.32 cv
37.2551 443.322 37.2647 443.323 37.2743 443.325 cv
.00784314 .0352941 .0745098 rgb
f
39.6465 445.838 mo
35.093 445.103 30.4929 444.656 25.8828 444.503 cv
26.5396 443.051 27.353 441.686 28.3008 440.428 cv
28.3008 440.428 li
31.1196 441.739 34.0312 442.793 37.0952 443.296 cv
37.1453 443.304 37.1954 443.312 37.2456 443.32 cv
37.2551 443.322 37.2647 443.323 37.2743 443.325 cv
37.2822 443.326 37.2898 443.327 37.2977 443.328 cv
38.0261 443.442 38.7568 443.524 39.4884 443.579 cv
39.5047 444.342 39.5579 445.095 39.6465 445.838 cv
.0196078 .54902 .407843 rgb
f
39.4884 443.579 mo
38.7568 443.524 38.0261 443.442 37.2977 443.328 cv
37.2898 443.327 37.2822 443.326 37.2743 443.325 cv
37.2647 443.323 37.2551 443.322 37.2456 443.32 cv
37.1954 443.312 37.1453 443.304 37.0952 443.296 cv
34.0312 442.793 31.1196 441.739 28.3008 440.428 cv
30.5752 437.407 33.6259 435.005 37.1572 433.517 cv
37.1572 433.517 li
37.3521 433.621 li
38.4923 434.216 39.6642 434.738 40.8606 435.2 cv
39.9692 437.658 39.483 440.31 39.483 443.075 cv
39.483 443.243 39.4848 443.412 39.4884 443.579 cv
.47451 .698039 .580392 rgb
f
40.539 450 mo
24.2415 450 li
24.5445 448.071 25.1033 446.226 25.8828 444.503 cv
25.8828 444.503 li
30.4929 444.656 35.093 445.103 39.6465 445.838 cv
39.8172 447.27 40.1187 448.661 40.539 450 cv
.431373 .803922 .882353 rgb
f
37.1572 433.517 mo
37.6885 433.293 38.2307 433.09 38.7827 432.909 cv
38.2306 433.09 37.6885 433.293 37.1572 433.517 cv
38.8059 432.901 mo
38.8087 432.9 38.8115 432.899 38.8142 432.898 cv
38.8115 432.899 38.8087 432.9 38.8059 432.901 cv
.00784314 .0352941 .0745098 rgb
f
40.8606 435.2 mo
39.6642 434.738 38.4923 434.216 37.3521 433.621 cv
37.1572 433.517 li
37.1572 433.517 li
37.6885 433.293 38.2306 433.09 38.7827 432.909 cv
38.7904 432.906 38.7981 432.904 38.8059 432.901 cv
38.8087 432.9 38.8115 432.899 38.8142 432.898 cv
39.9267 432.535 41.0791 432.26 42.2632 432.081 cv
41.722 433.079 41.2522 434.121 40.8606 435.2 cv
.337255 .662745 .760784 rgb
f
182.045 331.28 mo
194.237 325.585 205.521 312.281 199.723 290.995 cv
191.513 297.074 181.854 302.861 171.114 307.878 cv
160.374 312.894 149.737 316.587 139.806 318.981 cv
153.031 335.256 169.853 336.975 182.045 331.28 cv
1 .803922 .313726 rgb
f
190.458 280.297 mo
190.717 280.631 190.969 280.972 191.215 281.318 cv
201.176 278.851 208.247 278.839 209.659 281.861 cv
211.156 285.066 205.954 290.962 196.697 297.458 cv
190.358 301.906 182.118 306.636 172.825 310.977 cv
163.532 315.316 154.616 318.601 147.137 320.606 cv
136.214 323.536 128.354 323.742 126.857 320.536 cv
125.446 317.514 129.994 312.099 138.279 306.044 cv
138.17 305.633 138.071 305.221 137.981 304.809 cv
125.169 313.299 117.709 321.201 119.64 325.335 cv
121.723 329.793 134.177 328.69 150.697 323.344 cv
157.937 321 165.955 317.847 174.229 313.982 cv
182.503 310.117 190.067 305.993 196.511 301.944 cv
211.214 292.707 220.053 283.865 217.971 279.406 cv
216.04 275.272 205.192 275.922 190.458 280.297 cv
.988235 .941176 .615686 rgb
f
191.402 277.988 mo
191.747 278.433 192.083 278.886 192.41 279.347 cv
205.662 276.064 224.296 271.395 226.175 275.416 cv
228.166 279.682 221.246 287.524 208.929 296.168 cv
200.496 302.086 189.533 308.378 177.168 314.153 cv
164.804 319.929 152.942 324.298 142.991 326.966 cv
128.459 330.864 118.002 331.138 116.01 326.873 cv
114.131 322.852 125.297 313.448 136.32 305.393 cv
136.176 304.846 136.044 304.298 135.925 303.748 cv
118.878 315.045 103.839 327.757 106.408 333.257 cv
109.179 339.188 125.748 337.721 147.728 330.607 cv
157.361 327.49 168.028 323.294 179.036 318.151 cv
190.044 313.01 200.109 307.523 208.682 302.137 cv
228.243 289.847 240.004 278.082 237.233 272.15 cv
234.664 266.65 211.005 272.166 191.402 277.988 cv
.788235 .658824 .305882 rgb
f
191.738 282.046 mo
192.001 282.444 192.257 282.85 192.503 283.265 cv
195.961 283.023 198.273 283.56 198.937 284.979 cv
199.628 286.459 198.429 288.697 195.808 291.331 cv
191.173 295.988 182.076 301.89 170.998 307.064 cv
159.919 312.238 149.555 315.428 143.009 315.992 cv
139.307 316.311 136.821 315.795 136.13 314.315 cv
135.467 312.894 136.541 310.777 138.945 308.28 cv
138.785 307.826 138.637 307.37 138.501 306.912 cv
132.643 311.583 129.585 315.662 130.707 318.063 cv
131.891 320.6 137.502 320.761 145.515 318.976 cv
152.872 317.337 162.254 314.057 172.113 309.452 cv
181.973 304.847 190.509 299.758 196.488 295.167 cv
202.999 290.168 206.476 285.762 205.292 283.226 cv
204.17 280.824 199.08 280.552 191.738 282.046 cv
f
198.163 285.732 mo
197.689 284.719 197.169 283.741 196.61 282.798 cv
196.333 282.33 196.045 281.871 195.748 281.422 cv
195.542 281.109 195.327 280.807 195.112 280.503 cv
194.834 280.112 194.55 279.728 194.258 279.352 cv
184.873 267.254 168.065 262.796 153.609 269.548 cv
153.483 269.613 li
139.112 276.399 131.793 292.096 135.038 307.012 cv
135.139 307.478 135.251 307.943 135.373 308.407 cv
135.467 308.767 135.561 309.126 135.668 309.483 cv
135.823 310 135.99 310.516 136.17 311.028 cv
136.535 312.063 136.951 313.088 137.425 314.102 cv
138.017 315.37 138.687 316.574 139.411 317.729 cv
146.493 316.908 156.882 313.75 168.143 308.758 cv
168.146 308.756 li
169.18 308.298 170.217 307.831 171.262 307.343 cv
175.152 305.525 178.833 303.633 182.228 301.726 cv
189.019 297.912 194.666 294.04 198.556 290.603 cv
198.945 290.259 199.316 289.919 199.669 289.584 cv
199.249 288.287 198.755 287 198.163 285.732 cv
1 .87451 .301961 rgb
f
135.631 309.358 mo
135.539 309.042 135.456 308.724 135.373 308.407 cv
135.362 308.368 135.352 308.328 135.342 308.289 cv
135.342 308.289 li
135.352 308.328 135.362 308.368 135.373 308.407 cv
135.456 308.725 135.539 309.042 135.631 309.358 cv
135.631 309.358 li
.0117647 .0392157 .027451 rgb
f
139.411 317.729 mo
139.015 317.098 138.635 316.451 138.275 315.787 cv
138.275 315.787 li
138.635 316.451 139.015 317.098 139.411 317.729 cv
139.48 317.721 139.549 317.713 139.619 317.705 cv
139.549 317.713 139.48 317.721 139.411 317.729 cv
139.631 317.703 mo
139.64 317.702 139.65 317.701 139.66 317.7 cv
139.65 317.701 139.641 317.702 139.631 317.703 cv
139.677 317.698 mo
139.685 317.697 139.693 317.696 139.701 317.695 cv
139.693 317.696 139.685 317.697 139.677 317.698 cv
139.723 317.692 mo
139.73 317.691 139.736 317.69 139.743 317.69 cv
139.736 317.69 139.73 317.691 139.723 317.692 cv
139.777 317.685 mo
139.779 317.685 139.781 317.685 139.783 317.685 cv
139.781 317.685 139.779 317.685 139.777 317.685 cv
139.823 317.679 mo
139.824 317.679 139.824 317.679 139.824 317.679 cv
139.823 317.679 li
136.403 311.668 mo
136.323 311.456 136.246 311.242 136.17 311.028 cv
135.99 310.516 135.823 310 135.668 309.483 cv
135.656 309.442 135.644 309.4 135.631 309.358 cv
135.631 309.358 li
135.644 309.4 135.656 309.442 135.668 309.483 cv
135.823 310 135.99 310.516 136.17 311.028 cv
136.246 311.242 136.323 311.456 136.403 311.668 cv
136.403 311.668 li
.788235 .576471 .0941176 rgb
f
153.609 269.548 mo
153.622 269.542 153.634 269.536 153.647 269.53 cv
153.635 269.536 153.621 269.542 153.609 269.548 cv
.0117647 .0392157 .027451 rgb
f
139.411 317.729 mo
139.015 317.098 138.635 316.451 138.275 315.787 cv
137.977 315.238 137.693 314.677 137.425 314.102 cv
137.049 313.298 136.709 312.486 136.403 311.668 cv
136.323 311.456 136.246 311.242 136.17 311.028 cv
135.99 310.516 135.823 310 135.668 309.483 cv
135.656 309.442 135.644 309.4 135.631 309.358 cv
135.539 309.042 135.456 308.725 135.373 308.407 cv
135.362 308.368 135.352 308.328 135.342 308.289 cv
135.232 307.864 135.13 307.439 135.038 307.012 cv
135.025 306.954 135.013 306.898 135.001 306.841 cv
134.972 306.703 134.943 306.564 134.916 306.426 cv
134.796 305.826 134.694 305.227 134.609 304.626 cv
134.387 303.069 134.278 301.508 134.277 299.956 cv
134.269 287.38 141.372 275.332 153.483 269.613 cv
153.609 269.548 li
153.609 269.548 li
153.621 269.542 153.635 269.536 153.647 269.53 cv
154.427 269.167 155.216 268.851 156.008 268.552 cv
153.636 272.816 152.274 277.721 152.274 282.946 cv
152.274 294.158 158.497 303.912 167.674 308.958 cv
156.813 313.734 146.793 316.798 139.824 317.679 cv
139.824 317.679 139.824 317.679 139.823 317.679 cv
139.809 317.681 139.797 317.683 139.783 317.685 cv
139.781 317.685 139.779 317.685 139.777 317.685 cv
139.766 317.687 139.754 317.688 139.743 317.69 cv
139.736 317.69 139.73 317.691 139.723 317.692 cv
139.716 317.693 139.709 317.694 139.701 317.695 cv
139.693 317.696 139.685 317.697 139.677 317.698 cv
139.672 317.698 139.666 317.699 139.66 317.7 cv
139.65 317.701 139.64 317.702 139.631 317.703 cv
139.627 317.704 139.622 317.704 139.619 317.705 cv
139.549 317.713 139.48 317.721 139.411 317.729 cv
1 .764706 .0901961 rgb
f
42.2104 40.8306 mo
43.4395 43.3213 li
46.1885 43.7207 li
44.1992 45.6597 li
44.6689 48.397 li
42.2104 47.1045 li
39.752 48.397 li
40.2217 45.6597 li
38.2329 43.7207 li
40.9814 43.3213 li
42.2104 40.8306 li
cp
1 1 1 rgb
f
111.511 76.5688 mo
112.74 79.0591 li
115.489 79.4585 li
113.5 81.3975 li
113.97 84.1348 li
111.511 82.8423 li
109.053 84.1348 li
109.522 81.3975 li
107.533 79.4585 li
110.282 79.0591 li
111.511 76.5688 li
cp
f
99.1611 12.1099 mo
100.391 14.6006 li
103.139 15 li
101.15 16.9385 li
101.62 19.6763 li
99.1611 18.3838 li
96.7031 19.6763 li
97.1724 16.9385 li
95.1836 15 li
97.9321 14.6006 li
99.1611 12.1099 li
cp
f
309.736 23 mo
310.965 25.4907 li
313.714 25.8901 li
311.725 27.8286 li
312.194 30.5664 li
309.736 29.2739 li
307.277 30.5664 li
307.747 27.8286 li
305.758 25.8901 li
308.507 25.4907 li
309.736 23 li
cp
f
435.404 329.644 mo
436.229 331.314 li
438.073 331.582 li
436.739 332.883 li
437.054 334.719 li
435.404 333.852 li
433.756 334.719 li
434.07 332.883 li
432.736 331.582 li
434.58 331.314 li
435.404 329.644 li
cp
f
339.835 404.501 mo
340.659 406.172 li
342.503 406.439 li
341.169 407.74 li
341.484 409.576 li
339.835 408.709 li
338.186 409.576 li
338.501 407.74 li
337.167 406.439 li
339.011 406.172 li
339.835 404.501 li
cp
f
259.335 77.7207 mo
260.564 80.2114 li
263.313 80.6104 li
261.324 82.5493 li
261.793 85.2866 li
259.335 83.9941 li
256.877 85.2866 li
257.346 82.5493 li
255.357 80.6104 li
258.105 80.2114 li
259.335 77.7207 li
cp
f
257.698 177.342 mo
258.927 179.833 li
261.676 180.232 li
259.687 182.171 li
260.156 184.908 li
257.698 183.616 li
255.239 184.908 li
255.709 182.171 li
253.72 180.232 li
256.469 179.833 li
257.698 177.342 li
cp
f
227.235 186.185 mo
228.465 188.675 li
231.213 189.075 li
229.224 191.013 li
229.693 193.75 li
227.235 192.458 li
224.777 193.75 li
225.246 191.013 li
223.257 189.075 li
226.006 188.675 li
227.235 186.185 li
cp
f
183.597 117.185 mo
184.826 119.676 li
187.575 120.075 li
185.586 122.014 li
186.055 124.751 li
183.597 123.459 li
181.138 124.751 li
181.608 122.014 li
179.619 120.075 li
182.368 119.676 li
183.597 117.185 li
cp
f
348.492 133.584 mo
349.721 136.075 li
352.47 136.474 li
350.48 138.413 li
350.95 141.15 li
348.492 139.858 li
346.033 141.15 li
346.503 138.413 li
344.514 136.474 li
347.263 136.075 li
348.492 133.584 li
cp
f
83.0493 399.473 mo
84.2788 401.963 li
87.0273 402.362 li
85.0386 404.301 li
85.5078 407.038 li
83.0493 405.746 li
80.5913 407.038 li
81.0605 404.301 li
79.0718 402.362 li
81.8203 401.963 li
83.0493 399.473 li
cp
f
115.198 427.896 mo
116.427 430.387 li
119.175 430.786 li
117.187 432.725 li
117.656 435.463 li
115.198 434.17 li
112.739 435.463 li
113.209 432.725 li
111.22 430.786 li
113.968 430.387 li
115.198 427.896 li
cp
f
183.597 390.697 mo
184.826 393.188 li
187.575 393.588 li
185.586 395.526 li
186.055 398.264 li
183.597 396.971 li
181.138 398.264 li
181.608 395.526 li
179.619 393.588 li
182.368 393.188 li
183.597 390.697 li
cp
f
225.544 324.615 mo
226.773 327.105 li
229.522 327.505 li
227.533 329.443 li
228.003 332.181 li
225.544 330.889 li
223.086 332.181 li
223.556 329.443 li
221.566 327.505 li
224.315 327.105 li
225.544 324.615 li
cp
f
62.7988 247.124 mo
64.0278 249.614 li
66.7764 250.014 li
64.7876 251.952 li
65.2573 254.689 li
62.7988 253.397 li
60.3403 254.689 li
60.8096 251.952 li
58.8208 250.014 li
61.5698 249.614 li
62.7988 247.124 li
cp
f
426.59 367.208 mo
427.819 369.699 li
430.567 370.099 li
428.578 372.037 li
429.048 374.774 li
426.59 373.482 li
424.131 374.774 li
424.601 372.037 li
422.612 370.099 li
425.36 369.699 li
426.59 367.208 li
cp
f
93.8511 323.591 mo
94.6758 325.262 li
96.5195 325.529 li
95.1855 326.83 li
95.5005 328.666 li
93.8511 327.8 li
92.2021 328.666 li
92.5171 326.83 li
91.1831 325.529 li
93.0269 325.262 li
93.8511 323.591 li
cp
f
373.608 311.723 mo
374.434 313.394 li
376.277 313.662 li
374.942 314.962 li
375.258 316.799 li
373.608 315.932 li
371.96 316.799 li
372.274 314.962 li
370.94 313.662 li
372.784 313.394 li
373.608 311.723 li
cp
f
70.2622 425.358 mo
71.0869 427.029 li
72.9307 427.297 li
71.5967 428.598 li
71.9116 430.434 li
70.2622 429.567 li
68.6133 430.434 li
68.9282 428.598 li
67.5942 427.297 li
69.438 427.029 li
70.2622 425.358 li
cp
f
195.046 181.125 mo
195.871 182.796 li
197.714 183.064 li
196.38 184.364 li
196.695 186.201 li
195.046 185.334 li
193.396 186.201 li
193.711 184.364 li
192.377 183.064 li
194.221 182.796 li
195.046 181.125 li
cp
f
298.381 286.202 mo
299.206 287.873 li
301.05 288.141 li
299.716 289.441 li
300.03 291.277 li
298.381 290.41 li
296.732 291.277 li
297.047 289.441 li
295.713 288.141 li
297.557 287.873 li
298.381 286.202 li
cp
f
15.6299 421.795 mo
16.4546 423.466 li
18.2983 423.733 li
16.9639 425.034 li
17.2793 426.87 li
15.6299 426.004 li
13.981 426.87 li
14.2959 425.034 li
12.9614 423.733 li
14.8052 423.466 li
15.6299 421.795 li
cp
f
78.8076 115.377 mo
80.0366 117.868 li
82.7852 118.268 li
80.7964 120.206 li
81.2656 122.944 li
78.8076 121.651 li
76.3491 122.944 li
76.8184 120.206 li
74.8296 118.268 li
77.5781 117.868 li
78.8076 115.377 li
cp
f
422.738 83.2056 mo
423.968 85.6963 li
426.716 86.0957 li
424.728 88.0347 li
425.196 90.772 li
422.738 89.4795 li
420.279 90.772 li
420.749 88.0347 li
418.761 86.0957 li
421.509 85.6963 li
422.738 83.2056 li
cp
f
259.335 281.424 mo
260.564 283.914 li
263.313 284.313 li
261.324 286.252 li
261.793 288.99 li
259.335 287.697 li
256.877 288.99 li
257.346 286.252 li
255.357 284.313 li
258.105 283.914 li
259.335 281.424 li
cp
f
387.197 102.874 mo
388.427 105.365 li
391.175 105.764 li
389.187 107.703 li
389.655 110.44 li
387.197 109.148 li
384.739 110.44 li
385.208 107.703 li
383.22 105.764 li
385.968 105.365 li
387.197 102.874 li
cp
f
39.9141 201.503 mo
41.1431 203.994 li
43.8916 204.394 li
41.9028 206.332 li
42.3726 209.07 li
39.9141 207.777 li
37.4556 209.07 li
37.9253 206.332 li
35.936 204.394 li
38.6846 203.994 li
39.9141 201.503 li
cp
f
380.587 233.628 mo
381.816 236.119 li
384.565 236.519 li
382.576 238.457 li
383.046 241.194 li
380.587 239.901 li
378.129 241.194 li
378.599 238.457 li
376.609 236.519 li
379.358 236.119 li
380.587 233.628 li
cp
f
425.118 245.336 mo
426.348 247.827 li
429.096 248.227 li
427.106 250.165 li
427.576 252.902 li
425.118 251.61 li
422.659 252.902 li
423.129 250.165 li
421.141 248.227 li
423.889 247.827 li
425.118 245.336 li
cp
f
309.736 123.162 mo
310.965 125.652 li
313.714 126.052 li
311.725 127.991 li
312.194 130.728 li
309.736 129.436 li
307.277 130.728 li
307.747 127.991 li
305.758 126.052 li
308.507 125.652 li
309.736 123.162 li
cp
f
270.987 48.397 mo
272.216 50.8877 li
274.965 51.2871 li
272.976 53.2261 li
273.445 55.9634 li
270.987 54.6709 li
268.528 55.9634 li
268.998 53.2261 li
267.01 51.2871 li
269.758 50.8877 li
270.987 48.397 li
cp
f
370.709 82.54 mo
371.533 84.2109 li
373.377 84.4785 li
372.043 85.7793 li
372.357 87.6157 li
370.709 86.7485 li
369.06 87.6157 li
369.374 85.7793 li
368.04 84.4785 li
369.884 84.2109 li
370.709 82.54 li
cp
f
301.05 58.1587 mo
301.874 59.8296 li
303.718 60.0977 li
302.384 61.3979 li
302.699 63.2344 li
301.05 62.3677 li
299.4 63.2344 li
299.716 61.3979 li
298.381 60.0977 li
300.225 59.8296 li
301.05 58.1587 li
cp
f
369.41 165.036 mo
370.235 166.707 li
372.079 166.975 li
370.745 168.275 li
371.06 170.111 li
369.41 169.244 li
367.762 170.111 li
368.076 168.275 li
366.742 166.975 li
368.586 166.707 li
369.41 165.036 li
cp
f
330.548 296.437 mo
325.766 294.29 li
321.286 297.012 li
321.851 291.8 li
317.877 288.381 li
323.008 287.307 li
325.032 282.472 li
327.639 287.02 li
332.863 287.45 li
329.344 291.335 li
330.548 296.437 li
cp
1 .87451 .301961 rgb
f
371.003 277.545 mo
367.052 272.996 li
361.064 273.673 li
364.169 268.509 li
361.676 263.024 li
367.546 264.381 li
371.992 260.314 li
372.516 266.317 li
377.757 269.289 li
372.21 271.642 li
371.003 277.545 li
cp
f
388.969 291.797 mo
385.99 287.289 li
380.587 287.188 li
383.954 282.961 li
382.381 277.791 li
387.441 279.688 li
391.871 276.594 li
391.632 281.992 li
395.943 285.25 li
390.735 286.69 li
388.969 291.797 li
cp
f
421.884 288.739 mo
417.608 286.126 li
413.031 288.167 li
414.195 283.293 li
410.841 279.571 li
415.836 279.172 li
418.339 274.831 li
420.262 279.458 li
425.164 280.497 li
421.357 283.756 li
421.884 288.739 li
cp
f
437.274 315.747 mo
431.31 312.754 li
425.463 315.972 li
426.466 309.374 li
421.6 304.807 li
428.185 303.722 li
431.023 297.683 li
434.09 303.61 li
440.712 304.444 li
436.022 309.192 li
437.274 315.747 li
cp
f
335.763 285.489 mo
335.32 284.622 li
357.076 273.524 li
357.519 274.392 li
335.763 285.489 li
cp
1 1 .8 rgb
f
380.223 277.785 mo
375.001 272.97 li
375.642 272.239 li
380.863 277.055 li
380.223 277.785 li
cp
f
398.16 285.207 mo
398.141 284.303 li
409.588 283.952 li
409.607 284.855 li
398.16 285.207 li
cp
f
426.921 299.43 mo
422.738 289.961 li
423.478 289.597 li
427.66 299.066 li
426.921 299.43 li
cp
f
441.894 308.64 mo
441.832 307.669 li
472.201 305.772 li
472.262 306.743 li
441.894 308.64 li
cp
f
427.695 277.251 mo
427.32 276.353 li
467.199 259.686 li
467.574 260.583 li
427.695 277.251 li
cp
f
46.9199 75.6929 mo
51.4058 68.0908 62.1094 54.0776 79.0444 63.2231 cv
79.0444 63.2231 73.874 63.7788 72.3931 66.2368 cv
72.3931 66.2368 75.2256 66.0933 80.4673 69.7524 cv
80.4673 69.7524 74.4404 68.9155 72.4424 70.8843 cv
72.4424 70.8843 77.5718 72.3931 77.8721 76.272 cv
76.9531 75.3569 64.8804 69.1943 46.9199 75.6929 cv
cp
80.3311 74.3774 mo
84.752 70.0688 92.938 75.5029 92.938 75.5029 cv
87.501 66.2773 80.9609 66.5815 80.9609 66.5815 cv
83.8184 62.6899 92.2896 64.3247 92.2896 64.3247 cv
65.312 46.4028 45.5059 66.4722 36.8232 78.5234 cv
44.2261 80.2148 li
72.4927 69.0327 86.125 84.0117 86.125 84.0117 cv
86.2163 77.4658 80.3311 74.3774 80.3311 74.3774 cv
cp
f
44.2646 82.6592 mo
42.4683 82.249 li
35.0654 80.5576 li
34.4873 80.4258 li
30.7842 71.105 li
25.6387 79.7139 li
15.6299 80.355 li
22.2271 87.9092 li
19.7441 97.626 li
28.9673 93.686 li
37.4414 99.0503 li
36.5444 89.061 li
44.2646 82.6592 li
cp
1 .87451 .301961 rgb
f
144.2 117.382 mo
137.219 116.87 li
132.839 122.329 li
131.17 115.532 li
124.625 113.053 li
130.573 109.365 li
130.908 102.374 li
136.253 106.892 li
143.006 105.05 li
140.361 111.53 li
144.2 117.382 li
cp
1 1 .8 rgb
f
113.071 275.237 mo
106.091 274.725 li
101.711 280.184 li
100.042 273.387 li
93.4961 270.908 li
99.4453 267.22 li
99.7798 260.229 li
105.125 264.747 li
111.878 262.904 li
109.233 269.385 li
113.071 275.237 li
cp
f
370.515 210.449 mo
365.917 209.55 li
362.569 212.827 li
362.005 208.176 li
357.854 206.005 li
362.102 204.031 li
362.884 199.412 li
366.074 202.842 li
370.709 202.159 li
368.433 206.253 li
370.515 210.449 li
cp
f
156.425 371.048 mo
148.432 369.483 li
142.612 375.182 li
141.629 367.096 li
134.412 363.321 li
141.798 359.889 li
143.158 351.858 li
148.705 357.822 li
156.762 356.634 li
152.805 363.752 li
156.425 371.048 li
cp
.847059 .266667 .266667 rgb
f
299.628 426.387 mo
300.858 418.336 li
294.924 412.758 li
302.961 411.44 li
306.433 404.072 li
310.169 411.309 li
318.249 412.333 li
312.521 418.124 li
314.044 426.125 li
306.768 422.467 li
299.628 426.387 li
cp
.898039 .866667 .682353 rgb
f
278.937 141.639 mo
275.337 134.332 li
267.278 133.155 li
273.114 127.474 li
271.744 119.446 li
278.95 123.241 li
286.162 119.457 li
284.779 127.483 li
290.607 133.172 li
282.547 134.337 li
278.937 141.639 li
cp
.658824 .866667 .658824 rgb
f
318.388 200.064 mo
314.789 192.758 li
306.729 191.581 li
312.566 185.9 li
311.195 177.871 li
318.401 181.667 li
325.613 177.882 li
324.23 185.908 li
330.059 191.598 li
321.998 192.763 li
318.388 200.064 li
cp
.4 .592157 .8 rgb
f
449.994 80.3516 mo
446.395 73.0454 li
438.335 71.8682 li
444.172 66.1875 li
442.801 58.1587 li
450.008 61.9546 li
457.22 58.1699 li
455.837 66.1963 li
461.665 71.8857 li
453.604 73.0508 li
449.994 80.3516 li
cp
f
364.274 51.9272 mo
360.676 44.6211 li
352.616 43.4438 li
358.453 37.7632 li
357.082 29.7344 li
364.288 33.5298 li
371.5 29.7451 li
370.117 37.7715 li
375.945 43.4609 li
367.885 44.6265 li
364.274 51.9272 li
cp
f
273.282 454.771 mo
269.684 447.464 li
261.624 446.287 li
267.461 440.606 li
266.09 432.578 li
273.296 436.373 li
280.508 432.589 li
279.125 440.615 li
284.953 446.305 li
276.893 447.47 li
273.282 454.771 li
cp
f
55.2651 134.637 mo
49.9092 136.152 li
48.1206 141.423 li
45.0249 136.797 li
39.459 136.725 li
42.9019 132.351 li
41.251 127.036 li
46.4741 128.958 li
51.0195 125.746 li
50.8047 131.308 li
55.2651 134.637 li
cp
1 1 .8 rgb
f
335.21 251.976 mo
330.808 248.038 li
325.067 249.434 li
327.451 244.029 li
324.352 239.001 li
330.228 239.599 li
334.052 235.097 li
335.299 240.87 li
340.763 243.115 li
335.657 246.086 li
335.21 251.976 li
cp
.376471 .729412 .145098 rgb
f
200.808 373.136 mo
195.67 371.021 li
191.016 374.055 li
191.439 368.515 li
187.116 365.025 li
192.516 363.717 li
194.498 358.526 li
197.412 363.257 li
202.96 363.539 li
199.361 367.771 li
200.808 373.136 li
cp
1 1 .8 rgb
f
336.074 315.999 mo
341.882 316.6 li
345.669 312.156 li
346.892 317.865 li
352.288 320.094 li
347.236 323.021 li
346.784 328.842 li
342.439 324.942 li
336.764 326.312 li
339.13 320.974 li
336.074 315.999 li
cp
f
219.787 235.074 mo
213.348 235.995 li
210.456 241.821 li
207.59 235.982 li
201.155 235.032 li
205.823 230.502 li
204.738 224.088 li
210.489 227.128 li
216.253 224.114 li
215.139 230.522 li
219.787 235.074 li
cp
f
349.151 80.2412 mo
342.712 81.1621 li
339.819 86.9888 li
336.954 81.1489 li
330.519 80.1992 li
335.188 75.6689 li
334.102 69.2554 li
339.853 72.2954 li
345.617 69.2813 li
344.503 75.6899 li
349.151 80.2412 li
cp
f
135.783 229.928 mo
138.823 230.613 li
141.111 228.499 li
141.397 231.602 li
144.116 233.124 li
141.254 234.355 li
140.646 237.411 li
138.59 235.069 li
135.496 235.436 li
137.087 232.757 li
135.783 229.928 li
cp
f
366.284 394.26 mo
361.175 394.049 li
358.104 398.138 li
356.726 393.213 li
351.887 391.555 li
356.146 388.723 li
356.227 383.609 li
360.236 386.784 li
365.125 385.281 li
363.344 390.075 li
366.284 394.26 li
cp
f
243.597 411.718 mo
240.755 413.121 li
240.299 416.257 li
238.086 413.987 li
234.963 414.523 li
236.438 411.718 li
234.963 408.913 li
238.086 409.448 li
240.299 407.179 li
240.755 410.315 li
243.597 411.718 li
cp
f
33.0781 395.132 mo
30.2979 394.361 li
28.0874 396.215 li
27.9609 393.333 li
25.5146 391.804 li
28.2168 390.792 li
28.916 387.993 li
30.7124 390.251 li
33.5903 390.051 li
31.9985 392.457 li
33.0781 395.132 li
cp
f
25.8828 346.816 mo
21.0801 346.686 li
18.2495 350.567 li
16.8896 345.959 li
12.3228 344.467 li
16.2856 341.75 li
16.2939 336.945 li
20.1025 339.874 li
24.6743 338.397 li
23.0654 342.925 li
25.8828 346.816 li
cp
f
151.818 189.778 mo
151.818 193.986 148.407 197.396 144.2 197.396 cv
139.992 197.396 136.582 193.986 136.582 189.778 cv
136.582 185.571 139.992 182.16 144.2 182.16 cv
148.407 182.16 151.818 185.571 151.818 189.778 cv
cp
1 .87451 .301961 rgb
f
288.271 26.7832 mo
288.271 30.9907 284.859 34.4014 280.651 34.4014 cv
276.444 34.4014 273.033 30.9907 273.033 26.7832 cv
273.033 22.5757 276.444 19.1646 280.651 19.1646 cv
284.859 19.1646 288.271 22.5757 288.271 26.7832 cv
cp
f
457.618 227.023 mo
457.618 231.23 454.207 234.642 450 234.642 cv
445.793 234.642 442.382 231.23 442.382 227.023 cv
442.382 222.816 445.793 219.405 450 219.405 cv
454.207 219.405 457.618 222.816 457.618 227.023 cv
cp
f
440.354 38.1846 mo
440.354 42.3921 436.944 45.8032 432.736 45.8032 cv
428.529 45.8032 425.118 42.3921 425.118 38.1846 cv
425.118 33.9771 428.529 30.5664 432.736 30.5664 cv
436.944 30.5664 440.354 33.9771 440.354 38.1846 cv
cp
f
313.377 86.9888 mo
313.377 91.1963 309.966 94.6074 305.758 94.6074 cv
301.551 94.6074 298.14 91.1963 298.14 86.9888 cv
298.14 82.7813 301.551 79.3706 305.758 79.3706 cv
309.966 79.3706 313.377 82.7813 313.377 86.9888 cv
cp
.847059 .266667 .266667 rgb
f
171.925 146.22 mo
171.925 150.638 168.344 154.22 163.925 154.22 cv
159.507 154.22 155.925 150.638 155.925 146.22 cv
155.925 141.801 159.507 138.22 163.925 138.22 cv
168.344 138.22 171.925 141.801 171.925 146.22 cv
cp
.376471 .729412 .145098 rgb
f
407.761 225 mo
407.761 229.418 404.179 233 399.761 233 cv
395.343 233 391.761 229.418 391.761 225 cv
391.761 220.582 395.343 217 399.761 217 cv
404.179 217 407.761 220.582 407.761 225 cv
cp
.466667 .823529 .862745 rgb
f
190.368 212 mo
190.368 216.418 186.786 220 182.368 220 cv
177.949 220 174.368 216.418 174.368 212 cv
174.368 207.582 177.949 204 182.368 204 cv
186.786 204 190.368 207.582 190.368 212 cv
cp
f
347.835 451.846 mo
347.835 456.264 344.253 459.846 339.835 459.846 cv
335.417 459.846 331.835 456.264 331.835 451.846 cv
331.835 447.427 335.417 443.846 339.835 443.846 cv
344.253 443.846 347.835 447.427 347.835 451.846 cv
cp
.376471 .729412 .145098 rgb
f
374.164 351.399 mo
374.164 344.334 379.892 338.606 386.957 338.606 cv
394.022 338.606 399.75 344.334 399.75 351.399 cv
399.75 358.465 394.022 364.192 386.957 364.192 cv
379.892 364.192 374.164 358.465 374.164 351.399 cv
cp
1 .901961 .180392 rgb
f
127.667 405.93 mo
127.667 409.897 124.451 413.113 120.484 413.113 cv
116.517 413.113 113.301 409.897 113.301 405.93 cv
113.301 401.963 116.517 398.747 120.484 398.747 cv
124.451 398.747 127.667 401.963 127.667 405.93 cv
cp
.376471 .729412 .145098 rgb
f
412.262 320.165 mo
412.262 324.132 409.046 327.348 405.079 327.348 cv
401.112 327.348 397.896 324.132 397.896 320.165 cv
397.896 316.198 401.112 312.982 405.079 312.982 cv
409.046 312.982 412.262 316.198 412.262 320.165 cv
cp
f
110.172 136.847 mo
110.172 140.558 107.164 143.566 103.453 143.566 cv
99.7422 143.566 96.7344 140.558 96.7344 136.847 cv
96.7344 133.136 99.7422 130.128 103.453 130.128 cv
107.164 130.128 110.172 133.136 110.172 136.847 cv
cp
.466667 .823529 .862745 rgb
f
403.729 72.7744 mo
403.729 77.5957 399.82 81.5039 394.999 81.5039 cv
390.178 81.5039 386.27 77.5957 386.27 72.7744 cv
386.27 67.9536 390.178 64.0454 394.999 64.0454 cv
399.82 64.0454 403.729 67.9536 403.729 72.7744 cv
cp
.376471 .729412 .145098 rgb
f
71.0171 284.122 mo
71.0171 289.478 66.6753 293.819 61.3193 293.819 cv
55.9634 293.819 51.6216 289.478 51.6216 284.122 cv
51.6216 278.766 55.9634 274.424 61.3193 274.424 cv
66.6753 274.424 71.0171 278.766 71.0171 284.122 cv
cp
1 .933333 .427451 rgb
f
34.9463 156.697 mo
34.9463 184.054 12.769 206.231 -14.5883 206.231 cv
-41.9458 206.231 -64.1231 184.054 -64.1231 156.697 cv
-64.1231 129.339 -41.9458 107.162 -14.5883 107.162 cv
12.769 107.162 34.9463 129.339 34.9463 156.697 cv
.631373 .894118 1 rgb
f
-14.5904 204.016 mo
-40.6851 204.016 -61.9135 182.785 -61.9135 156.697 cv
-61.9135 139.46 -52.6451 124.344 -38.8296 116.07 cv
-38.3052 116.456 -37.6465 116.719 -36.8057 116.719 cv
-36.8057 116.719 -35.898 116.719 -41.6973 121.249 cv
-47.499 125.784 -46.9585 132.071 -45.1455 128.113 cv
-43.3305 124.151 -41.6973 125.602 -44.5996 131.225 cv
-47.499 136.847 -43.0733 135.032 -41.5742 138.475 cv
-40.0669 141.918 -39.5234 137.751 -38.8003 144.279 cv
-38.8003 144.279 -36.9799 146.453 -33.7212 145.366 cv
-30.4581 144.279 -34.2652 148.263 -37.7109 151.53 cv
-41.1562 154.795 -40.0699 155.878 -38.2539 157.875 cv
-36.4414 159.872 -35.7133 161.5 -37.3462 163.68 cv
-38.9771 165.853 -34.8081 166.576 -33.7212 167.845 cv
-32.6343 169.114 -32.8164 173.286 -35.3521 175.101 cv
-37.8872 176.911 -34.083 180.9 -34.6319 186.522 cv
-35.1753 192.139 -35.0415 194.496 -32.479 194.859 cv
-29.9145 195.223 -32.8164 189.966 -31.7295 187.609 cv
-31.3149 186.713 -30.8741 186.735 -30.3474 186.757 cv
-29.4894 186.793 -28.4036 186.829 -26.8325 182.897 cv
-26.8325 182.897 -22.2959 183.984 -20.3091 177.093 cv
-20.3091 177.093 -16.3204 176.546 -15.5919 174.373 cv
-14.8638 172.199 -15.7739 170.748 -9.97455 166.035 cv
-4.17573 161.317 -13.9639 157.693 -19.2168 157.511 cv
-19.2168 157.511 -21.1445 158.298 -17.7662 152.252 cv
-16.2934 149.612 -20.6679 150.26 -21.7549 147.905 cv
-22.8422 145.548 -25.3798 142.828 -30.4581 143.369 cv
-35.5337 143.916 -36.9902 145.731 -37.164 142.646 cv
-37.3462 139.562 -34.9931 138.116 -37.5313 137.751 cv
-40.0669 137.388 -38.8003 137.206 -36.0747 134.667 cv
-36.0747 134.667 -37.7109 133.575 -39.3414 135.214 cv
-40.9742 136.847 -43.8764 134.309 -40.4311 130.684 cv
-36.9799 127.053 -31.5474 124.333 -31.9092 131.225 cv
-32.2701 138.116 -29.7319 128.113 -29.7319 128.113 cv
-29.7319 128.113 -25.9253 123.246 -21.209 122.887 cv
-16.5024 122.523 -19.399 122.341 -19.399 120.708 cv
-19.399 119.856 -18.8028 120.642 -17.8564 121.428 cv
-16.9957 122.144 -15.8453 122.859 -14.5904 122.341 cv
-11.9668 121.249 -17.4067 120.89 -16.8608 119.08 cv
-16.3204 117.265 -13.2304 117.806 -11.9668 120.167 cv
-10.6977 122.523 -9.24659 118.898 -12.5078 115.085 cv
-15.7739 111.284 -15.2276 113.64 -18.3121 115.268 cv
-21.3911 116.901 -20.122 117.806 -20.6679 115.085 cv
-20.973 113.555 -21.1639 113.808 -21.5324 114.061 cv
-21.8177 114.257 -22.2093 114.452 -22.8422 113.822 cv
-24.2983 112.371 -20.2558 113.04 -18.1304 113.276 cv
-16.0044 113.506 -16.6787 112.006 -16.6787 112.006 cv
-14.5904 111.102 li
-14.5904 111.102 -13.2304 113.094 -11.603 112.729 cv
-9.97455 112.371 -12.69 109.827 -11.062 110.191 cv
-10.5177 110.313 -9.91332 110.232 -9.34268 110.152 cv
-8.20112 109.991 -7.19419 109.831 -7.07282 111.284 cv
-6.89062 113.457 -8.34176 116.36 -2.35501 113.094 cv
-1.14497 112.435 -.336371 112.006 .215272 111.75 cv
.621624 111.883 1.01854 112.022 1.41998 112.173 cv
1.45756 112.606 1.5967 113.169 2.35692 113.64 cv
4.71289 115.085 3.99026 113.816 7.06885 115.632 cv
10.1539 117.447 8.15629 119.439 10.5123 119.803 cv
12.8682 120.167 15.0473 123.428 13.2378 123.61 cv
11.4224 123.792 11.2408 121.618 8.52532 121.249 cv
5.79977 120.89 9.61235 122.154 11.4224 123.792 cv
13.2378 125.42 13.2378 127.354 11.4224 128.113 cv
9.61235 128.868 10.9511 133.04 13.9067 132.494 cv
16.8629 131.947 15.7705 128.868 17.4033 129.597 cv
19.0366 130.319 18.4907 132.13 21.2109 133.222 cv
23.9365 134.309 20.8467 135.755 24.1132 135.937 cv
27.3793 136.119 29.0068 137.388 26.1049 138.657 cv
23.2031 139.931 24.6591 141.013 22.1158 137.929 cv
19.5776 134.85 19.8296 137.8 19.5776 134.85 cv
19.331 131.899 15.2299 134.667 13.0556 135.032 cv
10.8765 135.396 12.6914 137.57 10.6943 137.929 cv
8.69672 138.293 7.79203 137.751 8.33835 142.464 cv
8.87892 147.182 7.61517 148.263 5.43607 148.263 cv
3.26175 148.263 7.25638 150.801 8.33835 154.067 cv
9.42578 157.329 9.61235 159.326 14.3247 158.057 cv
19.0366 156.788 17.5855 156.788 18.1318 159.326 cv
18.4023 160.595 19.0368 160.232 19.6485 159.869 cv
20.2603 159.507 20.8493 159.144 21.0287 160.413 cv
21.3926 162.951 16.4986 163.497 19.2133 165.125 cv
21.9341 166.753 19.9473 170.565 18.6729 171.47 cv
17.4033 172.38 18.3087 175.636 15.5942 177.093 cv
12.8682 178.544 16.8629 181.077 15.2299 182.715 cv
13.6015 184.348 9.24372 186.34 10.8765 190.33 cv
12.5152 194.313 12.5152 191.957 15.958 189.055 cv
19.3955 186.158 22.3032 181.264 23.9365 181.446 cv
24.52 181.511 24.7984 181.966 25.1465 182.351 cv
16.7027 195.379 2.04638 204.016 -14.5904 204.016 cv
-14.5904 106.657 mo
-42.1871 106.657 -64.6337 129.104 -64.6337 156.697 cv
-64.6337 184.284 -42.1871 206.736 -14.5904 206.736 cv
12.9966 206.736 35.4434 184.284 35.4434 156.697 cv
35.4434 129.104 12.9966 106.657 -14.5904 106.657 cv
.376471 .729412 .145098 rgb
f
0 201.713 mo
0 179.721 li
3.46141 180.487 7.06013 180.891 10.752 180.891 cv
12.3115 180.891 13.854 180.818 15.3762 180.677 cv
15.6745 181.411 15.8213 182.122 15.2299 182.715 cv
13.6015 184.348 9.24372 186.34 10.8765 190.33 cv
11.4996 191.844 11.8858 192.442 12.3144 192.442 cv
13.013 192.442 13.8243 190.854 15.958 189.055 cv
19.3332 186.211 22.1976 181.441 23.8464 181.441 cv
23.8769 181.441 23.9069 181.442 23.9365 181.446 cv
24.52 181.511 24.7984 181.966 25.1465 182.351 cv
19.2857 191.393 10.4315 198.321 0 201.713 cv
.4 .8 1 rgb
f
0 204.047 mo
0 201.713 li
10.4315 198.321 19.2857 191.393 25.1465 182.351 cv
24.7984 181.966 24.52 181.511 23.9365 181.446 cv
23.9069 181.442 23.8769 181.441 23.8464 181.441 cv
22.1976 181.441 19.3332 186.211 15.958 189.055 cv
13.8243 190.854 13.013 192.442 12.3144 192.442 cv
11.8858 192.442 11.4996 191.844 10.8765 190.33 cv
9.24372 186.34 13.6015 184.348 15.2299 182.715 cv
15.8213 182.122 15.6745 181.411 15.3762 180.677 cv
20.797 180.171 25.962 178.788 30.7358 176.681 cv
24.9793 189.716 13.7717 199.805 0 204.047 cv
.239216 .65098 .145098 rgb
f
34.3384 314.229 mo
31.6431 308.759 li
25.6084 307.878 li
29.978 303.624 li
28.9512 297.612 li
34.3472 300.454 li
39.7471 297.619 li
38.7124 303.629 li
43.0767 307.889 li
37.041 308.762 li
34.3384 314.229 li
cp
1 .87451 .301961 rgb
f
29.6719 267.601 mo
26.2573 261.856 li
19.5894 261.414 li
23.9971 256.391 li
22.3584 249.913 li
28.4971 252.553 li
34.1519 248.992 li
33.5386 255.646 li
38.6724 259.924 li
32.1543 261.396 li
29.6719 267.601 li
cp
f
-8.10693 308.64 mo
-8.16797 307.669 li
22.2012 305.772 li
22.2622 306.743 li
-8.10693 308.64 li
cp
1 1 .8 rgb
f
33.3916 294.9 mo
32.2646 265.717 li
33.2373 265.679 li
34.3643 294.862 li
33.3916 294.9 li
cp
f
-22.3042 277.251 mo
-22.6792 276.353 li
17.1992 259.686 li
17.5742 260.583 li
-22.3042 277.251 li
cp
f
-.00634766 80.3516 mo
-3.60547 73.0454 li
-11.6646 71.8682 li
-5.82813 66.1875 li
-7.19873 58.1587 li
.00732422 61.9546 li
7.21924 58.1699 li
5.83643 66.1963 li
11.6646 71.8857 li
3.60352 73.0508 li
-.00634766 80.3516 li
cp
.4 .592157 .8 rgb
f
7.61816 227.023 mo
7.61816 231.23 4.20752 234.642 0 234.642 cv
-4.20752 234.642 -7.61816 231.23 -7.61816 227.023 cv
-7.61816 222.816 -4.20752 219.405 0 219.405 cv
4.20752 219.405 7.61816 222.816 7.61816 227.023 cv
cp
1 .87451 .301961 rgb
f
404.165 -59.812 mo
383.723 -59.812 367.15 -43.2402 367.15 -22.7974 cv
367.15 -2.35542 383.723 14.2168 404.165 14.2168 cv
424.607 14.2168 441.18 -2.35542 441.18 -22.7974 cv
441.18 -43.2402 424.607 -59.812 404.165 -59.812 cv
.847059 .266667 .266667 rgb
f
404.225 14.2168 mo
404.231 14.2168 404.236 14.2168 404.242 14.2168 cv
404.237 14.2168 404.231 14.2168 404.225 14.2168 cv
404.285 14.2167 mo
404.289 14.2166 404.292 14.2166 404.296 14.2166 cv
404.292 14.2166 404.289 14.2166 404.285 14.2167 cv
404.345 14.2164 mo
404.348 14.2164 404.351 14.2164 404.353 14.2164 cv
404.351 14.2164 404.348 14.2164 404.345 14.2164 cv
404.406 14.2161 mo
404.406 14.2161 li
404.406 14.2161 li
.0117647 .0352941 .0588235 rgb
f
404.165 14.2168 mo
392.322 14.2168 381.778 8.65464 375.002 0 cv
387.459 0 li
387.94 .627551 388.586 1.2215 389.365 1.71384 cv
390.537 2.45461 391.788 2.82522 392.861 2.8253 cv
393.93 2.82537 394.822 2.45797 395.287 1.72272 cv
395.599 1.22873 395.679 .631419 395.558 0 cv
417.512 0 li
421.502 1.81087 425.866 2.94104 430.457 3.24412 cv
423.802 9.96319 414.595 14.1511 404.406 14.2161 cv
404.406 14.2161 li
404.388 14.2162 404.371 14.2163 404.353 14.2164 cv
404.351 14.2164 404.348 14.2164 404.345 14.2164 cv
404.329 14.2165 404.312 14.2166 404.296 14.2166 cv
404.292 14.2166 404.289 14.2166 404.285 14.2167 cv
404.271 14.2167 404.257 14.2167 404.242 14.2168 cv
404.236 14.2168 404.231 14.2168 404.225 14.2168 cv
404.205 14.2168 404.185 14.2168 404.165 14.2168 cv
404.165 14.2168 li
416.188 3.36986 mo
415.689 3.36986 415.144 3.49357 414.618 3.75148 cv
413.241 4.42682 412.513 5.76656 412.991 6.7441 cv
413.288 7.34832 413.976 7.67254 414.784 7.67258 cv
415.283 7.6726 415.827 7.54887 416.353 7.29096 cv
417.731 6.61576 418.46 5.27588 417.98 4.29834 cv
417.684 3.69412 416.996 3.36986 416.188 3.36986 cv
.74902 .227451 .184314 rgb
f
392.861 2.8253 mo
391.788 2.82522 390.537 2.45461 389.365 1.71384 cv
388.586 1.2215 387.94 .627551 387.459 0 cv
388 0 li
388.384 .492715 388.895 .958235 389.508 1.34576 cv
390.45 1.94169 391.456 2.23976 392.319 2.23979 cv
393.179 2.23982 393.897 1.94428 394.271 1.353 cv
394.516 .964133 394.583 .495871 394.495 0 cv
395.558 0 li
395.679 .631419 395.599 1.22873 395.287 1.72272 cv
394.822 2.45797 393.93 2.82537 392.861 2.8253 cv
.662745 .196078 .12549 rgb
f
392.319 2.23979 mo
391.456 2.23976 390.45 1.94169 389.508 1.34576 cv
388.895 .958235 388.384 .492715 388 0 cv
394.495 0 li
394.583 .495871 394.516 .964133 394.271 1.353 cv
393.897 1.94428 393.179 2.23982 392.319 2.23979 cv
.839216 .32549 .239216 rgb
f
414.784 7.67258 mo
413.976 7.67254 413.288 7.34832 412.991 6.7441 cv
412.513 5.76656 413.241 4.42682 414.618 3.75148 cv
415.144 3.49357 415.689 3.36986 416.188 3.36986 cv
416.996 3.36986 417.684 3.69412 417.98 4.29834 cv
418.46 5.27588 417.731 6.61576 416.353 7.29096 cv
415.827 7.54887 415.283 7.6726 414.784 7.67258 cv
.854902 .352941 .282353 rgb
f
179.378 -29.1582 mo
181.022 -26.1753 183.712 -26.1753 185.356 -29.1582 cv
187 -32.1411 189.233 -31.9399 190.318 -28.7119 cv
191.403 -25.4834 194.05 -25.0029 196.201 -27.644 cv
198.351 -30.2856 200.512 -29.689 201.003 -26.3188 cv
201.494 -22.9487 204.012 -22.0034 206.6 -24.2183 cv
209.187 -26.4331 211.207 -25.4609 211.088 -22.0566 cv
210.97 -18.6528 213.279 -17.2729 216.22 -18.9907 cv
219.161 -20.708 220.975 -19.3906 220.25 -16.0625 cv
219.526 -12.7344 221.552 -10.9644 224.752 -12.1289 cv
227.953 -13.2935 229.502 -11.6733 228.195 -8.52832 cv
226.888 -5.3833 228.565 -3.27979 231.923 -3.85449 cv
235.279 -4.42871 236.515 -2.55762 234.667 .303223 cv
232.819 3.16455 234.094 5.5332 237.5 5.56787 cv
240.905 5.60205 241.786 7.66309 239.458 10.1484 cv
237.129 12.6338 237.96 15.1924 241.305 15.834 cv
244.65 16.4761 245.148 18.6616 242.414 20.6909 cv
239.679 22.7207 240.04 25.3862 243.216 26.6152 cv
246.393 27.8438 246.493 30.0835 243.439 31.5918 cv
240.386 33.1006 240.266 35.7881 243.172 37.564 cv
246.077 39.3403 245.776 41.5615 242.503 42.5005 cv
239.229 43.4395 238.63 46.0625 241.173 48.3291 cv
243.715 50.5957 243.022 52.7275 239.633 53.0669 cv
236.244 53.4063 235.187 55.8799 237.283 58.564 cv
239.38 61.248 238.317 63.2222 234.923 62.9512 cv
231.527 62.6797 230.046 64.9248 231.629 67.9404 cv
233.213 70.9556 231.815 72.708 228.523 71.835 cv
225.231 70.9619 223.372 72.9067 224.392 76.1563 cv
225.412 79.4058 223.724 80.8809 220.64 79.4336 cv
217.557 77.9868 215.38 79.5684 215.804 82.9478 cv
216.227 86.3271 214.303 87.4771 211.527 85.5029 cv
208.752 83.5288 206.328 84.6958 206.141 88.0967 cv
205.954 91.4976 203.855 92.2852 201.477 89.8472 cv
199.099 87.4092 196.505 88.125 195.714 91.4375 cv
194.923 94.7505 192.717 95.1504 190.813 92.3271 cv
188.908 89.5034 186.229 89.7446 184.858 92.8628 cv
183.488 95.9814 181.247 95.9814 179.876 92.8628 cv
178.507 89.7446 175.827 89.5034 173.922 92.3271 cv
172.018 95.1504 169.812 94.7505 169.021 91.4375 cv
168.229 88.125 165.636 87.4092 163.258 89.8472 cv
160.88 92.2852 158.781 91.4976 158.594 88.0967 cv
158.407 84.6958 155.983 83.5288 153.208 85.5029 cv
150.433 87.4771 148.508 86.3271 148.931 82.9478 cv
149.354 79.5684 147.178 77.9868 144.095 79.4336 cv
141.012 80.8809 139.323 79.4058 140.343 76.1563 cv
141.363 72.9067 139.504 70.9619 136.212 71.835 cv
132.92 72.708 131.522 70.9556 133.106 67.9404 cv
134.689 64.9248 133.208 62.6797 129.813 62.9512 cv
126.417 63.2222 125.355 61.248 127.452 58.564 cv
129.548 55.8799 128.491 53.4063 125.102 53.0669 cv
121.713 52.7275 121.021 50.5957 123.563 48.3291 cv
126.105 46.0625 125.506 43.4395 122.232 42.5005 cv
118.958 41.5615 118.658 39.3403 121.563 37.564 cv
124.47 35.7881 124.349 33.1006 121.295 31.5918 cv
118.242 30.0835 118.342 27.8438 121.519 26.6152 cv
124.695 25.3862 125.057 22.7207 122.321 20.6909 cv
119.586 18.6616 120.085 16.4761 123.43 15.834 cv
126.775 15.1924 127.606 12.6338 125.277 10.1484 cv
122.949 7.66309 123.83 5.60205 127.235 5.56787 cv
130.641 5.5332 131.916 3.16455 130.068 .303223 cv
128.221 -2.55762 129.456 -4.42871 132.813 -3.85449 cv
136.17 -3.27979 137.847 -5.3833 136.54 -8.52832 cv
135.233 -11.6733 136.782 -13.2935 139.983 -12.1289 cv
143.183 -10.9644 145.209 -12.7344 144.485 -16.0625 cv
143.76 -19.3906 145.574 -20.708 148.515 -18.9907 cv
151.456 -17.2729 153.766 -18.6528 153.647 -22.0566 cv
153.528 -25.4609 155.548 -26.4331 158.135 -24.2183 cv
160.723 -22.0034 163.241 -22.9487 163.732 -26.3188 cv
164.224 -29.689 166.384 -30.2856 168.535 -27.644 cv
170.685 -25.0029 173.332 -25.4834 174.417 -28.7119 cv
175.501 -31.9399 177.734 -32.1411 179.378 -29.1582 cv
cp
1 .4 .2 rgb
f
238.932 31.9653 mo
238.932 63.2051 213.607 88.5298 182.368 88.5298 cv
151.128 88.5298 125.803 63.2051 125.803 31.9653 cv
125.803 .726074 151.128 -24.5986 182.368 -24.5986 cv
213.607 -24.5986 238.932 .726074 238.932 31.9653 cv
cp
1 .901961 .180392 rgb
f
63.9463 -7.17773 mo
55.0732 -8.55664 45.9561 -5.24902 37.0952 -6.7041 cv
34.0313 -7.20752 31.1196 -8.26074 28.3008 -9.57275 cv
27.353 -8.31396 26.5396 -6.94873 25.8828 -5.49756 cv
36.4985 -5.14502 47.0615 -3.2334 57.124 .166992 cv
60.3125 1.24414 63.7549 2.47803 66.9541 1.47461 cv
66.6841 -1.62354 65.7583 -4.5332 64.3159 -7.11572 cv
64.1929 -7.13672 64.0698 -7.15869 63.9463 -7.17773 cv
cp
.027451 .682353 .462745 rgb
f
57.1241 .167024 mo
47.0615 -3.23346 36.4985 -5.14507 25.8828 -5.49757 cv
25.0268 -3.60495 24.437 -1.56595 24.1597 .570779 cv
38.4073 2.31346 52.6133 4.39306 66.7627 6.80807 cv
66.9424 5.68756 67.0375 4.53766 67.0375 3.36576 cv
67.0375 2.72856 67.0083 2.09764 66.9542 1.47465 cv
63.7549 2.47802 60.3126 1.2442 57.1241 .167024 cv
.6 1 1 rgb
f
29.5635 17.8311 mo
31.1811 19.6138 33.0937 21.1231 35.2241 22.2837 cv
40.6807 21.3911 46.3838 21.9926 51.52 24.043 cv
53.9502 23.3378 56.2026 22.2153 58.1963 20.7588 cv
48.9625 17.9463 39.1768 16.958 29.5635 17.8311 cv
.027451 .682353 .462745 rgb
f
53.6186 11.147 mo
50.5332 10.1391 47.2251 10.1201 43.9795 10.1108 cv
37.7578 10.0928 31.4903 10.0806 25.3379 10.9048 cv
26.3023 13.4844 27.7466 15.8295 29.5635 17.8311 cv
39.1768 16.958 48.9625 17.9463 58.1963 20.7588 cv
60.3764 19.1661 62.2461 17.1738 63.6962 14.8886 cv
61.9292 14.4688 60.1938 13.9219 58.5059 13.2129 cv
56.8745 12.5279 55.3008 11.6967 53.6186 11.147 cv
.658824 .866667 .658824 rgb
f
23.9795 3.36576 mo
23.9795 6.0186 24.4604 8.55854 25.3379 10.9048 cv
31.4903 10.0806 37.7578 10.0928 43.9795 10.1108 cv
47.2251 10.1201 50.5332 10.1391 53.6186 11.147 cv
55.3008 11.6967 56.8745 12.5279 58.5059 13.2129 cv
60.1938 13.9219 61.9292 14.4688 63.6962 14.8886 cv
65.2271 12.478 66.2906 9.74274 66.7627 6.80807 cv
52.6133 4.39306 38.4073 2.31346 24.1597 .570779 cv
24.0415 1.48586 23.9795 2.41843 23.9795 3.36576 cv
.466667 .823529 .862745 rgb
f
35.2241 22.2837 mo
38.3033 24.2495 40.7764 24.7417 45.5083 24.895 cv
47.5943 24.9624 49.6118 24.5967 51.52 24.043 cv
46.3838 21.9926 40.6807 21.3911 35.2241 22.2837 cv
.6 1 1 rgb
f
45.4531 24.8951 mo
43.2618 24.8951 41.3644 24.7077 39.6047 24.2338 cv
41.2345 24.6473 43.0718 24.8161 45.5083 24.895 cv
45.5083 24.895 li
45.5083 24.895 li
45.4896 24.8951 45.4717 24.8951 45.4531 24.8951 cv
47.5195 24.8318 mo
48.8945 24.7048 50.2321 24.4167 51.52 24.043 cv
51.52 24.043 li
51.52 24.043 li
53.9502 23.3378 56.2026 22.2153 58.1963 20.7588 cv
58.1963 20.7588 li
58.1963 20.7588 li
58.1963 20.7588 li
56.2026 22.2153 53.9502 23.3378 51.52 24.043 cv
50.1144 24.4508 49.1279 24.7178 47.5195 24.8318 cv
51.4005 23.9956 mo
51.3927 23.9925 51.3848 23.9894 51.3769 23.9863 cv
51.3848 23.9894 51.3927 23.9925 51.4005 23.9956 cv
51.2593 23.9403 mo
47.74 22.5741 43.9621 21.8832 40.186 21.8826 cv
43.9624 21.8831 47.7397 22.5739 51.2593 23.9403 cv
40.1779 21.8826 mo
40.179 21.8826 40.1799 21.8826 40.1809 21.8826 cv
40.1809 21.8826 li
40.1799 21.8826 40.179 21.8826 40.1779 21.8826 cv
57.9569 20.6863 mo
50.9691 18.584 43.668 17.5242 36.3695 17.5235 cv
43.6686 17.5241 50.9685 18.5839 57.9569 20.6863 cv
36.3602 17.5235 mo
36.3608 17.5235 36.3617 17.5235 36.3623 17.5235 cv
36.3623 17.5235 li
36.3617 17.5235 36.3608 17.5235 36.3602 17.5235 cv
25.3379 10.9048 mo
25.3811 10.899 25.4248 10.8932 25.468 10.8875 cv
25.4248 10.8932 25.3811 10.899 25.3379 10.9048 cv
43.9795 10.1108 mo
43.1061 10.1083 42.2313 10.1059 41.3565 10.1059 cv
42.2317 10.1059 43.1057 10.1083 43.9795 10.1108 cv
41.3474 10.1059 mo
41.3501 10.1059 41.3524 10.1059 41.355 10.1059 cv
41.355 10.1059 li
41.3524 10.1059 41.3501 10.1059 41.3474 10.1059 cv
.00784314 .0352941 .0745098 rgb
f
51.52 24.043 mo
51.52 24.043 li
51.4802 24.0271 51.4404 24.0113 51.4005 23.9956 cv
51.3927 23.9925 51.3848 23.9894 51.3769 23.9863 cv
51.3377 23.9708 51.2987 23.9556 51.2593 23.9403 cv
47.7397 22.5739 43.9624 21.8831 40.186 21.8826 cv
40.1843 21.8826 40.1826 21.8826 40.1809 21.8826 cv
40.1809 21.8826 li
40.1809 21.8826 li
40.1799 21.8826 40.179 21.8826 40.1779 21.8826 cv
38.519 21.8827 36.8607 22.016 35.2241 22.2837 cv
35.2241 22.2837 li
33.0937 21.1231 31.1811 19.6138 29.5635 17.8311 cv
31.8225 17.6259 34.0916 17.5235 36.3602 17.5235 cv
36.3608 17.5235 36.3617 17.5235 36.3623 17.5235 cv
36.3647 17.5235 36.3672 17.5235 36.3695 17.5235 cv
43.668 17.5242 50.9691 18.584 57.9569 20.6863 cv
58.037 20.7104 58.1163 20.7344 58.1963 20.7588 cv
56.2026 22.2153 53.9502 23.3378 51.52 24.043 cv
.0196078 .54902 .407843 rgb
f
58.1963 20.7588 mo
58.1963 20.7588 li
58.1163 20.7344 58.037 20.7104 57.9569 20.6863 cv
50.9685 18.5839 43.6686 17.5241 36.3695 17.5235 cv
36.3672 17.5235 36.3647 17.5235 36.3623 17.5235 cv
36.3623 17.5235 li
36.3617 17.5235 36.3608 17.5235 36.3602 17.5235 cv
34.0916 17.5235 31.8225 17.6259 29.5635 17.8311 cv
29.5635 17.8311 li
27.7466 15.8295 26.3023 13.4844 25.3379 10.9048 cv
25.3379 10.9048 li
25.3811 10.899 25.4248 10.8932 25.468 10.8875 cv
30.7115 10.1952 36.0379 10.106 41.3474 10.1059 cv
41.3501 10.1059 41.3524 10.1059 41.355 10.1059 cv
41.3554 10.1059 41.3561 10.1059 41.3565 10.1059 cv
42.2313 10.1059 43.1061 10.1083 43.9795 10.1108 cv
43.9795 10.1108 li
44.9928 10.1137 46.0119 10.1176 47.0287 10.1522 cv
51.1325 13.8911 56.5894 16.1708 62.5786 16.1708 cv
62.7988 16.1655 li
61.5005 17.916 59.9565 19.4726 58.1963 20.7588 cv
58.1963 20.7588 li
.47451 .698039 .580392 rgb
f
41.6633 2.88424 mo
35.8363 2.0565 30.0017 1.28534 24.1597 .570779 cv
24.1845 .37972 24.2118 .189461 24.2416 0 cv
40.5389 0 li
40.8503 .991864 41.2267 1.95504 41.6633 2.88424 cv
.431373 .803922 .882353 rgb
f
25.3379 10.9048 mo
24.4604 8.55854 23.9795 6.0186 23.9795 3.36576 cv
23.9795 2.41843 24.0415 1.48586 24.1597 .570779 cv
24.1597 .570779 li
30.0017 1.28534 35.8363 2.0565 41.6633 2.88424 cv
42.963 5.6507 44.7956 8.11768 47.0287 10.1522 cv
46.0119 10.1176 44.9928 10.1137 43.9795 10.1108 cv
43.9795 10.1108 li
43.1057 10.1083 42.2317 10.1059 41.3565 10.1059 cv
41.3561 10.1059 41.3554 10.1059 41.355 10.1059 cv
41.355 10.1059 li
41.3524 10.1059 41.3501 10.1059 41.3474 10.1059 cv
36.0379 10.106 30.7115 10.1952 25.468 10.8875 cv
25.4248 10.8932 25.3811 10.899 25.3379 10.9048 cv
25.3379 10.9048 li
25.3379 10.9048 li
.337255 .662745 .760784 rgb
f
45.5083 24.895 mo
45.5083 24.895 li
43.0718 24.8161 41.2345 24.6473 39.6047 24.2338 cv
38.0753 23.822 36.6494 23.1937 35.2241 22.2837 cv
35.2241 22.2837 li
35.2241 22.2837 li
36.8607 22.016 38.519 21.8827 40.1779 21.8826 cv
40.179 21.8826 40.1799 21.8826 40.1809 21.8826 cv
40.1809 21.8826 li
40.1826 21.8826 40.1843 21.8826 40.186 21.8826 cv
43.9621 21.8832 47.74 22.5741 51.2593 23.9403 cv
51.2987 23.9556 51.3377 23.9708 51.3769 23.9863 cv
51.3848 23.9894 51.3927 23.9925 51.4005 23.9956 cv
51.4404 24.0113 51.4802 24.0271 51.52 24.043 cv
51.52 24.043 li
50.2321 24.4167 48.8945 24.7048 47.5195 24.8318 cv
46.9445 24.8726 46.2899 24.8939 45.5083 24.895 cv
.431373 .803922 .882353 rgb
f
273.282 4.77051 mo
269.684 -2.53564 li
261.624 -3.71289 li
267.461 -9.39355 li
266.09 -17.4224 li
273.296 -13.627 li
280.508 -17.4116 li
279.125 -9.38525 li
284.953 -3.6958 li
276.893 -2.53027 li
273.282 4.77051 li
cp
.4 .592157 .8 rgb
f
347.835 1.8457 mo
347.835 6.26367 344.253 9.8457 339.835 9.8457 cv
335.417 9.8457 331.835 6.26367 331.835 1.8457 cv
331.835 -2.57275 335.417 -6.1543 339.835 -6.1543 cv
344.253 -6.1543 347.835 -2.57275 347.835 1.8457 cv
cp
.376471 .729412 .145098 rgb
f
grestore
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (ivan) ()
%%Title: (1404.i003.046.S.m004.c11.space seamless pattern.eps)
%%CreationDate: 4/30/2014 2:33 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&gTi-GEMe$=ApT5\,;X(H=NWTnE3;aqct\3%1f@50enTi&MBrTm-km'mUsV='q"K,'A?N=`Z)U'Nbo'AhmHltk16*E)r;BFk
%oI"RlrUO$^J,/E&]`#TpoQ34o0ULgVruQ[\TDnIYs7>D<J,PkoqSZaRIJ)usf3a!uZ`i9#HMs>jI.Huh[pT0t7o,cTa3--.rq>HW
%m4U,bIeihu0Ac^*dnd]&q<J!cGCKHKjg2_ur/90Vp%I]10>De40+JTCB6sCBIq*D""8j]rqs87X)!Mj?^\Pl1@;Y>B5QC&A>X(g#
%ps0KMqp/XLqX`TloC^:F5(EIks7eAkrUJcEDu(9R^O#-oYf;.a'^S%KYWk>M`Tr#!q<]!Upc"hjVsMHBrp5IgrqE=_IKeglHE5bT
%K)Ti8s7gN+Do2@s%g2i]55+ab5KB\oPl3[.qq5?GNT^mPB%m5(k6p8-"&OH>:,7HOp\N-9?bH=![?`;^ntJ8Fd/UZUZ6$G3d"=Q!
%nO5SNlY7?u7Ee8LC3@0[nOQGaPS^+?2pTBkrGS=Crq@KtrTDccJ+`[(\Y_UjqO:i>rr:X)bmcGM5QCG8f3eRVQ_/b;PNNAa?]MmL
%qlA=UfO3%Ws6>N/>2[S+otU*T^O,eLY?uch47_bThm+.bHKrQIgOK1qc)35pj#)0:b`D\oX4L_Xh:mEU7t4WFI-N.F*B";!Qi%PX
%g=D/3V\$$>\Jh:JhHqinf'$bT)1VMUkJ.#ob9-\egRQe2k!&b0Y<W';\P;mms,Y1hU0mm]eph=6D;a<!oD6Y\pCKRdjDQ[jrcmtB
%^YmRjq;neDH2E=2p^P";`4#N/Fpbs.qs4(0o,%AMReZTW3>N2jqlar*L!RN0iBR-6s4./#5Ps+MhqB1PqWkWJIe>X,rla%\q+j6M
%nZUgKoBW<(Gl?os[pRmYrp&aGs85+KQToinJI^_hhgPIoQ*k&8mq5t>r;<T[HV]8PcECS>q-WMprG)B3$ib[sqfYksBq,Vloe4)X
%\(>!"rT_i#VS)it=&8k`jk!jf8E2r3ioQL[^OFTQG2&X<rbqLsQSrDflR2(PR^K9hPtdEJdPH*>pam"]rq&LKHMPh#)Ol0Rjfa->
%>PDLn3q'utC%<)?n`HJ$Ie!5PhWtHMPl:1Yp?nF%?[qn#0>3i^J,>^bIJURbDne7Z_B5.p3Z%VXDu?.jRZHfjTDO0;nW10L:L8M?
%`TP#8qW1fYqY@2Tg4/8Rqa9gspOdY:/'[p3?bH?drn-6MIn\a&S*2MToslflG9#r+qTLVlrT,uArmfZE5C`Y&ld&qQk:EpOs75uP
%G1SqVinMeoH$ujIgG`I_Sj!&3?XJ6cR4&%"o&SJAq91IIlNQdq+27Ja8H-(YPTN'ei1F1$s3s[>Vj?@-[?g1BnFTMYg(1ai+6m:l
%qnNH/C49#Yl;&a<`$;Xe&gj;_VcYlA4.^ofs8:oloC'0fbE@SYnNZsGs'e4m:S[p$?0tF;qt/eGa78f&5LE\"kCIs2nC&>T&)Va1
%oS,K2eGIO?qJ<d<I`_Wf\K/r0q"tl$b0.!gj69(\_UG.W`&8KbkFC)KI"Qh?'9eGnmNn0Ip2aNJrs*K?TD["VGBiuS=$GK5lCSmk
%W4<_.-!E:>M&Rf"N0-ggiD2?A-q=QFo$!4p8<"^;NNG>Aj3)(*qrT+nqba]p07,6k+m4A^*2Acul$&0t.B1i/NoL$3U%R3$K&@?D
%rEhX9n:BZS?aS5$;^fUk13$)7ago/W`?nuVD&Q`fDPD8ErC,#_[?D6WM_R\GHDO[ZH*eBaeFBp#l6a4;CkVK+7I^%4JojPQ>)r0J
%g[D26p&".>2Ka4Z[<$Ni@>qC-BD$M3ngH6GjJ::gBe)J"heQUPl^GB4D/]d!2TI`9Esd1NQ(+P6RshQrD@*ke3*ND)<a0l)_D'Lc
%>9=NL[BB0NMKSqi:tghDijM^#$eRgfG,d!>8$ar2BK_9m?O_cf;R;p1H\UZuUTn>Z9A'toSLM+;r1;>p1eP/)Z3QRAR;^`Yh.@um
%D_)tjY;N:4Ep4qDB1?8+bu,Zp)iF$ra.])gCD2tL6R&r$fRcNeT$l!PVUFK;m\BdIdi%W,'Ha7Y?`Yp/dDD>E4"/"4N/=ksC9--3
%Ne9BU>%<<,MekmhSaBjm23kTlducMQZ%h5@Y.`Zf!@>M%6W7]ob.4'ABj5@dL6HT[RumE>*1BLKqHBIh`($Q-P2]Z\SmSj:4"CPG
%-"H_>0rf;k*W>52T]\`B4o[=b>6"--r>p1M8@HQ@gh9tdA+>-_?Go2%0tc_YJY)G:k""S_%c]kK#1&Y<CsN7=1$hLSoSCM;Cht8j
%(Uc8S4]lN!"<2N?0C0rOWO=<R09+DtRd"7EO[dcg`Le)&JdBn-NA\"3X@r&TDB#\D2f6M@HFS+,VM"<je/(.^P8u^oi-qKZpSJsI
%!pd6TER__"dWSk^M`.kXX5FXMjrc]tP%SO7F3d*eZWVab>.!&#?F;;XKTS-W``KLD.)qE,Q&X@_m=)c`o@05DR7[aR\Jeu,-gWZG
%+\d09]$WjHlW%/YTp`5A2_DBkMS_QcR1$G0SfW[`#N*!1WQK0h[DgmE(p#8C5ET*X)2/\bLQu0!XK1%L>)U9WBP]QOESHliNPcX8
%B,\7!luBrf9$K9G`RZ:-\K3c5aY)t7>r.qiSDfMu8;FJ&&?X3n_7)@?XRlm,H`Xb1LRfDeMgaNfc<;<)k6$R#a49Z5cL6,3g':*s
%N"lOUejS4@%u7?6Z3P1iD6j^s<FF_:i-D`!S.U@Dmlp"sO*!m)]*?Qqc(jsPca@$p9Vd*DKR'e_hUcidc`UHP@2m4pW"DL;8Z13#
%XgM/F>m'i4bt#nA7Jh\]-+t>gLT['33AN/?pQZ-U@A&,>4j19Ieu+'!:tCq$5[gRF_qqUJMBSi,HOulN9pZ</kX?c9]m366).=s/
%D)/5K&T$$5c.[<Xk3pEPC[Q&SB6OgEV?mum?$CJFgEbPEM82e"g\9+j26S0-bU_1$;i*lD(REr"CUP,QrQN*h+5ch+<NY;)Bf+NS
%#VL&HVA[X=MVT!r+aXtW+G<9DdG]Gl"rd-j\S#`e;J&&AAo%1SgEfd[_i7H9mCpC+[!CkHh_iuC,=]qMm=:r,Zf<-uOIS"b>kME0
%)ia*^8FA<Q+4aq]hsL;Pd*92]]mG5QosIt3@<PEgYq6!uIZ+.k7NA^lPg))</G2VL#gZ`+ggn$*WeA%8fHCh_5Fl.ePUR^u]9MW&
%->Z]Wk1S=_gjJ`>YMQCip&H.'HHlji`c8M5CtIm6&l"Urd1f/XZ$,o'YtcQNPN#:8J7*RfEbXq!Z`d.&a7bF.<B(-iBd`8?4*HIJ
%!7Q<GA\H_VU2so5>%i^@G-b_t&03lsT@C:67i4N>+ICf4c5gT-WQV<$%142`%@T],k\q&B]F;QC632QkEPfF.f,eUKCU<j'Q>>hr
%,FE^i3gT<WKIUSeMWiFS\j?t\CD#4+h,^IqC92[o\N5BLpWc[bN&qtefKq2.f=4hgTiu6//Tf+Oa0:K%_aTFj]ls&PH8LY1Bc8kU
%*UA.B7oT":_W:%odB:rRnQgle$<)_ZMr1#T43(Z1qW?kYI:0(*0aB>5a:6OP-mjNn>n$GD3h8`(R]^HG5?8UL`nBP">BFs:>%X6_
%86n#aSM@D"Du2`h4C`)327C9*-j9cUNL?fZ-=,5NdT8fB1%J_RqPn\a0#OU-Z+c\\I/d961&[L&[h6F5gea359lh$[A:E:9OcA--
%B[Fe:rhEa*TBtNW^n@-(le7dagcN3_h<F=a`AXtZg5"B/g7<)t[bkL`mX36%Gd:!.WO&PBL%/Yl:En&j4ih*e_(T*K/Z>Id[Z&>)
%Xted-l?`Yr.?-.t'&6k0>-[\#FaB25V:k#UhHTmZf2]5^-50i-hE3AuBN'N=A.ttZ;qj$$[V78?_F[$MY&3U>P?]>9J.6$J-J$UJ
%iUt_inQ1^2Q>V'9Hn`D[9tWS-gQ^HrDY!5PDJTjB@B@4^UQ5g+-HFaT)]ER^Z\uV216I^BMigp-XsF@Ni,uC8KI%:fNAAl$k!h:!
%@p_0c,h[E`ZLR5)@[EnhJl'["6-]j7m'Mbk_<FTDFpM#UJ*B.+:@3gI43]E6]+\,l,$-CJp!o",d7.PRG(\?19m]OHZU5:r*_1OA
%mclds+o1LZ?68:d['"U2.LYPHaUt!?r3!/:T*QdRlD(5'e2<Z\ICiYWEo@L]Iq29Nh,t#GE.qO!Zc3Fod[JDF4I!s(C^e!kg9u0e
%?"1H=Y7;s7rmB'6Zqk7-h;OQSGb]2mE8$c;;DjlY[-[Ic/Phb?g#IIdfT)ePG!2\"a-$@pFV1^*Tc]f1K/5<[#:s&\3n7c>+^$4f
%9-bGZM^P89g9YWb=T"V&CX8l8k=f9GV(J)pc&J2hc8rfR>-<!ScZHVf4P;Dl46M\M<Y"Q3Jgm1-1bCC#(_N9U,ikp"eH8j:eDIG+
%e\5cJ&;L7*kAYe2m7>"lNLLQC+nUe9^GJ$dg`%1Ke^H?QT0"r_NFKu).$J/h5Y\fG_npG;0UWA%[VAo7.9Vj["@Qi@HL'p%Rl-Bi
%o/W5X%Q\Ofi:'D%LjTkOo&4X=i=uQDjIXZ-XAp?2?/i#pO!Z,,B$LP=p@L>k5PVt[!RZet2/Oep[I-uLD'B)*T(sXp8*<Vc78mug
%'A"+MT)1'W=ZW4/6r#HDTluCZ*!+fgB`kq_T7Y061/'C(E@c`R0S.So\0$`3Yq7/NU;J8c_%f.pjMrD1(9m<];b%stW--*gXGKXa
%&DXP&RlpJ_oWJ,a37dPJkB:IiT!QsU",8\(d<8;&Ra/o1&PT28m%,IM!*;S/p>11t`Dl^pS]<-M410%_R*H;O'"/M_apb<3i9&&G
%D-^Jsg#8,`dqS)t/Rl\Y0m&ebKq^MGf4diH?+MncYg[$oZNF2`e)#&*%%m6g+Dj7Moaec\D0)MhV-3uQn[dTp,jp=rEaaL92A@Gq
%OU,VR2Jgk,WntrmZ=OR"(V=3*)-hF3\>1h_oUa@1KnPHO..M<;a(q^BH4qYmH)]H<GU"5=;RDdM4nN(Z<L`LN.WTC&`<&CEHI1Ad
%J^B((o^k,kmsjNS-TZ>/Jn%K@acn'dQXrgsfeh*)p4W^=V,4)2C",#0!I^#?YetiFJ*t+o`^oL:n!_K8&9Kr.BT[X"/*6lpcHZR!
%M3,k/i(jTu7C1OaI'ml.P$pC8S!g,5_147BrP/g337L0c#)M"hAVoGf+QQJ<78;Uf;!cC9kF!K7'5rJ.-ekPE;N3,=o;mZXi?FHU
%rnsMeJaC0\IsDSgbc\.UXcmesc',g:[N!uWIi.<.a/Cq&V^gCT1hgj,:m_?rbBZCJ\l!;8,tXFn(Bq!YEI%FpbD>*a'.5`u\Di6?
%E%.m6*c1PQ1J)@_NQ&/0jXQ.]\ocVE*cT#a*ieW;rkt*U6%Z),,3,Q`%PJ[>OZE^_>PMg5o>*CkPIhk#AK$M1=5:R1lWl5lZPKFU
%<mdZ#!n[KF&/,t"=I-_1_k%f"V/oo\H44?]=J7tQM$RmO1)dK\0uat@d]!Xqhb%dl#$YdoA"2ED+"b%5U!;)eXH"0V>EaTaF)]7R
%agD'D5-egqT3`PSLQPnT_/tQcVj=A1Qkm0V!tMf5bIchoj[34W#T_*EN9]2Mp7="K[@3W74Jd[_[DP\.,R.5\KMX]jRpTF?'\5Qb
%fJ95#"+)dqO9lOcPfbAH,cQg2KoLJoC9/H[L6%e]mJ9bH!mghu=c%oB^74;i]EqVK!hkJKkJgV7D@@cocMG=\aD0ii]8q)W=Q_CE
%'U7?Jp>F:b7@$lTYU&hV%ko`f#89IS0JW4_9aq!:`),?,@Xr/?Z0;.Z%+juqI"d_5dA3VHA*C9?l9hsS7:#;N3)0@C2d<]>n9$lf
%n:t/*9XDrriS3<!7GQa;4+)hkZlUQ&ER"3"-eK<PcMRNfMo=ML=eJmUf$bg!<G>^:.7dBW*a!J((WsQ[>e8Z:Rll[2gn%PNd8nQd
%T'K,Ik,.pC*!j0b/e?ZbWZ:lAX[TetkU,cTXiAWu4H/n^]R8&WWt`<b4>Ir!KT2tV+97nR=uI+dN.2=2$W;WMHQ8u)9-2kVQkl07
%[1X3!OBnL0f/@3SLdZ('lLLSf&ae<)VVHWAOtU+1NLbL4)r`lKid.J_5++NDHsdF*,oHqtlnYq9nY"Z2^4k"3k.t'&dR,Hl)185@
%iUhX?,uZ0rc6MQ]M8KkCe3T\2gNr2@OKnf'?LY43IFN/s+c6c.od^S+!28@[HF:?=lrUT=1qcI_:^j(WPap--a*GtGF2<o%pgJ^7
%`dI^;e"?["S$,'Vo%-Z%prQ<\r9DhADgq]Z)^X=q7m/%e<3_pF309t@BUd%i+X8lReBi<Yc((r$K0ZWNh`$rT?oQ[o%+A=sPV*p%
%qWas%=61<[QNr_WmrW8[;=;/EP'?Y4A!\@oO7ffRp1?t9)T?ZFTGDgD.*O)eAc<V<KeIf.-8lj]m6"4h7$jRU5IW&M#O:m<3[\QM
%Rr\DN7G^13D4OtI+6-r1Gaq*?]4FAuHF"Bn\*@#>0oGE%;cT7hcA3Jo7>t)GGU7<p]pQg)4!M<8h9J_k)sTp]Or50'P/`*8)jZOc
%7cuLRrXt)?'U(KRLN)lChfBf3r)jFW+u"%K,V2a5`F?IXr5!eQhi@=a$\a\o&p49Cl,?e9J>gSN.T`C(BC4WUii(iJ(hMo7l3KT>
%Jksf*f[;npV%KOt'N='\#ro[R+B;kYTpWd/[WK@&F*+g'3b+JmP)NDX8.qV)4>QE?e$5"$EX93t4c$LUINf@\!$_emG2mbEf4coO
%q@7^d7d0MZ0PR`#5ol6"\m-tsUOrD;8QqF"/ZtT]%.\/Hg*1<]Y_!_?&JPm6k!@K!XVRWeZ-aQ0@d]4]AGpM/dh+US"H[<lediSR
%NKT0h,/Jn*p4Y^\9-(7sZS,!;C^&AE.)r+;e)OO`o7.im19%R2-2<eJ77!93)nYGmH&03Y(M!7hq"]srb#+MGQWI\Y-5ag6XFbjD
%Rl2G4+X[]L#(-qXWbnR-.P`F8NttG])D3')d++1*f+2JX;6r<2N+JZ9>_r$,49Ci&MB/f0^SSiT+C,1tjbj-M:QcC11p"Y49uIod
%\l*R5(h@AdmF/VoP>gP<jjd=2fE^KTjh&ZYdW<JoEdHge>_"REVFq+7kNU9tm3If-%TG1:BOZG]=SO%3mV'?l<gIh<\S!7Z^p3<G
%R^QP8F5h-L,J>-(KKWUGp3Kq4,Bd#LdjruR&kCmfQ_0(Iam@T79!f=\Vkp/[#9jqg[#Amdoq7O!n_=\(ZQAPG9HK,%GBJuV:>RGD
%7r82NhPOE*+A*ZA8*!<H!V!2^+`:t#Xd]0>]>JQaG075ETjBC/@p8nK\mnj)1RJ@*0it&[34qB<bpdpW#m>i#(hUQ([e)o-Z,&$u
%kk,V5[D`[Yb'e><f+AO+4#&<#$_7S:ae_%lR@>OfFG9ke@e-;u%lI9q/WKF<,bD7)X+c2CK,OYRn$M[-LAGf<$&NS.q:)Xt<cL$c
%REX>[7$&2sTs7$&[?GL)UnG'Vb+5tV@%0KcnkV[Q?Jhf$r3&u!CamG!3$1OQ&%Z%_9h'28rWq1Gfn5L_ac^n3?`hu\K:<L$g(%r7
%WB<>hmt[mI1"s#ZAZFF@lebG]"^5_XMF2jjiE`$9]4onG[a.NR=Op1+-3LU8-7a2_Up?m`,Wo+oPL:q#:eUE;A7Nq;FUt]WA!f=Z
%iEbcEMm0=H,T5sH\4DH#g?gH.mIqB=pM73YG5Yj.=8b"sMQ[4Q<[f#%Ul";H6?<@JL<3No^Jf'i.YLY>.qQYd1&[Ts;oU.BR8;$"
%L?0Ce]Er^gN*/ou:$%8Kca-iUYfc6;>Q<cYbW"k[lCJM!*_"T)g"<1WIWU^ucE5+3rne7Y@ebS^NolY@1q".OaLQ(?Lc**k&dB-4
%qNI2["2c<;e9Y^g>iT?91t_%?'Y2_eKL>;&A.NC@fHo==%@Hk!XKdt3QIA4IE1Ie%0!(N6.k!<m7&BLE`?!:GBW97$["E91NEXDP
%Go5`=YH9:$,;:oJ$bn6ITt0g-ab5th0GgkUR%+lN$uL\ASn)D60rqo@>VQ"_Is"WNS7)2nj74=<%Zt/Oh:SU[Ie=timd8$>+l&.O
%ZD[DF1YJrE_gQa5(3uO>_/?<?hm9NHmC=/!%<.uH+o=n\j0HQ=jmHBE&$Fr52RY'D+5Q#.\)#X'rV\E';\8GB^p^>pFK@/sf!?\i
%-4$A6kD#.=)Ul[F?-B:"aR)6'BjN!loA:0L2NEl3@R^j%jK+TBi>G*A<jmW+imK/A@RQQ'PQO9hrZDn[_%T@GC)hM;7fjeo.0OnR
%jc@<c,kUW#If$ft44<Fa+PLn-o,^t8"86Bq=IiNX#j%q;l::kNL(@UAEqk'F`mR^,f8e`-Pq=E^L3W=NTp>&@8<PT\>ID$(kKSZK
%-@=+.o<sUu2#(.3X)s%VpXl""KHj`.c!tdXNaE7c`SH+/e]GFC44L<h$0M^EYY,U3*cdII%aoR+U";%^Y.?%'N)[_1Bl/'"'4iOI
%nn(k>6(=#!)3#*/!+F8B!SN0cOsEZ%EP%SPW*@bX883C(d*Lpp;5^$7@1@t>:52*2%4ue,gYq\Y$<D[T4V$q0T[ubCA\6i>(!"gn
%h'$<#a?^6'#V6ZV*5mtu*%1mq'n8Upb]%dIA70WGO$i_te,KrTGt+W>r@9nL.jS+DX1>i<\e5GWV%H,3-gOX"U4A.oSlNJ:H!i.S
%4Jl';8.q,RcJG-6LNu#m#O/9V;*606XfrKj8r[g'Ju\na.H\H1UdaVDW/)I1/U]&TKNB[uJhRtPjJ%E2A#(6sV)CbSO3.2YWFL8[
%=]a$24;u78\;PDgc%%!P7o2nDMV_HB#mDBWebuPg0:e(=\XViT>[e3g]l!sPhoV*%2T%K>OCSdKE2a+=,$Y<c%*r(3L3l;\-_m'3
%](^cH&[E#,K/I1`P+(eo'^Js\(2H&:73<+j^T9@T-1Eiri8KX]IEA+PLpZ-dgPSoKMCc2_o8O[dUKQi'A8#@@<q#&,?JaG!?8%+j
%;nZqWjh@3#"SNS4FC_FthHge\n"^XO3hsV]RMh5eA&lZ!dL,S*Q@nKX&2m^^_3hBfQ#:&t=:ce>]oci1Jucb4,c[90R6:foqq'!/
%XOH3B>3U'$"u6U]Z\:s"R*o6'[LKc!mHJVhJ&jkcXM0iDfnjjP7[qWM,^E0?$8D,"M+m=M1MlofCE3'?FD\>`)5"uR);G0KiWjai
%ZLYau+\S3-jUIiC.>MjjBK-Pu!EUe/grD%7[^R0)NtNUIcjW_5S.Wl>B^^_uI?3[*!A$2Q[HE6SAn"=S_@$<[<^+nm1u1K*9nC>L
%7U4')/$WQ%[BierNJd\O`]gVZQ\/"3i^m!;Et`%FWLeK^e?c9@Z9IMk0!b"JP7o2*@GVb+V$D9%qjX(L2g=H1#JL#HV>E!=F8EZ-
%J7aJ4^[Se@7C!@Q<At^,Gr2@3Rh"Gn$8$T=VR)-V;90!^#^/:rRp8*U9s[t9(2cM[m+";*FJ8'Sbdk0GXAi[BKm.#Sj`W[$fu.0h
%5ha\)N+k'H=3e!eb+;COmsK'`@5mm>er/q2B<bjo7F.9f\u_EpU3LITS_19."[E>Kd9##\U/BufM&t?Y'.OB`S<u8d6.,$k;\oq_
%P%146,d2/[&pB1u5NHr90d<TA3)lVAFA`AMmjq(>s$c`CH<VRjO[Dg.hN!AO#<R3K<D1\1e1A,1'Ur,X7^!*L_Yl\5!1Cr.dmo>_
%V?fW!+mEn:kXpNgZ/1CL^D7>WWeH#@+R'$/+aRZ"Y!X7"_FN&F-ScpC.oH`O\1p2pXUr%+J>Zen]\4+NdojS(DZe#1K`#;cWE0V9
%f2@rt@i.X,$V*,X,-Wta!&%G?I-2)$QJF\L)GD(YTdbR%^NhomPVd69n6P5qhS%ViHZ0>+56+/d530A;I3p'`Sh38hn2p,Ia(Jj:
%'HVFEAh^g/(GucWCL8*X:RYg!g^7n*`Q;W-ZWG6Mi*7kVHo92W^@OY+(GII_blRCF^RD]td^jB?bB8t>DCp/hi?62H0iZ0WfRoRa
%Gp)PE2muEnKYtXB%---Dfd)eW.^mVR+`o^U$G84Y]e^fJ*>"b6A1\!'U6?'a6t>9i.4KTkAL6fo=TZki+(U!\[,eju.L=d@hZP(i
%8(LZ%-gSc<?Gce6`d\885=j+-(b14J(p)`(fE"o",T.0LaA=UJ_&VOGJ.QK&k8qhf5S'BA`%5dY6@\lg?/)j[Xc1kNms@H1PN9$%
%%\+KbUjfP3id(I3;!MY9SDMIUJL`(;U&2dW<[>t\]j%c\MhGm6,t74L14YU_-(V[DC^_[O&0BNuk-5L[=R"[5@q<cGQ#WM5EC7IQ
%MOWWCjmL&tgd]42ZcT&<A:4(ophiR3iK7!s3;[L.<>)j(S+uc8ZPu@_,LgcBefLR,NQg)##'3auHe*WU=^R^Tffh)!1CN8E=[=5<
%&E\&PYFD6,aMY&4bD"tT!n"QMrFu2Gc8Y0WMMuN4XgaQ]fH[DO8'6"l6]OK7d%[iV](:MP$D&_E$E&cSTfAm\_WE9C-5fX4kOA9J
%PQ3cj-PHb=V2,agKO?OlP`hC29l_Ebb!MH]"5Bmc+M):t-(Gq=+:sj<lsL^`;6to(o#c<u!t%K5`j@pqo*9$)P<%l"c[sN$p_'oR
%,IffF,%D4oaJE0cW,a:X.>XL_jG<0R(A`b#N#.Q9^ZY2<4kM4A*ipMi"H_tQ,JTK0K&<$8mPQ#W3gD"FgRoNGYY`;Ij:oi#s5qX=
%U*9Ic>hC/3-$#)JpEm%<S\&A=9M32KFl,(i.NejU(B*fmGirWK]is;Dif!;?6"lf`iEKlS%?`3XfT"39a_D%TA8OWPfEKYWf?2Bq
%E@6e5br8cU]Atphi#lt[O6!IL*0i2lokMJB[#`nr.\,>^,V/WiXGuM$5>?n?7"he\JrIrq]q=*>r5N7`kE9"5HJJQZK3O!<]sn&6
%d8;S"lPgXt!fZiiD";C>TLD8im]i@!"U`Ka7jet^&O+-77hNakXKh_7WkRKr:6>B#ZPSM7#b"p*+Ni>9qrRseJFo%a_7'c.K&H9S
%TT-:Ec8:^>\]0?C["bh0d._Z.8@ATZe3TfhGQ835#oa,m_[485hFa(8pQgYC8N7SV-Z7f,5)Q5!`1g+ZbX>6!^"fL%G`\rd,04SL
%E9U[6hh6]JFC3WVr'c0J+OZL[19iZ\KbL\UM*b-!]^u]gB2O`p`(+6jK$r*LJJ/`iQm_u_KU1t78Ro.RLV)hDIUhPXN4*j=OkrRY
%cKR=3km$nIE3u[Kd(b,c]lX)TE$GZ$OXiG(<Q7e*'QIi"op:,"0T?Xad(-5o?d&"-:n-j&:(55+H3qbjXh/fK#U=q6>Qu0h$/ia:
%,R5hu?l2HF4&f^^6DYh>+a/ttRnrEZ1<52=m:f0J@:l=k6W$"/OL)ChF?r+U*i#ISdXh59*\B-`?*qeq+USNIkLp(0)*O?5MQ7lh
%K2+sbgM$3/T[8jRM.n^?/6`m)6rAKHj+@Ub&EW4#^B+P!j)C9`[QOX.fo!)%E-i]u1uujFR2In[hNhWDR(KS^%_K>`K><=TE$ZpL
%=u[c\!7$*)7^Tp\d<9H?E]V%gMqfbS1)-Q++>IioY/>d!<8oo7!`T\3ELM+'Q3j$8$;&++09hnPh0^\Ao2Ues4.lZ`YB(#%&gNM*
%e+%9sj:_f6bFcs+;S=P%Qc!r*JAsTIiighU8VKm4V)5=QaXuYURu)f;C_h$]&7Ufc,OLkaeKh`8\G&-X6_GW?%0Sp/e%,=?^E%b:
%D5Onh*-Ucb$*_4I$<&>n\ja^#4<1"BPO*TG%1?*gGTp<"Ua;U>%G9oR@_;FTR9&716oS^$W'k9=h8X\;I_".8?afhtY4M&t]LbA0
%1.d\fJes1#-f.!#%FAXq/kG@7hl!.n_HNF:58NA;*k'-,(#VnT#fUdU<)+P;j"q],b*HIO=,-Ep&4%[D5JA/UlD&LaPLCrRpE*sD
%%/1N+"Tk$9OMc*/A?!Vf?7iH0NDIHO1L?_K@6&[@i"7?)4LHq_h,M9k"N!PI3q+.73d%MjEs7Y%&A\o6Ek0gEfp4U>hIhq?QHSgj
%@,--b&JV>sp/*FQb/mgL/iVFi$JIE>M@"2OQukOF\oX!RWF4s^;Ej\K>3_Wda8(.ENHg1J=\f:M3[+2arW&-;3+I`jejpcC1s90?
%?'rKQV"iUAZ?%cYA=@bLa@3s7R+^,:il*[/^I*oV\=M[e!?Upu!.^SplZl@L>?E8+eH7*>*_(sV8;+Q0e-Q%T?6ZF3P%%aK^iT$e
%,i[3*1r,E5J6[:-EGL?JC5&nH80aP]\ul>",QRpPKi<^^*_N&==Ku=oiXu>1"\d2ic_X::"32aA+ClldMGE"K/,SdSa`65eMIc8Z
%JB3*E57boQ%3itQ.ZSulku@LBBaj($+Dm+rL5acj_o3Hg%ZArA\3a4'Im!jEj2-I)F>np3K%boFh!g>0504.$/UEMRY@Tp$RIIEm
%Y#aH_SL.bu2g,\Wd6;#PBWI9/h3[N!#gQ,f"8nA$*8aU+5@ODaeE#NgbZ.b^b;LAp()H@TfZN1Ss7LaLiJ/9NkYjB=[RNKWBA2F#
%]hg!;@QHq,D<+8sFHp7+O>DppcFrbXLE<nWo@reQdlq[8GAR:lO3,:2HM59s].is"&h5"?=5r2*T8@=Ql![<3`I6O?Dk)bOc?2Wb
%0]knSGidRGMEF$.f?Lb'5[OOGUpGWI'd4eK6J"ea-Suf/`,paHhLr4-UOhYV^-J=lpC')1lP<(SP9<SA5(B$A$8n@Sm"(CgUIXc'
%mpoi&6epep(aLgY$Q[$\cV@UJ"!6u+&aWplE0(\DdgU2=)m]P5<[b7?VLt*V]0;D'clk#\E/#'Xr9RR84S4\^iHbEBnT8UYf6=q;
%*bT")<P*AW$\;5`dr-H>";,UT-?MW$&Y/Rj&siD[=VQNU+U/2W1V,VS>qc8*Dk6GJ.?&DlPm%gh<[pii<[[,6;)r?84d<9Igd9j;
%'nJ]]'-kR7megE`A(!C/mpX[MA?,q_rE>L(.Z>)hd>!Mf<8.D(o\6.LV!-t.I7tbkY_^CMVoq9ERgWF>7>S'J?fDDa]o]if:85OC
%ggJftiKYK6jDmAE9<9E]W>6@CB7RU7RkbTp^rgKMmutAtqYf3^l*oK]YC<Y`9o&Cg@q^#0mEH\!qs0Yurqq=l4?8#f7ft&qFenN0
%1H6d&J/s0hMe-:fkAi`3cQ<!S%e1MT\N`aY<BNlF,F-Y>aW&ab.!-m%$.E"E/32atSuc-^4i,6,a5b_GfYNK$%*db,b^noEYcu43
%q)QM(;@;pl6$nZ+Y1/-+`+7#1FPB\l9Ze0%j*Leh&f%@dE=B*6*&qQ`/f`\2TjC4h!OC]`2heblUR\Oai.S7r*HsVWZ5&']hBq;3
%6:MY-VnS$:[B/"XLkS6M.AWB-C@"!KaIkqqTH^OZn3mV9mWi)m-5loQl1h.o'q8\W/^4CJ8VSLd&FH#3Pdh.E3n09?,L!<d$c4!c
%K'UK46B1#m7"Hi1'X5X3:_8Hi<=o3lbV@5.Pf$@YTJR)NC96d&WX6ko6aAbC;Ah/S6,r[\PZ"ZgJ0FE+fn3V5Mkf5o,!L8lYS+J0
%Yu'H!7(GQJkhq2&2CdgT(?4J\lDEPIjL3l0$72oZRH?bh.b:TX;dSf`+kZp+-=]oP5$80GH53-F7lhdUTJF!dk@b,&AdDUGJ@(j<
%5REF$&L9><5[h-1c7F*rZGZD@2Vb+WK_Fcrisfc_:F'CB\Lr*S,,pB-2ab=1+J-u:NIXf]@GqOo>meI&HtWecdElGblJ`Tt83Aj@
%pSIP6@p;3.4j*=mdjq9C;.u^_cZ81QP\H;*KS'C5j+E^"CYKhE3)B6]i[3O0]!]G`7\rTldm9?7B!\_Jrsgl.gBtmW-p@an0c0n`
%oE;"&iQ\b2<8i/+pJB9D_#T4j.(']bJP?[<6s58QZ2t[^Gifk1S<ed:?h(L[Yq#2e4H]UjW%,N*i+aO7TP]C7>]LfG8k4*He-n8f
%39Km7i%SW13qcgq.I>&(b\?QgHeZ8:\q/[rR`nNKBkGi54Xi'4]JGu0&4*GM,)[F2a_*&3=jOs8hLbnM#^[!ZK&Z'7O1P'^qPs7Z
%-]Ues\1GLJ(BiWaEZo;E#K9>T+1A^;92PaO!ABA]$r35]qc/kLM7VW3'>;kZ\Z;rLmU^.QjE!h8!YsMVT(JC(7>V*i5s\#@Yh/7L
%h+>MSjUN+t7S]nR-jS*:OXELm(?@t8XqrgA9@4C;M)f*I>]`VjN5CPc`,6d*aof%g&XnVb!V.Xt:$h0On7;<3Eg8M/4=:W.r>tsA
%nC/0hi.ACrXGqRf8SOVN44%B%[rV%Gfri[[nLu0RN@IC"*b?.=!^/NCo%MDe7<mJbKI0:UJd^8tf_\6%j>ntIpJdCU^Vr-`UMR\&
%@+/sbZ/i_QRKB+Um\M04!]ZAI[M6o("DD5^RXf-3>4_#-,]s7fQk=EpDH:HZqa(DD?#FlkD/r;q]F:D;Z3J<Jmbc6bJ/@C=Q;!1>
%4n_5IO8-h&hMGmU:rH6%rL4G4bN/g2&@Z9_0RtS1ntr1PN1pU92';sL8.%B_9d#BmRVsMXD`H8Tp)N?7:uldp13"G4akn_)6C&0S
%f8<!RB+V2rOs76eFaCOf$<9)=qh$D&)*)I;.1V+'&iUa]-kS\7q_9?T+mg:C<&O25\,.)iKVHE:p':I[k3d@W0H2N`mcGKtWkr/W
%:)j3-d_^8L%oNqlh4`qr6&"!)Ruf(n(\[*Kg%"tLNsJA5B/V+f+^lk93Z#-]M5CK[4=L\!SDn-d5tjo7.:-tNJ2lE#iIHSZ*s,i>
%N0;81q)&p<-,i-Piu=#ZCoC*XpghSoBa#^W([G*/5Z6[hKu8ZUJp#iB5`i]O.?&ONOBiD3BQ_!b8/tGKpUYR5fL7^L\s[6A,;<El
%YF4^]mPoZT#Rp#/jJALTRHmjEcND!2lUI^HK*!@bcDB-Fi1-:;R5>%8/$9gr(ol0!IE1Z#KZi8/!^XOeP>%:\i0bG%&!fo*HU9!g
%&Nu@E'"<7_\8lU.Q39RaO)!GL7aP"Y+#V9.4JWs[]Yu16!(peW86#\a$RG$aI*m1n=Y0*%FuslnWt7e`S'[OgW5id.Y^e#.ZB8NL
%2^0JPl8[F_A>srDlsNK[$rWI.^(X@(;FJ<:8JZBJYkPT1MpMe@hQ9c$n`aB4A4k1'Z66=P2M)r]J3->-&K!*)7!:mUF1Op8LWVN>
%46[h18N@nl7j(f#WB"1B&7b#:qM)l</o!tNTlF(<!kDRB:t%kR6(no8nQ(B0?=6pE^*Fg.%bRmm'mJ'1V1C'BO=\JTV$R7&`d;ig
%pbb>eDS7\(W_2]uedVojX$,>jObBE*SE86Y5s"X1(eZ*M8l_"*GGD`]l4$>>>WOLA$eg2:%t;m5:R1oQ^,TpD7T*\iE5S^3EeJ>B
%1-\GL8$c:Vq2!diWZ.m"GpIc"/ZH_:&%ES6A4%4<._^U++%^0*#."U4_J:!a(0,'J*1k^+-EPO1VCCe,[MThBCl$'t"@qnkDTW[9
%]O./>HbPqp(uPWZ.aL]bc8KFS.1RZ]&kNf.JoBWEimcu/El>0jHk2!IOID\]Y*#0)?qn,@^NdCBa&nW:+c9]ekFPcIMj,7`F/$0R
%-h:=tc6oJMGIXPREKoNF_3Y_[P`uGW5^6U3)8uQR?5ru0i!gud)E*'[F392%N8cSq?HCgg8Hl\P3jKI^-q_?2'Kf?03hU&XMq'W'
%B9IdS0S?B\Go5#tgn'G89j/8O&#GW#EO[aWY,7'1C_N5u(/3?H)9nd/*\5paq)f'c(*[X-Qk`e0;0fUI+JpLQZ3b68GTe7gVi-HA
%`9<&latFnT*ki/0m8,M;,$A"e#fkLL0p*V?$KSW'e#02/Y>ap;ZA?Ym'cugG8Z<iM##uBQKPkuZgS-gs3[X,A@3!3!#=UMP_u_*L
%.N=@5T\6@WCNj=a5TUq]P7Qd%c8XpLg%`S2+q#H01gG(!GCb[5\=t1S!J:*-[5n-08H_:nG4"e+;cf4lEZ#&PE!4\'Z$6E$S$h]S
%Q=&=r;jRf"OBY'>(A)^#^o(3#OHeF?8?]>T8V'Z+L5BoMbaSoU%KTn=/roh8[d_EL`VMS76Dn?5'Pl5tl$KE"9"?r:-^d<C/<c"p
%bm2a/PC@[?cOB_kEo&O/O4/Nl+O;\[Q*9cJ;?.0b*Y.2>pVa#p:qVFY&B>Z@94ga2XJuUKNku>FT>5?0)i_1PkN;oFQfY`=PS@a]
%Jb!:U(rNX/h(R!_k`7p2n&?`djJAMr.Zt>)CL=%]fqq`4<.FsJQ_TD(b;q;P6r4+4!VcNqYXCf92F*2"#\T/o,n)h#W9b!BG=5"h
%_J%RpIkY%ICHd3uQT7r/KPXi<h^FOeci)tt4J.&_a7g#>*IN8\8&XH)b,E!FiO2m0VpG_.,E;Ifk!:C*S%WA!c^O?uHHr,s,#O4R
%VV<tRFZJdFr>Mm16J;bj=IPDYY4:_`H]]ok!YCQq'ibB8em*`0+Preo-TPb)gP@+6QuEbXPRt$N-Z("r*_Ao,A-<N\P%H!#>d<?%
%B*b@KVtB0h_Dn<".%$CbGKIa7HJEK.fU7e)pi2cf5PNL*d<!M+m!9$nI-;6>^WHWqd,#V,Zuu/.TG]K1KX"E_#e)\Q-])(AEs)m]
%^c2qj3G#BpE4`(#^%+8A$XiPc"N9N#qR@3a';6JjfcgeY)hS?p64R8jmo]6q[`<GnkdeD#\1&LYmdlY4bcEtQm(8S!oM>??AiaGf
%%MG2j1u<k7R&.t5Hq1%RK^]nE97N%tph"CA:hCc]'EF6iAE6[;5,,7aV'qH4&C\;O2@5og$j_Qs#W30PW\>=uC7rV^k9a"2'D0(u
%n/'3Kp$-0>PFER\5-(UuF+W-d2kDM^J9`s93iO\lqE8:d)oY7c8@k:J_GF/0EMVKe=S"3]DjC`mLn>?n]C6o+n-.gQ%u-R$Xf5,R
%qA(QK/*$oU]aJrq)6u<)MSeuA23/:>m4/f%9Ci#/rQ]4D2NPgIl=k*OM!F=m^`_cdi\/D;6F:FRdfP$`%i-?!X+]sf<.79RH+f.$
%Ggq.&[hn/VRd&JqL$XaB4*4b_C]8@t6Ggbd&j.G[3kk"R^YPnYWkg&:+R2PjNMT3YP/'g.)'m?OgFT",P!+Ihmdbe\75BRcgTp,M
%#>##i/tlg7l6W<bP/`@O;pfs_d)Wc,0Kk90j\h49iA[sr?ceY;NhWPd1KCDGQX(@uTbTmim!_Y4]#:(@R)a[:lGJ_d2_k[m.[!Cq
%g-qUP/<o]sf#?V.!L'RS2ba\o"gOlkQ&Lre&EFbpNeOZq:mF%TA[D"pId\i91M/?iLC6/pi-qq+(9-\$VY!UYOuH%,,<$(61op$H
%[C??1_A;Ch_).@;XW"]_gHm$'*/iV83pqm4$MNHT+B_/!K*m,'/Nc:7%C.\VPDc2sX>__o.uol&0KL-$'H3Uo,Tfu\.G;i5lk9:+
%Aj/5p<q%p;C@P%@/^0*N)o)gq6."ga;agLJIo&:u>u4U)[_f[lb4kXG1')kV8l8:`P-fgNCur)T9W::D<t:_N<tum0P=S1WFu3gN
%efBE8<EZ5p>8\Co[AQ%]Cm#O@a`a63Bi[3<'/iCU9U]kb6WO#>^KNo'?%@q\,S:[aagrdZ&1>5e7cHP8eG`%GSm2gf/QZ"t91=`W
%_1Z_bh/ts]s,:7?7B6?IGO!'`H*bSIE8KLpKIHtC@5hb>Q;o7C`ZGTOq>RQ(,++.Y.g6V#V7S)30Rsb[NW"Xb`d^Cho*Sms\=)6%
%e7S\i3e>$lp@o4Rm.V0H/5%s#!X8n+I_<3;j1`?j"'a*%#SL:%Kpn&5#,=$o9.h`.F[BCnGPDT_;e:V(*lJ,I`e.U,McG.t2BSgM
%Rnh6)]iLd#N7DQE)<FAe%t93%DEgHJ%@"W`[eYC$-AoLbdKnLJ_6&E_"Scrfbu_/'B!3""-oqRiAR,@0EhH^o8s?lS`UBPt4f@c@
%^nsTY;+\cOlT76MNjq*6:$qdP^=.;kkbl/dlFZAA;tfH3$DT$1b>X**!>\SM4a#'`<`D@]^1CYUQs3(BE&Dra+MI&*R:I8Fah(#*
%$$3&N'Xc,*lQcX:OaDM&4E;P)JAWoTZS#?aD^f?OG/C'%h%&uV38_%N(u[qV&U4PD\nX'sI43EkCaAZSaDGl,Hbn$$KFcWI]^WJQ
%*D[7>d(a(9MNn0Be/Da]K3EG'TJC:$$c(o-5ir/TSEE<Ai2$[q!nLnNrK)XrWh"ZQGfW\0o^thPUu(.\JP?S6W>&eIDD*A`+:/QX
%FUL693R/0OEY=2G)N"W;`6lL<1^&4d0g7lJ`%juuQ%+lh?,G'Go!6]-j,-;0270/uV=);41ne>\p*"WO+bp-;WZH!IG9*u=V5MAA
%\D#eUG_!`<`ft:'I(:b@ODt-(r0pV3UW:n\c9W"d`2XV?fYMQPF@5L(0<Pu`>%%nGT82"YaT4GH8Sb7kian_?S5;71/5`4`*Wh4<
%6=9Oc[N8;?"o7?"NYG"UKnkZChR,'Zp<W.*H?Kf_ZW/*VoCI&%r1Z;+gcJOr#_i(F'4mNg/iWs<A\Jr]n0P[*W*Y[3^.CTX$lE'9
%R:7JB\ku$FR5#X>$[K';m*B+3s/,?9g)EiHbQ>OD"ri!`p9Zq%W94\_6@fUu7u)L+o?)ce_K/,!F#bS$)H==uf4cO5d"Dr_^b25,
%aOZ5rUe;?^GTe3fr^+HWLTWJogOq")p(`B,&lN\rf6LJh&00'geU#Q@"PL#;+IER'R+j>=J=ej^&$4]O=Zj`'<b7"<,I>ug5"Gn.
%O^6!@XrP,]j+T)N<)=3pn/l2L\N\/@d;bXdp(@H9@3SK1J(gJYQ&d<e\J+tX#p,JQo6^"q:&E/SI`DasP..`KK_5g/U=)K]a<.;C
%3pXQ(SZ!qF@h+#)f\uS(-VK>"U@Kti#=PhZd"3SHSiEueKEHg46!8^um0#M==@E^XcQ-Fl-JbA**1FM)E10LMMT%YJa[b9Rd7.=M
%6-^`)R[7$@TIRnjB#N[((6O_;7mN^]I)O)'X?qF7pt^nqC&n6npBbZk`#i7D^rpPYs+"-D\7*o#Z2JLK&:hD<!0<SF,)ffO!<tTK
%56@fBKZS8opcU)6d<a]BKX+nH*0]N>^l!*TbQ>9V,:>a^`TN$S0JSVepY>[9!NQBu1Cp"dm,!a(#r]Ino3iAj.*NBkMhd&pVGZH<
%$V!+.Z!Za8jR&U,e$_i[i((4H6HX:L&>ol,LZ(09nZTmNh,""<b]LGI,]BRUk"6nJ(4.$k*A*J\FP2.nAkd0pm9s;XZ2>-EjDc8)
%2s,m`\Y$EVbjWG)4=o!'X#[h+H_6DP6)>!r`g0V<jnV"(iG-!>r1:SGR=,))\WDajmM1V^p>)q)a2n>U/F1PAK7ef/=\1@1#M*./
%c!+M,m:'Kf(*"oM6KA:-$C0-YcT(_,=?;JthoY*Mq;FKWI$UtM"$4+*D?pR,T\4oWPqhb8%9ide]lF!Ygk&bjSJDcnCDb@48Abs#
%GoQ1Y3]<6B=@t1Xhm-]C6<IoOPIYNc[<X#a'gF$MXW?Uc"Y($o9-g]+Z`fLao.[5L"j]IeU*OPo&(gg/^-5<5Ie=_hY?0UM#^l;N
%GPH+>8WWVaX,jtB->3.a97O4&`tME82HiW5GkW(B%(0)M3kXDRcHrVQ&/GP0pZnoQ%'\[B<Ussu7AH$N1-qiR0+!`h3WU09T3,m]
%Zr9-_3YHA8O2V"=H&isJ$f.L]VD*%Q5XoW(mK(::.gfJc4!`6EhN_\I/2^RB,R).%7SJ,La6"9,RdcsY!\]h6'+of%5QMM.kN#;U
%l^1R`FB%i)jS<+Sa!R.ec+nD%o@PK2BN#a*;d:`<"Ge%Q_G3WVn$4gJ7\SMVjt4_<a@YMd!r7jj9iKQ(#CbXSUGt0"?5uIU$f^Hj
%m6K"nIC>@V&mZOF,:[s^,7EdAfnJWZ`0-p&]Z<2a=4EW<cOhEegc:%Xb`s@+mZ<i9KkYR5.oEqZ,ik]J\O?hY,")ij&<tR.Ul?Di
%L#PKe.WICIJO#5^Tl`:#<JcRcYrI#-Po>&kf\;s"Y0%dS`@kVAC9=h*%$gTRfR1lcColuK-3!#e<KijD<l.PX,P,9i87a..`ON7m
%;#I@L5_g.,@HZ<e%U/1U=%n?\Q;VAbbV)$t>U,EC+[l\INK5Qh!p9"3.[bNl?I_g@_b<7n$DIo3Hj5cZh0C3a0ro@(.[NV5pb+u<
%j:818j<?8aJC"U7KJH)6K]3.[Z]+3k[usgg3k@o^Y,:QaKFsO,*E4"V65*L19L>r7Pd++LI6j8of["ok0a258pn&2E+3*/]X]Vl3
%MOu.(lZ>6'T-QBpEQ:H@\>m@'>-I(V&$>=Ta$.9Y*dm;dd8W]8!)TrgAasAf*$F+EOMWA%T1mq:4uX$;+Dq67c?=&75rk*S>7"40
%(dp70q*?V@IYaH-LBI.ipOAp49nlD"=&,+ST*1A`qmB#RLUI]df)*n'^5R\7'SgR_@6r"$[_(&\HBi1IV1n3!U`Tlb7q'bQ5%0Tc
%(mTqH$j5a?,XN%3Ji:fX8!fXESnYn)N,A:UiFjo6HsEKO3!A=Al$VIMLZMIE.da<7P50(3.306&FS5_Q5jjJdFH]n.8+aKCjHVL9
%REeAoPUs>4crq!anN.2^ruhX-%/MM:h(aI`;uJ1BL,L!*^I'`,.=!)AS31+7`I5XfrMN9h]?&4Z9\QlkT%I7tK'KZ"5VCZlp^)Bn
%S_Bep[_j8UTdX/BiSe6T=Z(Ah@,=m1_%.?ph;.0E\g&f-`$lE[a[UuRNP+%YU!3Y\;0!1U)s"bUV:db)pLjZ><JMOuG[?jb5B6P\
%X:'JIf.(qKMrCD,k^^I/#g:H8\&o%%AF`&PfAn?f*8TFaJ+:dF6LeWrq6$'4Us5Y2$-*W\JUmG$Th%/Sf[!)7N.Ou661uE4`$'pY
%d^E;@-4"3R-p2V14Ihi.rG:ft2<M@L;6X<_OKlQOgEJ1a#SX%gI=tP+/<1#.l&(&SZ7KI*,f`eo<7!9'9iRNSM`t,d<`MT'/mo6.
%nuA",l^SJ,\tTR_PM,EaSFoQr^[%pH*cug_qK,#9OOB"39iB<]D_@nGG\h?OftFsd$"f8i=-H-dPO$#0D7Y0UPW3-G`+)),/+FQu
%5q.eb8h(EP#9>CU"4F3Pa2<NbpK\f"UJD2W`'7h,:4Y!/:F]F"'24+#SY)u:AeIT[0fBLn53+W>Rjj@-+eY/Vb)#iPB+e>62H)-,
%E[WA9cO]ZV,XPT]9:9G>E_'j6D8ip8?"tLH/./#'"@D&$F[$t.r8IeB:;;Lr3M(p3Je%ObGDWt;Q._R;bN]qmn-/t[:;t!9lmKEX
%(UPVjh)P:\$;l0/\Cf(1X+_!P2^=8#FJ'a="dMItIGUm@DrB%:IHpnl/l\\pi%]>sjHL"lGW[[pL\pd1<>,Rjm@(2fV[uGrT1[A8
%5poGdSJNhI'i25,a\DVDOl^*)d36Mn0mDQtU\s-bKaA$=UK82:>I-W49(aEigDN=X.SEc)S)C4`8uuWrqA,BYR%$IA*UI+D2#L"7
%;?Ta/?q+g=:N.HL]ha/G_6=YglIBn),RbCk1mKL"XD/IirGiI>%oAJ1_;idaX=i8Zc#6UYq?m+H$g^88%.8Ra?rgL"d1R^XguK8l
%+H@n^6GIZG>B95;,Yk$U3.+4bLMb,jK#>+8+\W\]`.CXPTl8E\@E:sbD0@_oO=lV_M7RUk,K<EOdkg^C(LIb1T\_;9lCf1A5A!E,
%OGS)CDC,jh?P;IARA\C8@r?W"1J,H`-\G,r+!gEa\KHT6`KOg^9k%]<4-K$\OIT`!V0`Wr0ui@.5e8D(Ao-UpiliFH67)`TLWp;:
%;1Xiim2UPJBb8g`>fi,E.B;C40>9d(1`:Sr:ClM^:NE)Wm'jh1h0?N##lmVo:mJOGO:Y"e_5u`<=ZfuoJkkQA?PYue(7A_e/r\j@
%'1&"s';>:i)WX\rD".XMQK[#T\dSbC`LY6&8*<9h<fi-W7OHV*;B4!,jl\I9."_0M-_HTOLGmBdoZ;CmBjT#$"Pp\_q/eiKnSh6C
%bAC!A_ECRPC=s4?@Th7P:+Cj$n3\#.l9Id6d`E&7kls.&H/3&[#)*D`!+iTNO?(E37nikK:O<!>a@T1RT(Je]PMZ=!:3u^W:\o@`
%%ua(@k_edQGsMcScB:(!TFuOR$pE`QCK/tbdWDc]g>^T<E<YGK>mP4U^>%:"U%.4GGuoPkRGa3$-l=.?0\moSDPMLj<G64b5'>U1
%cEnEV(+@;&lfh/aBo7\1*5`tAkbFJ2lDXNNhL&4gq\Z"S3HKel_p`QTMAY-V%FA$*%m>IkP]5OKLJ`MHT)9r!rML&jj&5DIBq)Wn
%/9o`*UPQV/2:Z]NH/r-*C"Ck4\jLL@Cm,%C8=bG:U#a\Wn"Gu)r@h%L<&_C83.$P\IFHS,Km3JLT#lD$fBKmJ?A;c6l6B<j%KI`$
%nAm=]2&6_3hg%;+em20^88=$0\t3f>1e=/$l3[QZB\071LTU'pgCGK-LV?uY9rU9<*B[a&[cp,gAP3Qi+KE,6LJH_;nJjaGLl#5,
%PtaBln;3pYoLMuj(03eU;'r#I<NIdRL6QXD^a(cU.6t/;4]:DlTN\N"SK@tU-a%]5eV+%TnEs_1CrUnHo(P<>,'cZ,I@os5GRe'1
%+d-lYM2^oPI/mDQ.i@%.nslV^a@,;QAJNhNUl(^c[r6p3:3)WE)19H<`d.A(fdrnjQ.$@s^UI!+D?RQ-[S<a(6pBOG:LFZW#4?hd
%5K7dB!1N)NqT+m&=p8;6!tp6)893jocO*iR7FIIs'c1#,<K'NNW_aL32=@*8W*JAc&@XmFrC>)m,SL0;.XUosFQ3/D1e3,tTt>aR
%%RqAU?*E_;GhN"&%B4l_b;)0>O)/R0fo^N-,>ie^"U]6\N4lu8E>/c10e&%>&36;l+#>A\%`M64^8OBWqs!%[JbMqJc#)7F:%/62
%"R\;`*Dc+;g\53jNdo&RJVqn!:1pDV,ag\=KI,L26V7S,k'R05kXd+DjD`&&"1QE"2m7fQWL32>h$9'-8im:-nM]8hXh%O"^?)$Y
%#Q:><?r`C*FP#jU0qREdNcjL7M0G\%Pgu),+fnbMc>=rUCr.>q\X95lF?M420]CjhQc(.*.qGCkoU7(KmLN2b4fr?Y=V@C&hE6^k
%V$idRVI;b"L%s"(Ecag$kk*[:08%Tf-^`QW6n(fcC5RQOY?53Bc#sH<Z[6tUE&M(E#b`4P65p-'9s1OqOqNmA^&'"=0B7@>([ffJ
%n2+%:8nZqdSMTe$rOsWe!UI2K%qE7+5K-iW"KlFZ2M40.OdG#6@/(;"&406p+@/KTP3_$-7NWmX*!-:Y-Q,qmo/VW`q"49<7(d=V
%Q?$5:U@IYc's)*C9cqN5ljk+6!cWVPpAH*eOq7@(`)6^R!8p21Hu.)-Sh/e0j5u^Q#Q@:]'Ja*;@nDpc@'FlAhM&pk8C7uR)a)j8
%O!TYL:QcPo[ZFu>Lk&7W57L"1Yq!5"B)kMSd^eZME;3$k\`rk+.'I)5=q)o&L_iQaR1CQfeAG_04,BV0n4!8FJPJ5,>Df>*4RrXG
%>C-cS:\4p7dK4SFcVF`H<S,]_[0]+1H^]$k')?G"<jf'ZmX$-d4/Vn(5E,.N-3.RA3Hj3bB*+\!F-*5>jT8uE."HR4*p3SUaREAO
%(G7C(djK"OH[jFm=:[&3E<#Q@!d@?l-?.QKB*.nCgCJqL?3-EU]=[We`;XB=9i]aV`!W2dS#]0s;9[$^V[RcI!6@[OHt@MndK]p:
%+H[]7fK=G-&lu?!4++^jQgOM*0%32!Dn=]9W5?Af7tbi8^\P%epOg,K!>"rSJoa-VmIi>dIP5W1$?e&LRn-&CNC,mt1*Me^XbnU0
%]=0FoK5l-UR'J%2b9qo]/1-dTcl=*u`c$CLkH8Y/2!=SZ'.,'fqgLbgno><N//(X6,tW(WgJPsH(F@I\cZRCkZG.[20'>lkS;;Ye
%Sm,E?43=l8:\i94[_@-Pd'U&'gFfDmrPR,n,t@4'C$L3S:AhOF3/U4$&)FrAjCJ]5ZD(pIiA@ZWJ3im$XH(Ak99I5>K2SbsWjYV6
%;FlQ^!u"[Ek0o"A#Y,3"MmCoOIkXQ\K1W4!j>"/k\.O9Om[M4=W798-NY"m,PhSqt%.LS!8JXgWR1\ADY<GQHok9M;XSn<mLr.(o
%?&Y"<$bTV%gM'p6SQ_qY_"+`_[I\`)-/2I!W51jbnGUhAFN'$DD/JBY]QOCMUt5"Hr%Pk._IE`kePTe0)WV9ej\b+uYar4>6V3Lk
%7iep9)b43BO_-b"65;!c2E//Xbf45Dl;C,*T>Zo)/R3!*D7Y389dDnZXiTQ%ck/T$6[e1lr?*cK^T_o]j,nO%I[Q_b.KD$7>$8Mj
%JXSul,C37EB9kSFGg/#*.7P^`M\=G7=Q['`MaamJS(p/Co)<>3/u7Ud[d@apn\-A1fS&aBe*DcDT&Z/HKt>C,!s#SbMemuFEE)nH
%ljbFE&uG5K.X=d0`g#GBgK$7^!=hFVd0h+Uldias1-5j/,hmE<$i0d9bU>u.BNrS/je4%OQ&m'`I6Ykq#5[</qK/9Ii&q/dGQh;_
%GqCbFX7Ta11"UO]"6VY48)T-5"DlKr80D:jVR63/58F6;l'%"S(37*8<lKte\SE#F'4D:*oV'Ai*q$Ud5I.?N:\lf2=Lk)UWLAu7
%nMF>k#c^O3bM+_:0hWPLMf>8mZDb4`=Bl,P=(QHsD.T,ScOV?um[E4S!SQo_Q7"BB\""f=`-jio([j_`mmhW]pf*iLh3c9YQ1VrL
%>E@\HRrXb:9eAFIjD_1aEm#dLj-eZ$Y(I%k-eWJF#T8u0>$keRa1*5:ScO?@Y\LIuLSe(j.mA&CB't-*mJAVEcMTF'anJSme;_jK
%0a7M49MM:Kl9h+#Q"fj<J]^W`g,:V>NtHoZ:N&Hg$1f`tDk#AWe'mH%fClRsh=Y9H]^@k05JkV'(U=BaEf&p*Y2:%&L!NboPQe/S
%mSnED[PRV`>)/3;4.,;>8oOAL/)MFY#_hjU@/KTYM`CJc>>7[U3=,<W@B)QPi43VaA%PA'Td)>apP3YDNU_&[_.L]5!4&oI2l<V`
%mE8p!KjF/&kb.E"\.r/oQkr7j8]&CkjE@UL7jb1-2,a)Mi_OL-aGAiiXDp3,YN#!7Llm!GZjfXR6U-aOb2;siIYa?@Q_D7#Ue4k4
%Zrr[sTgIGo]3\ko!\9pYF+(;nQ6K3[&-S,]o/Ojuj:G28H\L#UAPsWI@5<$m6b.PG2%d_ndmX#-ps9VH<;68rhi7-JpV=6b9L2)[
%b1:WA_J!4qpK\K"7cl`hO[e(PGp$f94/]aSAWT/YMMaIVLG:EMbPWQpQJ6qNjt`a-h*):6#sf$0D,]7%=nf?L5\^[Wo=!BaA%XM0
%jU"hila1Et/Q\92gMcb*]=K,?mAS^@Y,l(gVitik]!*7<4mhDKL"Kc,e'lums7CDVh7)e.Y5=5QDqBEHn&KYj^RQgp`OS+iI4CpE
%e,kgo@e!m6R\<V2'P(>/Q;_&1Y%B&?[]Ud6X)\eW=^AZ0nk$.VNr:elXD-_h:CB2UU$:Ja?M>H`+q=/5?+98-GrYlSTcbu,9?r=,
%<':uo^rpc^Nq&[YLenh[[Wkfn.QTWbD2ufd/3T!F2D4CFQf7'(@M)Gn-Gu5gl.shA1PkJR-Dr_\LRtGt5eHLYr>;`drfl;#Ba9Z`
%.I@eE9=6Z'O1$_$MOT;+<XS<,>:Z^DA*K.dol"kC>#AM9/[ScsLoE:N12'P+13ZMi7H2&K.DF\^,WeWEIBW+[G[:@90S"c=Y$:Ha
%6,Z:Q(kn<1DFCctNi+Udq*g5(aH*jLC<3iX<<,F[W*WM(?Ym]$,PI!ATcr8U*?F2)^2:\#5BJ/2b2%KTn&K[5IjNs"LEP+m,?sZM
%\-=q'D]PSMa7)p^Z.1PN.U`ig'&?Y:%^/KoV;^NG,Jd6]-qM7.LRr>o]<.O!Za@^tPAoeal7K,p")^?G#@F^$`jKg+WcVLE5I=rP
%!Uht(WF.e@WTeDYkKH(.+T+U'S/]BFn-EH>PGF:F$7XQ>"4;-(#D[kY=h/N`eM4*2Qe46"&So;%lc*NMm[akoA%T,VpBXJn$4ll0
%S:$8D'/+'Gm]&1g7GFtCAW8:G,[AIpdA`MuDPYH4X.5[>E^jq:q>Qd%n@ST11Kc%QT^S`mS1'5]O?Ah6)Yf:k,Vr(Q8(D6Y+E:q;
%R0=2a%YZ@,pE!Pi[L3g16`ET1jcGbdT_aE,O*fI*Bb3L*60pX9NF5k'1\u-VA`?2*8?O+Y/Dn(%q_>g'*pI,hA`=rsOh0n:q(<A%
%O%U@&6=p5mdC**/<i.?YQYjCYlkM3['pX8b:Ltd?HR?e`mCpnGX$j6@:[GTi]bFV-?=$N$ook@-Y'?5jQEO?W2E\+K*IBMK4Kott
%aQHK&]Goo.[pp-mb(ic&&bo=LX)9Q5O+suKi9)K=dIu+VU8abk4blBrYZnV$K]5cYEpVcOIT0d0&i!/gSY-k^FTE#e\(DgB(3qo=
%anq#7lAfDNW9(:oDilE9'dYo<>_@cG+Z^C8oiPhha&.9cM_o-1UlUm7gs8]?56jDH[sZ;?Q?)ZnmhKGGh8[#^;mBCt(5ApK1K3#5
%Z!)Wsb'0JG^-lR]YUeRpm'65&aY&PL_s9oD,mcGA2SD3hKaT6/E:V7s$Jn@>G#Pp>Eq;C'nbqW3%$QM-a%R]iioEike[4OU)@m(<
%V:]q5CG-E61FFQZAT]D#+&F;2=/,+$Q"8]!2%9tF4h3kH]/Vs_fnQ1Yid=^VpDDp9#A0#>QVs-K>-iS*=U;M(eKk-Fj<KM8-(TsA
%42MMq7I3_8j"bp9\LD()gY*jAH7Ue,`\&0@!k*lG"GTR.;`'*DMu1?^\*B$22X!W6COkV`6$8*TOuIUGg3pm-)k\odbhF5Wrj.\X
%f4A%,l2:\RhZ]/`V1AFnWWF1p'3f=i'!+e*%X,]I=l$Rbrn\I(:*5U;Q'KRTI"o_7GdFC?,@`5D>AO?n!.5O-RbA,NGs7bh2EKX&
%r-OfW$FhTR:8&2,R3JQj<iI-#m$itcL1;QX*-lmR0qa?'@n"!JX`'^.J@R>/Y^FZSV`6KI,"c-l_iSF_``\[PfIMOti.>LeS>L1d
%<B43\_0t3)pJ$/;ZO[9rd4.b08]O.-J_-iLBuHpt:L6DR9Q$(Qh!B,<EnS`O,[G>QgU;SR]*I)n9]%2\QK>H>l(ekF9Nk*Gg_lH_
%6jROeK`q`g;Y3!_68f*4T=aBsmI.gic[s$hi5u^"f#eDd%=S%!nNr"e!Cl1o]2s1C1[Gi>rZCd"P'WVG!:"_.#_bc'Z7<"-">F8e
%$mf@>be6CfN$o&8b4*8,,@!g5o2uDN+WVH<+d%A$n3EN50<:=Bp2A$98PDIe6=F?,.U^R-E<1/Z'i_)]8<Z_4/!^Yt!rLP5XGKcb
%,S@]!pE!u0+85P)A9>In'Se$m6#OV"M]*+S&KHMm6/1r:_Zgbl"i'\$7dN(:a<X7a<",(^8O>QIidOY5Eg\Bd]0R!D1j[.s+7.XI
%W[p=hD;h2+r@JZoq<%YrJCAE&,?$;.li/*s!TbOW5fH%q$I`-C&DJmUJd/'t#>+#:&f'fPK0=jaF?_?i%^8=(IlH\LFs(%BCSP9c
%4/"_HS2mCnQXu(!X)*K.f=W(i@gG"(@Va/'1VdGb>+B*(.s,_:ZOs7\m`n=h]9`_J?I,X?p<dGbN+5GJSHL)%N6&FhW/a\#<k'P&
%F*V']e"?^#,RN4[,*5na+i'loRe\WL-g1!p-0a\rr)Bj[>!Ms^@4QYi<KXo&LRftJXAcQenG@Ao&I'B;b)roS>73^5I$^=laG<F*
%&e-=plm6o`%4Z`7C+qQ*T'D#7J2=tpdc1hQ+E<(%1Q9?]SXO(EgBjjVRW2KE0%HF]SWc(D/X>[BM!nENJh:7(#e<uI.G\`)K(f`T
%:gJtF3d>Pc-q#7Xb(=:.%<IMp.R_g`_*Gj.8]:h!-90Ita"-cb!sd4dkHgHC<<>d3KqI\+6EENi.u!aY[0\*,bJ"_;Pdr+c?C#<*
%LGNZ2IY?VY/@$W)!42GE>$8m0-NVlZnO+,LmX>_q.'Jo?rbe>Mn5'g887J)NQn))(S77W=2N=0OV]4;d\3.ZC,`/JrXf)Y(le<+=
%bsDj9.LNT4m'_g;eTH'Q5.g<_`EfYlpNf#O437.lA>Ik"r?sN2cQ8`g]fQ@"X$P+>`&V7s"=:+2PREtMOJ_W)aVddW;?j2"$`937
%&2^D]E6&g?oNqbtAqaD0gF<PX9jI@K_GN5/(b1iKEX]W7ZSPD;Q_f5uWUr\(/J>?OOoo3B\iSj'i=bY3)UWCfLJmQJlo8>2,4UT]
%_47\>hi@7$Ynl;sYVpAa0mkI,"KL_'Q]8TjLN`n,G!P.h&/6Z4Y9r/EFtn#9@AjrfmWM26lW.!#=4XYD_Q+#a,*@e@W(VKRCO2rC
%1OD?H9r=XTnu)@e49W,[mimr@]3U@$&Oc_"#X3\6=M'4u!jdoq4T\?Sd>#FNgX`MK`qY"p"8GRcUQ@mX'/VKM\r[br<Rs>#H8kuH
%ZqHA-jW.<O@s&p8B$e6_\d;e5%6k;>B]I53C%,&?r'^\7fBg\XL2W6ZSMNG?$'h_>4hM6/<(dBW8hGf=`NqC,ocrmPXt8N&3.&>e
%LC[nm+QJk]5p%o]eRT^E+Hgjb"Y(PtnYo\'+D"&"Z2Pr8GdYlUV9hP4O[Z:9Vjbl'aQ7g;XAi1kc*%%j])%n_EE1,gA,A*Pbe`>]
%]rX<%Y>;YWPrdgZ;T(pRc$FU^LJgaQ;^dBt0.D&e#-';:HjsdOjg^Qm%)(N.1ll/Ero[So_!F)uA65!b&YK-9dL2p*<?$>'MD,Ld
%=%_4DNJe5<%li#)X=7P>&]&h[*7cLF!IOCJF0[J*OWJdobuc,\%9.=)]mY#KF%:%@l:>$N*^t<mN(2W07`rb;IfC(<-p.LL:hi>?
%/)3X;D!d<!'a`bA">M8lJRIMVAOheO>B*UjT=XFDOVO'JF0HYMp)`crE5>YY;kd9B"n$h&?0W2$Z?p/rmF0!U\/j+\>mq1A]RZZO
%?Ct([%qGP:k7N/&^lTS@igh<aUb=enE&o3S8boj;)uV*_,m%-6\C"jm[&Tq/i'WIleTaQf:bLJ()VaGU"".q&:sOK8ab2/IrmGcC
%*#q?mKLbMha3L,D)s6!TO5o>3f>7DLR-FLu3ec^+I"Bn9RWf&^6M[A=@NKgb1)7Nrl53Sfg[5DHk:4mlR?@:L4QE+2ZH2o`7l`5Q
%Tk,B`T,MNc^NUI/9\kFJP)JRsTLr6c;%Q9Xa(FGXPTYluP'u$(L8K24jSL8CgI!Z3kbE$u1/N=JT?0'[rQ7ajSqh)]\8Y@eHH8A2
%.9:Fo?!&2S#6opo==Xt#NVk0Z5HX>_3f)rE;aH_#Ge&"UMF99N?Z"[]*COGT,3r!I8Q>C,9nsX!@4*PIPEJm@%2@(3<H)6<)'t!"
%mV&#@'_7ms^^tZ#g"cYc0/o@MC"qtNh<';UbK:i`BI,1^&D)Pld3.$7Sbe,@+&a+M@NdBG,B-3h4<j]uYPekh:*Vktpaj&>UX1(4
%#b".g19AjU-nGcVn'3O.%cRJAMhf?=<h]_;;@,BE^i>PE5g<Vs290ir4V%&]PDu]<I>!d#,+E3!-aMc1]^Zqo1;SgU=$7O`^dA1Q
%Ogg()'i@eZ8fZKM'$rrP'd4XtN9;=s\d;k$\l?8_=[%)1eXd[;U!R?AWaascGJL=OY[\=!qAJr0'<;d2=ToO(I<LG8RDkhDP40&<
%$Q*/)ToqHSEE.XY-CV$Gico:)ZjGC2CD3R>,SS@EL7[5<VIDDJi)7a@WG8^gJH/D5_E,u?LZe=:_'*Vo"K^UGSAW9REcRM+9b/=o
%>M^9c>[I?AmMk,)K^\*6[d@;sLfoDO"4egn!t*DE[0,d@G4Mn$rrODo9)7[]Xn6[I-kJsGQSX)m?nO"9oH$N8nAA"IT'YA!I(H)K
%<gi/AY3GN!?<mUQa!M%7AoND%Lc`cD&0u>d[a.L?qa#]2o-f-qTK:E<dDMknQSdUb<@e;Hm41iH!]Zti"`7=nN(VDCJ8mJT!#AR#
%PcA'R:B$6alH+?;_9ABY&usi6>)&QlN=V:NpT9['2\&?CB)f>WfSD"K`t8YVqTAX+m1A0%VL,U3>X$.Q8K;=Qndu<\Li/nnM%esn
%LGKECFq&tn$$iR52[,\8lIlqP'j_)<dW1TgMQW=BRj;R*O][ICg'OX<];k#pol<Ct6j;<T<?9?C1kT9.'s[fFY?U?@rJ1V%gK/Mt
%5(.mEn%W>uY_E&grb[pZ<FlR/B)Ak],-`Di"sVQ8qiT%uJXN4KJ6U8'0hOl(_5(GP'-rcni'JHXg9t_<2U+Oe])BJBVs>4<F(ne=
%&`\:(LgH,]?0gi6_4Ge!nU?;_5Lq]8',s,_)GrCZe3Y2*g\/L!oF_ZaT$98GWjF-u&L>B`l\^]pbtdVJmB%Paii8!*G)">)*:G9d
%q,hhqR3rkB0-7?g4!_mXb+o$B=]T&H[<&(oNX[N<G@1_#Y@!ASX'9eCHN3\3!,$f"6/L^HKFG<+>=jMleJN%(bh4S=?Mkru/X!J?
%@/Vfca1NC$`0H\S+HnCZ.$Dki&hG<@2I*1XJ<X"I>,U1o<$G#.i0#NAh3)SFAZ6dE!pDlT[m3"c_R#ROnM%6Z34gM?[uUfD$Vs"d
%MLWAc+EJYG/-),LOt;glk)RYo/maHi_.'D1#Ohf<Fgie572'H4]fr>0_PO5q1;CAn4"$GHXRNTdWqphPHu`(2@-[+4IdZS$D!>Am
%-\s*M^O_dpo2Q8.'B)7^K:IK'asu07LR2Sf9G'i^h\7r*ks>(3q&jB>,_#*W:;Zq)^U_Gu)[RhZG?^3QT"L']d7'HFSXnN]mI'GO
%*l`KNJ`$S9b#=kt[PB-^A?lK$Y'55Yd"1(mN/:sK,/BqO=U(LLE',4)'PX-lNLc=0<I].TA+Z.NZ`uIt?(YJ0Pkik[^&?k1_J\^K
%XI"4j8tekTpS!9UkI&EPDc@V@$:10>&15^CRlH+kU1U[\Kc7-*Y,o=mfS))qlE>)G!6t^'c"_%s8+*Qub+-?%]hL\GYSqj.la==\
%n*Zshc#bqhh\?+JglY/.;dRfRKI3=bW/1>n!aGlcj+*ZnI!nc+O#*cjgH$eTU\!#)"t]l[o5"h_G(9kl7i0#!gmpO!>6EMp4cK"o
%PMaJOV-lQa;A>\LisP`EaVfTTn:D3rWff,AUDMjWcV2J6+V?+GI<k=lDsX:lRo^stX"9kO"1'_`&@Z$&P_geP]6?HKL2]'E0\5-l
%dO4<e_?^UNiX,7'P"AO<6L)Ol8`EsAJ>l]0s*A9Tr%K=p;[)?3O;\M9NGZi7l?m`<#s9L1FuKWNmHmsk`F%HWgCKl#>E(e)ope3G
%Qb\&A[cod_-^jP_.^oBp,LB+<:-H*A"ug*/0SoKh_rX2$kAD6nPkERd/jIJ&]7)Z8V"U:]0$6SK?esHISg.I!4cK&X5)!+^"fFt3
%__+$WW@HuYgt%LNL<'Xlg*j%\i+iWW/Z/829jk24gY%8Q3TiYs$6$7t(M?+RV;6T>;s"n0?fuKW4KGIY!T%&^;>BA\16j;"<5YJa
%<12b,E&$q!63uJ=;[,q_TI;BgTuS#t1s(Un,8l#nq%=tq<ekrt/=uG#(1ePZ51=THK,bY8BC3\SAUehDT1/1uFoU9b?k3e(1%VH8
%iifNQSIb.NmD^3eqE+.*lJ\R,=t5&*.o-(1`h>t@.VaQY_$-U&Zh>XQPPDO7ZP"9JOJ?)&`9)n?F>e;?k#Z2hX$p>;P@nBc5?TUG
%?'P08e\1q>*l;g]@BAYa&_?4N.cQ+OG]Q@bY)M@k(>oj'7%H"9N-UC:L/"(_U!-[mkC^d&"Ob%(4"9d%o@6QiK1V#(N=f,27_*nh
%;>eu#^&?kLK[n_m=F]N20.9So3,WITWpn7RR37$:a>Z(DLXH19$JL''AQ*t><GP.,Aj8gca/,d6qu#H$Dc/rmO_MEN]/:*&Gjd:<
%b1qBFC\ts(qq]oB0Rn;4%hJ^pgK^erpN^gQ-Hd4`(O->e'la$8KM2G`J,MQV(YGPRndp1)oh.*1ZG&8)ggjmg!8CUMkm5jfIW,lW
%b>YnDA*8AC9+OD&jnc<l1m'&P5#P-)T'0F/<L;!.k(L;&'`@4K7RpZk/=S+7-jo^3gomerA%E?l%)Q%;-c),jH.,^Fk@6KG<VLOC
%Zmk=!roQdQaUq#mo<nr!,sChsk+_XO]5RS_4fHo^r@%+aEBIm]#u?'MPIGJFGl#7;s5mrI^\R$bf3a"#2o#1TDdRtmj_(3urTZU2
%Hi#IgrT14Hs5pN"If&M6%q`)YN0+E\ORQ31=k!Nrlp.fUU(t!i29tLMFu&PYQ^oipBds/;<!PE*(g%&qD2O*gQfobiq&b.QPDDs!
%-pSKKL/,nfgahjZ,]e]e'b7%.'&ElohWof`T_DL%2V%]<>Ib^,\I>'.F%hMEbcU]D=#"/"@H"[oG`k?:iT;@0'6FH@-^+b<6)=rt
%c!ns384qARW[ouP,eL#`l"4l^*P]Mn>?oE-7g6*>qW]E/WDr%=Fn^BpoJk2*5O^,?'%%4kYBsEK'0pTY>)_9sclU>p4&eAuc=W=7
%0MXlHliT-#X"#hj*(5_Xm"(6bK-Z,[F(B-UP1QV7HR'cp$SB<!Gnod>&5$,+'ltOU^ae*e,70dikQ$Pe^p_LfV1P,Ra8ogn<KEkU
%U@rJ&LU\*C8V.K`)Bn=H=:T<BPCnI$"R)5WC-7[2:]8%]8!,=%K1s588OC;ff9Q#E:KY@MmQ5n/IijumL:sH29"c#d>61<L9%&8*
%l.B.@9.*H:!rsX_VtJn4_AFH4Od.]tXNH?V0tXWHX6:[20-H<$Z4D/gp`WMY*n2fS8Mt/Tg.@1lm?oCYeral9o3VVUTnl@9jZj`I
%0*6EskWGn'P'j3(^gio8O![6t[%cLKF8fM8huQLc1)<^<JC;>K7>"Qk-Ek?I$2u!-%fJ_2.ehY-@lQ0rXRB#HU[:C;\e-5b;#:#[
%EL*Cs*C?XjCp=]Qc]OTM[5/J=4L.jlm&F;0&I3@^S!6iBmBc.&!ct]LIA[W*p,trq,q+p+Th]]tMuC%_iji-r/q3YAfUj6,6UANt
%FPBNQIQTG\,o1=aW5^:1I6=l,-8)GIfJAss?K)Zu;W*8U=pKCh#]JLR#>YEB3D3m&i.-Ko`A49tTk6'V(H50H1W==c$[dZDP/[8Z
%&H:au@FM],Zh>4!@3++L3`'&cFYbP2BA!2;2$k\so[6J;.%^RL%O";MRoO/rA^WEsJ=<fdF///XaKLdIASQj*;V.*+(*"3oB;;%$
%=CoS:H[qG(9-;g2'5@kl+&O67Z#LL+&q5?l;_32<Mf.m!G/-P".#NlCU%SB_(`[p@mBA(6OUtPtg<IRA<"5=0i_K''?+7.;pG$>K
%E2SB&fhs\p8+SR>7^=o"3NtX@Z:eKRidc_+=V"ZXGQ>!$.O%6>A\s*N?j[$X!9IJG>_G-mQ&0iNQufK0-ipM:=O<Y>cm1c"N3=^p
%Yneu+"#2Wrgl)eq=+HD%R!ZKNIb2:%YE>l^['`:V3r<*DP,5?>.Z=Cie$.>c*OiKb+?,YgU0J,o#o!ec/&p!c`C&X#%GpSV^8[k)
%QO/J)Xap1rggUBh<ruG1+oY>!G=Pb1UnWr-cbrK?F]<iCC*sAV&e*+I^ZKsp@3l"ICj5fA#r8@PK'/\:&tR3+!?Pjgd_R_iB,XAh
%[]P^_5g]GD\QOSr9)em8.3L4l1gJkZ-uG['*ACJ+mV=p-A05U(JB$s=4(<Q'>qujC*g.bHgS$j8Ak4j[7$+\00Qt(WhZEdq3-SI/
%-@1Wa.O6PY>B0Nt0SqiQ5f/el`W0Vjoh3ej$At00l^"W9F$&EoQQ:H;n+K#5ca/?E/Vgk(HZ1jQG5&7+S"Jkm0-/`96m8],Z7oJ6
%J]8]9f"c2&,\0#h>7k/jfc$5'Pf_S<gT,pu/EGJ[/6iNB-fYBBR;J`C&D"f1[A-:`X3!#b6`AefF"=SEI5\@a4\>2:l,ghS.+8?1
%('uk.i`$@G;n0/lh3[Nd4hSH%^,R=E7RpTr5?LFGc)/*boVKu)jgGCI#D;p#I2$*s\EZ0'6HVPVW"hQLDBuFW[Yr:DY"L&0Q3ULN
%A\=g#.MqeTH$$_Ggnu]^f3Q!+S2^AtVSV>j\7.^bgtEC?]rbb0`<i(lq.Tr.\6`*L8Udadc=j-liC"Xb7nKJ1p0u).A0F)FjW\h#
%St/h6JlHnke7<lcN^(25bCZe^WZ[5'"&opM(Foo!1C*gpX</pd-FK<lg49[cNCRl`7:&fhb=T<@,dORlPqq<W&r7(g1t2O"a*!!'
%f1S/+8DBE"2E4RXVtfYLNUg.#`'l'T?87$CJpRi9lLaIIOAi`b!JWY6i*MI,(o2fC[SfWs9RZ8=+As+s6C<"\J"D6-;6^.sq0N-X
%-TXiAgC$JMPL?20V@ZQj"T?h]Nf"0tK',0eD/7@e>2,j(,WS#Lle!JJK#0h@&F$%%$;4[^]bL%;r<k)5Z)e3?>iH)=6V0R_h3K9o
%LDNHeX:a26pFD0Y\Aftu4#_F_]ZhL&pQ/!J]r@@V+@_^jPK]mLe$7h(fpJ?VncF&PJ7aKcPL/MC#:5.@*FBotl`sD7&i?eDrHVcV
%iF.o$k_L3Qf96H;;;eAT1Tk4Phcn;IKOZ+tbmP/LLb\=l[EL+#Z0m4WhuT-B\u0qA19WTc3rI:Ulu6)17Zr_QrW#h+'9m`*WNV]B
%_.Dm*_C&?&!&@Ba.q#=LpNR`aMr!r`'H%WAgNA,eZPA\h;0C/2iKoI>qH^TPj.bpio/;Pc$F!3Qo*0U%T=FENGQP($edK=LMV<.M
%U(OoF#e,PC9h##8bL#K9TrnKB>2,^U#YT!8+<,-3=&DgZNLahT%q^_q:.s!lJ!;\T^03@>?n_+bmNOE<_N?uo;If7c3Z=s$F.An6
%R9Xo$q+7u^)o_9b<5TEZ$1`j9!:kjY,P49oEJ+NATr<RH(HYmq.,ah<k,&<#4PeceT!nh@Ru%K1?W?HG/l#$cW>usf%I7ss?*JO#
%Z;f-oP7,L'FqIU<ION>0s(1XngR:a+s5EkF>h?WD\>);OIJ*cA,_R9IJq2j@+ZVe5Rou8Lmt:XU^["hSB?NUON_U49)+P++hQ"/u
%[]Zc6Ql85'T5V-p(]&4#DZ,V>HUH9NGseq,H,Gg6H,F[kGsbO!H,DE+aZ#:d1@K4kpVG(#\AgBOo,c2$LLf6\!,c'.iUmlQGsh2k
%H(9&]0C,2k/Er`f2!:Gl,itUV1uk/d1uY#b1uBA7F<KJ42`0@I!*gsLpD^F*=i7S+%8/bE%a@#r%So+Yq_O7X6PGK*6h?:_6dq$?
%6aMa]o_[sPD@XuM2DisO4#GER4$:pCJ"LB?B<Ls_6Z8dT__7er^Q1SV3r74Xkk<BHkg$EEkg%PUkg%PEkk<A]kQ@KS@YiXIs828:
%Z(7Rc\5%MbY2(1PCC^lj[0Imp#6Jk"a5?TGhqJ%V\+\2,>J!,nf'*^Y*J!VQ*2!d[Eo=G);V/+Bclf;_=qbP*^EOj;#O`/0*\nMh
%5nB+m^pZ\+J?YDHM?ltbE2pe$!f&)[*aWLpLW*(3OF01Wb_">Wmq4=h=J?4=gm&F?</gIj/dd3E_Lf^n@;.^1TVlK&"+WiK*?8OX
%*_n3#gE#A3i14?J4_]-U'`'@C@0\]E2kXD=<5rq'O\k+4p9TnsLNJc`*^9=MQp<?=Mrb+o-:!GFLb(fO5)YU7H*X7Y3R"-@]-_%*
%?j@nH)ro#^il$NjJH<4\)+GB'9Ur=9NXf`H&][rrAl/F;29mN;'(X!pid9J/$%pOu6k[d0$t6sbjD;?q2IdZ&/X+p8+cT!1#Qq7G
%j.;WuN"dC8"-9:prj;1i(`5Du-3$u=`dKm&VXG^pL@Z1M:7,i==j%3fHSDcg`[,PJ/hoAU*caL/68l6q&0Z:!N5;g])s4)t_dp2L
%$SOKL*8Vn/n/="?L1eJm$t&B'l>2r^,!jhHY"B+*iZSC*2hc'K:"_C9b;&bm%a3suOus3I!tKiBg?O4@d6Y&R^Y#CeJO+\Q_Lj(L
%`0:iq69=g[50aHe*I(O[!]A1.A&I686;ou^j`8(,:VJc?&l(9;[%&2oqQ`))Kbh8Hi,H(,pLnPM9k:<pfPqAKJj[IFp'gZ3E@d4a
%2&2Jni,Fek"_61Gmf9;kE%DF53Z9ZdIOj/,Zj82K1^mh&_GZ^nA]UbZe_K/BCkC,liX2QBHOXrXCe,hhZR033nuj04cU=A7IW"9>
%EN>^?bJpsCZI@-c*BmD]'dF['JOa#t,c=#\$"Ua$4Q[^38t?Mmpmr3^dc#*NObO9;1>KPR\)XQ+LcO2'JmBS-VRB=tM](OtrDkd,
%>YXEA&Mka%<:=Y06]h@767@)pFS83<-]OB6"#Uo_cr<"r&9VZ\,1rRVWom%qK1glF3s@.YUZ/'s=@URYJHKBioYG-"S?2(KL-#JV
%OE5'pj^&<l)E84,k6F&6!2FT*;8G79g!PE9\T!5Fk8pk3r+nrD:4nogJI@/Igs[$Fl%J(88&$/]*M+*YP18HBZp9cuKG=M<3br@:
%Zn%>'RZ%qTVPHJ6K<m6!bR1(*:i,af(#CcYa.q\9-VQ'Nf@WUOEmtJcRaP!4I"MWdQk<4%+A_U)SS[>7$WP(;%/G,T%Q`QS&)G5X
%ZL`W[i=Q]T1Ki^PN<QWJ\#,rEDW'FXFUTMQ@^+rSAZ]P6X$/KQ0j00L;n/i)KsQ=R>J?kf3'to/L>QIcic2+7!?D?Fgk:?9:V^F[
%_h!CSSFkct0iJ=7D<M+m`5P]MhSH`8l55uPYT.85<AfJ/(tsYb5mW&afQNnsK'V.!X)i_*@6hnQ<r(\='!VuUH$q8nBT2E,j7u5?
%13SQrfpoVYWX2FP/L*@\&3,7H6dXeNG'OAE6ho"._)TrVLU[dk*Cq^anqGOl\55TO[tR>E0CHI991OL;56;++be\Eg*4Q15bK4CA
%#BOWT"=>;9f)aTefLNLu&c1G-4+Xbti>IK6&P/4<ie52dU_D2P[NiHN$n<X85\EVn&0+ahb\6fI+jR9"8nc")<`S0jHEJ5&IN",s
%D1]8<fJjA5UI%'(Ccf-_LeCmXq6HMM#>T<`$NWKN=c!>@U<<pm%K\mlU*B[\0'im(*\]14@s-bFE5KL83;6-Ba(6H\=7?bZ9K[bu
%*@VLQIi\(j,t)huTJ-@cEs+-)9#BaJ(\02O_-,sjr!7]G-E!b_@On54=:t\m6R"XSK89?O1:ab9?]1[HA.VkYP<<YOL]o'sL49UF
%a"rb&!2RZa;^k!m=;VQkL4o#9KTD(!0t8E?`o\+IUqYq"BK=3Q!)61m#C`+<[cH%58XsM!P0d)3a$CH"2&;Z;O+q;Km"/9Sp)Z"*
%#Z50Kj69,!b/7DVMX?)[*;hRtN3_"<ShY9=h'UTAg[J0]\m8\Y_>QFiTk]IKBu-gDM\KrO)G2'I+PoIU?_!!ZaG9*Jn=h;_2LDZj
%VqcIjFG2!M/`]iR(;eR4BX-n3VP@l3('\4JMo3Xa6j;(BBZZjMjl8XY1NFX6!IS/Z)2&R\BGtqZ_J;Od$dKi33AO3'^@]4OX-%ZT
%'T/L19.ZUd$MB33VauC%+!2&0D47n4elfsl9p&q9n%\CF?.)+'gAL@\B=r:gMOP//Ci1-,<>9m*%2nd,g8GMD#F3*d+L.l`PRlmL
%2`5..mFW8c"X.@(J1:tVh`"oTrFH9c#+/iY]d,N@4E==%X[sdX10)5L+VX=mEsQ!+E#bQs=QAJbkjSiJ2:Q"?EOlHSN)j(ONYPf<
%85KBnL1tY%d7NO0c;G;e('gE#&gSk:(F<le5X;>/+QV.U6ZNs`,AN'aZA1rkFnODd5Ro3fQQ#98*%C-Te\BcKnR)R1ZEPc80IB<.
%p+:B)^87+IhiM$5*G5K\9]Y];OBI*2Eb;!J;aIF)M_b_Egdcn(1$]9.Pi0c8r;&^LPp&SLTsJZ7nN=Y39c,$X6uE;E>pS+$^k5Y"
%6NTH092>&r1Z65=-AJl'Qo97)/dEUMmZ&5r68rBe!1c+S^Wd<+'tA(7?UBm,$Wf7L!t<*XOspd!F\Kk(+eq&g8<=-Q,nd#eZrKFL
%(E-ID-jnRfnHqm1icgqNP<cXPS`"1iKG4V!!\n2Y\/(SI&,Ko]dP64^JTOK:09FfgJ\e%C+S^pQk^n@0_4t1[^W%E6WLTABW?s$u
%4imUfI6gdB@3\?,8+<KWU^l@-7mPl=<$hU<fpkPUY$6Go9F[?O"!n@K&!R6$)A<A4[8!ZB8;M,n0WbGj%jRHL1SJ]Bc<^4q'07CO
%kD'6`lC&iA$`T^aI2%@Sf`2Y2X5IMCV@b8eW2Cg<-WG]no`-nhP1hZL+9L=B[9<Z)@@i.P2^^nEadUT("[>W'g:bqrnOa+N'Lq@O
%PY,o85.c>4Y8e-1+:q(\)DN05WOk,YC;La;8d<O"YZR"]94KJ'0PZt"\c^Lohh?k(8HKoXEC1)DD;d)2Za_u7VQRs51EAD`opGE,
%]Mg]o5&'0DQ41Kalp8]*]KQq\N!ORem?od`&V=aXHHZ^RLc<^>NEN:Zl7e0cUe-Jh;WRh5CgT/f&0r%Ea1/$aZ+68VV"(#YVih<;
%DB*BD$u979%p8gnK->CpnhV)?%F0LK%"`De"R3XQ@cki2bTQ=tR*rOcBmITXj^C_//fhSB*#8q-$gWVIYHT8l1h<_ofYj91I&U(f
%L.-8GX$JFS=JE/c3P2LPJh-&#&CN:>R_FC]dc_kPiUR_&-K9W@$Pa60*)0K>:F_PkPc4Ar;1qIaAB'5t"ku<(VF;P*hN>=iK*4k-
%<5QURMj5\bhE?X;Jp.4.J5hZlPkVYI0Qfd=3,iZ.)\Zg"_@G8&A)S^Ng>VD?_RiRk07[7G`%aC:0KSqQ5ajuF-&g.<bK+oFNN^5J
%G<`b%87cQ]#r2$)\35Pk.A,G3/KDhR*?gT-2PqW>0*Wm7cB!P^m"=V^(38W4Ne<7RE`Bt<,M\gHdt42.\]tUZQgBuj\koBS(gREN
%FfZ^9#<mNi6WXdF5k$JF71#lV)d&95_k2m',eN69FnfDtLG<ck6*R0`!37Cd^rufPL1?WY-.ZmX!20u0KDjqGd_5*7p>J>oB1S3J
%p^X\mS=W;umTn,tKfn-;(`?Xp7%?!l&hcYgYt[p/LeqnJb,<PR*hgMqq!\<C=07K4_5VgtnRBIFmY2l8Re#f6E$j9NlT.Q:6\o8$
%24a^CSHtM.j'5ENiCBFBj"VXg%W9+u5X:aXcPG07f4`6/$)q]#1@LDSS.PGQqsaNHIGkA@95+GW*:+5!/;;9RI")[;huuN=$L7fm
%JRoun4C]91IY_k(0jlWobm7B#=!l5d<C<^I=A&dW>'PNb;hIHN,*U<o$p_?8VsU+%(';tH6Y8IPW?E$YOZTP-La$DQ%+Zm>i*(L\
%MI`p-j=KA:r'QcpJNABaTo?cA-f>SjYlT1/!no=\5<7]nOLc5jU4tcl#*Uh5`tP>4msm>P<(WP$E8Ut`1^&q.nZDBl&ttJ=6$^EW
%,fi0"Xu'\DAX\ot^)TA7)BoXsH8Ukmj1#eVmP7ogQ_VGo`utG@O/=n\1M!!Q0"BDXD5>#[T&St0J8g[7Jb=ifOIs[5i:8Xkd71;e
%9(@]Kc:bs=4R@-6!)-NLCmk,8F)\Z[dD[4/%3`$NcjsT"!0<oE4h*1uM`5a;ToEj9N@Yb5j+'][-(H;p5TR[g#J'I,-QgY(Yp=S.
%JGCZI.Y\>/,?']F%'8O_7,%^FWsAOPitELEVhIRCiVioYDW7UH?Uhu/:ae'*i%cl^m;l$;'^JRmOcs-23GG!1?QpN4,R:jD!66,*
%R7A6sg)fm8<[2-9#,.Hh;#0*sOFt@V4ugW7m_mCM9g*J?LBi?O!B2qiS0/2SpuHtIOWHeCi_^"MH$mF=P=Hq8bpgUG_dXRG-oh^?
%gdi1\Kg(J!REXT*KB"1$=i@IhNlm)LJ2;c@(7,jlGZgAd!=Y<])dYqO?G`#42)*;a5?I$Q;<ZqP\H-9Ir0,96q'X^_o"Q=DEU7Is
%PUZWkPYiFag58;67tth4>M5U\RC"KQ(\B;h.s0Y',1ZB:?V:X_0Ers@h2#QE*df.;9>aUN3$r(fP2[/\Q.R.T&T/+0jI'sL\\\!T
%;ZY[j2I[V;?tYHWep\qcZi=i)I)?*2GfU7Em,An1U4j]X*IOUc4(ZJP/_Gg\Dm[;q1\aEI<ul[`Kf^?'UP8Hji$0god_X[hK-:0=
%36cr>(_3$_87jgecpVV.aOk%'[]i/SI0;Rd_W!9:>M*"V@LgWna&l"\Lk@/52l\_d6!RABJu_+'>]S3UMV4e^Csp)/D<#05;,Q_k
%^d>lZX(Gk6aJ)=lZ+R0\oDUaE-hbfWJ%TOdG=%L#*kpG[<bp48T78s556J^Amrin]2(Lk?:;VJ!=0%aC^[&93ICW#bCfaDZ?,+9B
%&IR9hr]9/!C9>qX-0=E[a4lSkoHes.s(V<,jaqY/7elL'5>&>TWq5t@.ZI>3f"fXQ2U`#M5:JkmB6#+#/I`8@<@cm`'S*-.dgaNT
%?Tl0fVLU"l3%8fegF'O8l_8JF`WK5CU]:[c-3[*7oUB4Uk*s%RL$"b@NnW2AR*M(C]kLHXSJ8jcC+lCcA_MB<\(<h2ebhni+-.Gq
%C+NQ*c6ihCGYm+CVcQNt,D1l;!iOF.lrLa[;62GU;MXQY<GR%%g.g(g'QEnnW#EAG?Fa;:OUA%3jbZQB;CTY=F^")*`O>f[7lrA`
%]^DhmP1beG5[4K/GUDYsNFNm3WF*=K'3V'IB!5M6\([\07CAXPco'5W]#Nf%DWCq15Vu\o]@:]+;h,K\SSfKTD2dHrabA+i^0`de
%oiACtmAAVj^M+IbXGidej+;cH=e2%&;ZXbjPaaR=B$Z\tkGI&7%9)\r>pAC>p8V9_b`00,^s%eKh[!Ho4u7i2>RF!Rgm4GaEcYH&
%DTg:A\Y#XYAc2g8F6S4BG'hNI8bQC=?tRNPbPOO%g>PK"derE4+4/9,]d#s1)n@mmn>B*T45ENFs%udI3[q.^GkFYEF^"*jP#VJ0
%KU\bQYZ9t23n7+Q58q,tesfU">:#9MX\;RRVL]nM`2u^0jJLZQ;pW.GB4i7"Hc9liiOutGYg)5]Y<cee1gddrCUR=D\eo:n,im06
%[5>T`<GtblQf=CGdqbS@b5Ph[PRa?Sof5\?=($,RIX/+UC>[70q_j/R%A8'U;L>1lk]BIW1f+W>R2C<TH2oo(DD`C4[/c/Sbc&@_
%Ch[&['MZ3;6>3@6QuZQQZCVPbs.o_UIhUEgp7'T%G:/q3@d3V]j%sUC*Mk^=UsbH1n4^M$]lAf.f6#\Nk=f9p8T!$pT'Mqf9H+4-
%Tr;7oTrlKEP#`J<N&34*PCk$4GeP0Z`(@aP:,`TVeg^]QQo*R23JZ[lG-uZopUb-iR47rV%Fo%TARhjrh(Mbu>)77Y31ED,FZd@h
%@3h%Acs=D7mK8Y/WU6M=BK'uqId8QI;*Mb=H$4-"?"^-'8uCB`-H&$fB,!1$&EL1FCtA/ohu@&@K=^llNLOm*6Y'-NK5R#*eQs/Q
%";N;"CYk;SX@fm$8onN,;c[LfKpe>bfec+jMrPq0S%dQl[k=,Wk'7:;@LCAAS&ND0b\Kh=f1igeR-%l%S9b&lQJG8k-+s=AlSQSk
%fBhkm$/Eu(>oS0GUL8#u`V<Ds2>);ZNP[Y*Hi6Fkm8"=/4bItU;ionO^Y:u\4)7k"c\s5"(_reZB*`4T-VX;A_Z(@=1BYH.V^]]%
%Ajg8M@&Eq%iul>*k/KihdI:q,Ia'ODo=#,dR1t%Z'F18^LMsE=KV_D:g1f)0A\[Xl]"=fi9T#?dM7Q?"e2@u+Ng:"NA-P5T`5hBJ
%o>`]aBi&fL3TAPHg(Z`Yfo].H3/uoCH/&TV"7KR8,c7'GV-8dkh]6D`PKm^QNtf<[g"H$IJ@XoYG0Wti,FqhM[<*!B[E1"6XkN8;
%.3b,#dOsuHdfc>`W_No";XL[95GQ_sjL4B?g*uceX>q_k;XD#51QChVS8&O`eo''flkura.6-$F>=@MF.9.kJDY6Mg9bUNt(kng=
%0U4K:SReioJ^J-hd]<l6q!22t%?ah_=QN,*PsY/#K,4sqMSU,?@C#mN9\U7,G`!=2dMtBjH5!\;8r[RK'o=O@Xr6#F`,*Wb4;)3T
%%(,S"MF:#<bcJ<-k)h(@jI].8=]<)ekE./K&rDbu8(e<*UAQrg##=RBRMF4+j0:!]<6H/97JT.mF_2a3V0nJ9;:5G#O%#JWUAPhU
%AfcjcA[]mO!0irjMirrB:;*U>8[0[XJ=..3HIcS';Q[pFmuEkUMc.8\Ypa=:R?_(X.o0kk0r?;J>$chs9QD^t4*b/4#d=%rb[/;K
%fia-g3f?STi'uf]b\`sd31n@80D5t%UARXDnXGe;5;t/Sp@$<'1Ju/<]dts\^31O2B$^9V$5C_[g75@kq:\O3[EUUpbgj,3\i.fL
%bm0BV\_<RS?&u&2Q*n0.2WngrY'*aR>5UePA-1rKdtX#"./:8AZ86V'38[3WhaYn=)l5g9HlL>>;1`C2/RtU_i0-DJUl+,heX_po
%7a,;UqR9hdYEf)Iq8KfD-N_ZmD4qY7CA[\daFju.QFs'JW;(#U`or1:'4G/u^XOj29&L8]4"8N;/S(^r&(Wirc"-Fogrs"O,#'DA
%GqtUUJMg3OQtJ`'SdAs`HRU1?FY+ghqPe&imj`a_IoklmbjW(X1-#a'3Z2;%9f9Lb%i,'KL@/U3F&P4Y4u5M&l+m,0(reebb;&CR
%J)g`^_,8Bl*/@8g-2D/dea/C^]%7n?Vu@u,Rj962#b[YY/s*phG+"*#/gj1sBj_bm#*aYSR%P1U!esS8@L3mql%WWr=s[PfZbic?
%?94D+ea>l^n"u3m1FOPJ>;.iZ,C`Y_`>]sGBCR,(RVP""kr6BA2a@?@D<J[K3$mJ[r-)>tmem!,2U6g8muko@IjaGBR%OD=>b(Wc
%n,3+Xg=dcHJ9>]dV'\2eo:8d?acnlqk%DF"1Z/"rn$SFO[%qi31)5,0p8!N2+2:ilr\Yb(>4qff9,3c98A(>l])DmIdns%WW7A5\
%?H:r:2TSL(UgX]7/LI>PUgW;tp)08>BrNjjIEHimZqFRk-T=REV2"32h[l9(aQ=PLM#fL.ONiZ<D#R]+1jd;ABsi"@fbD!=UqO'[
%hY-of.VXb=.`njYH#rXK[9<+5X)5VWg2*)o,L<d\rj,2#5rXKZZh2"I^"4:tr*Wu<"Z7YrKm!fBr#5O"dXN%54(1'BTun/<%N+4o
%@oE`_d+D28H7$b*R*eY%XN[4G;setr[/;]D=7+mgF'q=Ic7,\e6%09(hI)PHhH"C"Rt%n<0u"KS;3SQNAaXf24'q'0Qau-fmWeQr
%RD[hM10]bTj^sX8(Zg?Zs3'3f1;t$mh!oD*a33OGiQ[5NR2Q=YTe^k)g4OK!)h.'8&iVZ)`6GhaqqGCGPN5EDSSTKEJq.Q22N\2u
%H*W:+Ll%YuA.pohjbk(ID'FDHi:P45>.(tLWfH_\c\:Bn1ULj4Nq5q<dif]L67/T%Htk8MB>W5g+k\j$^iZn<0O80okLl3afp=$S
%VRc)X_i%Ehq:GP,Rf=m0MJh"Ir"Q]Lk-soZ7O=Gtlg-&AMQDcr3f3'f^F)NTBjaL%g+$0mmd2b%goG^Df($B)%;ikCOsSH.T&4#p
%s"E(+5I7p[dhnI\Q2-E[+LAC&Eslh#/@8tsh&B.`Blo@AWZ:8R8>C9#;!/CeQ3)lWWg-OLJZ@SFJ2,IPF5a#)8.-qC$Co1u0i,5?
%pLDF?-",'t(c,^Obe,%8]`ES@1bd/P(fP57cJ"k^q_@5^N+lLa\K>>La-[H'"t[-!.9/X]gci=Vp=WT\<:6&eYF<uu@Ec%5=N#mK
%:B[Ka0951_$kOjM,VtY9VU7Nm<kIHj%_%,aN-\"E>,j+&M;"-p/kscc7^'Nrg[%E[W8a'i"dG<IOf@NNeFAH6s*N(1Pgc"=IJ'L`
%CX"XtLB;IeBP<uNBV&mN/AFmKn4^<Z7X&TB3S-K22sY0[!`tj*,W@OLdld*JaL.Ff]ME7kTjO8^Bl_Lkl_G!d?&kPP?Mh*2,@&Ql
%;_XIP3pfu54R#G+p!G/">H`CqC[NTFTdnlfq/EMo+A@-dQZeRE]i"ke9>OqsLcu]!]75:&E5N/"]&V;G=Z]@Y5]^<1D#!!g"<5UY
%.pi*KI.<EM:M8IK9?/7=f%b`ad+k(Z>B=k$DJm]n0/,1sc)"6-k18<^Yi]h2GhCfCRiQi.71tOs[-(=P2)j^\k1na^S""JORq6K_
%N@0s%E<?W\F?iO38S?j)P:dS(ZXhK)2k-*(Ft&EHR+l[@_4J8Q02&*;V<8.&-?#]W]Ke\+cbReQ?AWrVb^!NO)9aTc6/ZVjoD1<N
%1+)%?Y*$:F?WCDmXd.%qWu5'iCmE/nmQW5$>\fnu5IE=SC/o1MFI2RgkaC*o.H-\[D,^Ysc/^KL]+EFDF`*^roB-b]9`<^+2d/<,
%E&u1%S&O-"r-N^PC(AF`</Nr8p7qu]YDZB3gM?(?nE$^\HlTZq#*XWl`N#oX2E.'6IYBqED:dZS;UD7rQg+.rB;Mo+Q7.sIk6C:f
%![I@oXtq;hdQ^EP_\8RH,K8LirNBDnV)j/7CJJVQm1e6.r#5O"dbPqE4"67n"AL!dcgOc($<<BM46_b+Q[\*cQjN+-&O2K5geHCI
%k*j+cCBiC:aED1&K+uIO!;JFYmD1+_K.hq?$td-IGH9EdY6A=`A?HWkQ(m07'[:cp?TsT>[>/Bu.D"[5l;K<FDk&'P2o[:B5Io%m
%K+YHWlqS`!0%82!jTN[U%1K#[a!>%HVAk7eYmC^Rbc/#X/k=G`^`XuKH>cQ+CT1V,?I\pQ%l2@nN(i]5SppK;X*451eWD3>>W>J5
%6^r8XQj/;UE1@CTVHl0Yk>QH43"raO>W1FAff4m2jS<;<e#N'<*[X*5lg\1l0p<;k"*=7mXB3B]VG!>r1ZfXIQfpoQq)6PT47/QN
%?D?jcj>E;2*\K4:qD7J:=>Cq$rg7;]"Vk[$cVM7$g7m/h.mhZrg9Rb:gUgPS[HV9:2bQ6DW@:#[s,FN[m\-&pOg09IP%6,Ad-.>j
%9?-Gl1/.nA^&R:[lm-fT$n%IQL0c\/UitcBl[EI7bePA.NY2?Ad;MZPI3T4oAmfJQSgB1L:HZt!4rn"/'XnB]D&:I06@G%#.qn>+
%RGTVtgCs4/9\Tnu9;cK)G:'tdH7"?(T)jD1f):u74^i5+lnuoj1W`+(&s6arN0_$=A@=?CZUp@K\G=?"5LJC#2K<[^po%J5FO&=I
%UbIKZIm'oGlBS^qkP_pajd)<RHq:1_X%CWC+2_-76f)jkg>'R@=aHWo=T4m'bMP./CHd>l0=NO?PKcQCHjkkT//4YfC,Ydb(X=bB
%XNL/6H*n7ak0H7u[J2gbI^`\MdEat)ab2"*X#*WN9YT?K>\&"NNRGApcKqqh1rjTCB&pE?V-:!I/d7!0HIQc^*bVQJX..?JCSgIZ
%LRG64!_ka:J_pIOL`'XHd@;7uG`Y@D&-Cq_s6@q6T<0KUbI+s;aS=SbrV!PEr2[ZK@FHfUV"H>Pg\OU>nVYD<pZ,bjhQ$B[,qZHY
%+$g_Wrk'bTjFD\iD9oJ01A8#^A*NQ:iE?`-QZW__Z97t+$qId','78H>bYH"Q[+ob2aM!(]79>)$i9LTb5TNh/[LrBpfYd>rhM1X
%YQ\_$$;HVW^d4i;HM)f](oZJ7[U6'1h6&D^gHPiuNhtulJamR.i")9Zlh&$BKPd`W/podSp76)jrPF4L!:fK,^h<4r5QB@h;s>Z"
%=J$SVroBIC-c[t*ZcIN7D#.O#ndAZK(udI]&c3uNfWibj<pHjK\GQ(-$R)V',FKPR-:&u2W0UG4P!Y#In<\q1e5)PkFS5[QR872S
%W"IOT$dE^q:6nMGe0Xt(GOd^A!#=PGKIFNXU1GAfpn_/++^aj>aoTqf]FA$+]b;pkHE5UZ/_(@/<j1'\c2mcG+#R9m[`L1Hr3Jf;
%E</:7?DGIc<=T2pJ(;ds)J,.<]6A:l??5LFiI7PCntX_&XH$:QW%u((CZL8Wkp1bLGuU>8)gENBHt4\V-'TJIh,fQ!'^1EUs-6"M
%o>!8QNU_<EeZ1RNQi>WJ;EU/9lE;IjIufC9<PNl.l.3EQY?%ZoO_/_`^A-;m$7e?hZN\jL%O).Jj^+k>XA8loqlM-TdO@KLK^^<X
%PFb\PMg]Y+52tnCT$P[8b+5lRVLZBnJ<P1leagsnj3+l&k+^f=g@FHM:UfIb_R5^^e&ps[,fd_Y2F*[Cn^!H8AQ_dZ&XkWoXAlAE
%o0f<sO!bI0X]\e$R/0qSd_1:W1Preu4F$p`*qRY=<KNb0];02W?JTBucc>p-Gqt#3VFIUoFt)8$r-\&gj.&'I@XPGq\Q*ISl_X,S
%'r^h/[H:h!4%U:Zl;OqgZlrd(!:6$*kC/cI.sRCAgP&U7%Q:mi:'GJcdqH.YkA@u_WW#HO8k@I((:k@#nr`Q/=!ncHNq25\VZjpl
%X6A/2rQ=iR`dYOVI@CSfJMpF-lZb/9CiufOlMjb.KjqHf!ks@M7K+qLa!TZtori\[0*uC+qGb6kSo,Llh<VnECbQT#$>lkTqVEaQ
%Wnhdj6<JGHoWYT8`dd;E8P8?KR$(o6HuM&F'C21e2&5_]qqY/He/`Z`mQ-R%rq0gi<7K<)Wr3d8SRcKGD(j?f[JY3F;m#e/d5@[)
%@Am(=G>F^)FsU(InLQh(To7RI<iM'P1n!rY[6jij0=9GU;g1b*QI.LdYqs^GF\-Q\d5\RT3u"*kAJs(_WZjW^Z$#)J(gB"hK<Pg:
%#ce/B_],GlO&G-p6C3KD7u5AQ.B7joLS$Tts6aJW/(JP%Zl3GW$QjTk9!qaH*;H(:Xf(.Z6CQgr_II95f=_rTJTUhp/NS+4c,:+B
%KGCM]J7dF%>\"=:SZ^jNX<BK^C1:k5-@<FDX4JBD8=1PE"t-oZC7P#jkC.$Xg$5sH8^T1*%6GE8<N9$p.D&pO>kTDLdqTBZ!"r8%
%3$:>_8unC\Ku#lc3SVr9b&(d3]l#WZE^3i:Y_$/I\SO+GQVG?>H+Opq1nnlQ0NIE77$'U)V2bV,=>W=jhdQ%7oDE9G-PJ3)baXX-
%EHmk^09PUZ,BFEh=6aDS1oc$9;JL]`j(b@;r2VUZC4F4Y;E9cg^9=S/>-HM6.QRn,7Y>OlB+B9dB?aV6a?!)BacSNNXa`,%;Y^q5
%dARJW7(DONE]>&nNH2-k9&$u6rDAsT68D&`_pT&h]1Aek"=4;^G;;`"OK)1?Lh$_L[Nn'qYLUi,#"q$Hfut;krb5R#6*'</Es!b9
%X]B$fR!,TDiofgpr*2%YTB`VQND[V/'7S^=I#Xmkr1n''Lq/O_BF\C*;=,"GI-nb/&X5;aTnp-kqK>(bbJ=?%M2e4`]$P4i"*"+8
%8`%3).VQ9f]B1#h5U,#H+eOKDrPM[8m'f&prH=MsWXZpBZ3@SJh,<Pe;F^<neT[JD\E\=h#\m,(oiCgZ%DPrU"rtsY,\`a-D?u*/
%U<QQo(ahDkj2W6C9$"-s:A'AaLn36*!R_4f'EHX]*a@eX_<9b'KMQo:B['D$?J(:uke\5X,8+d[\8.dF=SC@3P&A#KSq7EfC4Fh<
%7]AI;k6W(q+uImhPdd]g3q!/7X;BJ!it_EF`oE1ug7cbbV!IY'!4?PL'llo@O#i/P9BQ%4W@sbseCEp0=f=TP)Vo._<63M/p$-U;
%*;[)+V(TSO./)EMKarSqg_gaU`V-<_5pU3cCE+KG"%*<^P-D8r2L[IP1:LQUeS5+3M'jF1PeJ/IF_EK88SbG.)h+[5D)X-H_;4A[
%joe/!/c@l$*WLn%)hPY0*I#W.$1'Z2>_d`r?csfrrp[D<S35cgfZh1COUZY+AXilMlAbqK'c:#s++ChUR,.g.-e_sb(2[+IQ[d@q
%Zjfc'[1]C-]Q05lBWg,YE7*QR%\=?j,75e0b0>+KY7.+sbi;dLDY!Z)nN/RgJ;1rDT5fhm`q262_`e"M4O'%+;bQK?Ts`U]W9oW&
%Ce+>@6sfhW"#IG]VHgl>gL$9Z?_T!J2P%+d[r<SP)Ej.\f"%lj:2)"-j*ZW!DhRr$BV'*#cC10RpA.o[T2rSs&r8/S%#9KUYMVCE
%?Y3*MNgaTn=a@q+Bji7Of1YMSc9V>:E$r9dFaW0WbkqP/-a%%i>6n&bcY,l'>6@68]!Z?Cp;ICpL3ug'eVe^XY,L*Te=.2fejr#`
%<b6*N1?L<k3G_8kXgY6R'r%[j)E6SZSs@i]/g45Sa.p/AaEf(H?M(3T_eZO!S?3An9NSRTCo&%Ueo&O*E$\VlH@dU_LqZC[<&1BO
%A.!25h<bf-LA%mk*=>'B+*XJqNQ7OTXJlj"NU*a^h>d^u2>3,liNO'3;a#';2/3"=`ce?`9!7NECW6lTYH1jk8/=(K""2]1&EI"V
%MbQ4/9"EWJAadJhG82*r)G4[PeE+lS.^pp21)*:S%l6fRCS$Z)^1atT(XVZ-C4+KT%)\A5T4b@)5ZK7hmhXWuC7NX"ltpRX+(HG\
%PZtQd5?BNg=fL3?>Y3+<WEZJnI`]u6dXp"AXVBtq's@[hV3TqgQ?soF7^W_"X=FUEX%C;OgDF#A-&V.l]?qD:lIJK<9Y;EmD'(FB
%6N3"G<,OX!j6AlQWfiN#Y$O254)jPrYk1[`mES]>QrG<MMO?m"DB,g!Q/e#SL&MaT8W)6L9N"iMcXbZl3briDQ.d)C-S)UYB?``W
%6%?RCmkig``j""Y&@dk=2,jnHOR<Etor:ILA/kMnW>e8pNMm"ZL;TplVBJnadF/r]>>:@8k7RbSSBk'Oc:*R@&-"+qTpFSijjg%"
%7JI_R?XG[')"7L:PtftWd2>eg[J#,OcUV]eWh'_W!/=KQi\>$g%pReeU9r=g<$d*>FUe+&fVO^<o##3#>NMnF%bKoL[JX:)dL.Xe
%.uuI_)NN31aRnhpO;M6iXOek-74ba-ZKF;NS#9N#e7aL_NE9'uCHIdHE@kp6UIeL4,u`UR3li1Fk0q3@iEf";[co@//%VUGT,s#u
%e`rsf`O3KiMBu8SeQ$Hk7;^hDoU;$1s'2OZ75^Rj$bnoBTPlhP]bWDh^FlNl5@hf+90=#tLtgp/s,n+B$MUTNqmCjeIHH;B'5-&d
%cfDMj>O>;lWa_jTW2RW%/!%/NWu^u;Ec'KecfGDX[hE8.bi\o`o`p]*dYrA:drZ1_!,487#?[kW?sf0kXcm@,#&(OsXruso`UPrN
%Vn"(BM*'(o8+tMO.*pR4_K.V3G>J#J%hjsqD,dp<LoJCBI9]:6l9B_JSUC6^-XWV9?GGYW9gAoK2*JBEHQ9V-T.0:V/!!2&ZJGkG
%a\"!ZVL%ULff4K8_T,H,DL=3U6%AQ'L8fSV/;sM]oU10;n5meLf4mJ"DJ9GWi1L."Yc4I1b1[VWEFM)X^Q*^o(Y:?I#LN/P`KML>
%iRgAC>P8$-9!o,.7sQ1SoM+Y^$QV'sZVQ;u5\uEGQad'L[Nu:`#Ych$<)tj+QU7FalpmSFX'4;L-BX'!N-\.Y^Y+)bSN+TIm$l%>
%+tPfhj@JW![VUm`Ng!<Re"R$-;/A*;>tsr0$^dbo@a$)K*p]N:*Pk$+bZIC-f.kbkj6*n9Of5Z&(4!om7E:39L+*gWe:MWI4_j5K
%60/q@S%M@n[[^e\CQ*,r;4g]!=YBSE/9%hdQ4n%C`+[(g$Z*f(?qIJ8#b%kB(llm<aE_?+82hdOi`185%$.(t2:\L=6XeME<#tZO
%/jcdA@96WK(0"eU;=N[(iEYDS@sA&5Jq*0<*r6[0:/CC;j[Hn@lJi6cP,U6bpVli?\BsHWeGF4,'Ug&YX!!M>-454"goe)?6uicI
%.N?Nr,Q/fD_oe$%>6q*HfHleoa<BljSp(hHK9;?]C00_@<]HhV0'eg,/\c?!Ce[Bh3WM`+!BpY48$7uT0H:G3'Qk]7Wf>3O(d#=W
%2\]6I-hVC>EXrU<@Y;h8bso$ed;IP66M%C89StNsE=TCBYBO#.Elhhp.1XE<?$3CWici.?X'Y&+%&$[%7uWu^DO,Ii7]@]/B<,+F
%&OL1a5rjf+2l@LA$c%t"G')-4T/K<l0Z:rEW_pD#cUQtsH!,!CTu/CU&?_f4H*i>)F-O2?1ibaHg,I['J@QuW@Appl,^hio.2"'A
%Hhj_q^5VIJX-o?t@eS-KE<h"KY"&k)8oYb0UdY?ZX2g@08][hUc3$NqK_lY<EW#%B*9nW'n%rc<E@aiP[/"2?A.a$Cg;[eTAsF\^
%VMk(Y2-_DLP<a5pr!_*q-`Z6@8KH<f7VUV*gQ'"7Q;MHaYM)=#9S`#/iNB]chReBiNBhX/#`ib`drpFI?M1B<3_QWb]ai&,VFP([
%FlKuuY)hN.6]a/jQY%_`11HMHnFTtrh)m93G=qo1mESKN.?^'""5:5B"s?XHYQHX3"^b083OEaUh56jai;m07_bh<]Dj]0L'%.%e
%r\Z<b>e+_K(+ARa*NA);-rIIn1)dfgI[IY?O`k/BmegLk3H<<VrrU-KV&7MMYLN7UH`(!CAts^'<ChfD%$_<OVW]rZT9YG3ppop0
%Aq@[[%"9FCZOD);]RFd2X4.DN\pbt7Mj3O2Vjf9YY/U]Ak3^0"#.Zo2O^@iud!b>$@sct<$8b/)o@2VQTC(J7\@?_[jM>Tqh9l\k
%rn_[E]tIF\=?1<TH;V>_[.%Iu>0;$Vg2ER$g36TKheYI324q#;I!W$/hX6Z"ihjHUh@lc38(0MQDh[d/mI'i9QgCL?[A?o:^%5-O
%9Z*s8mbDO^[9dtHkKdN(XKS&kiC<L^drHV$I;hA(ekY<i%HnL`pK!dp>M[0*c[#-"nkuXIh!*n.&%`X9:[L6W@_o^(SGuW:E(n.`
%cEnCc6[QH2G\>=Vf,m6=N]+1]7unRl\+4fmmBZM4IAN.00,BlAonj,]Pqs>5nQ#KZ*3sPWq:Ng@ena_TcLMe-N=4p%87:NErBaZR
%Hs^6-p>B%r7$I%THo_5TUega"(UbjK\+7`1\%B2gjZ<o3M0GdgO,!2=/M*2HbLZ!5N=5>gFY.g`\A+D\[IeT]IH//5ieH?;o^qO/
%3u=sZEp44/Wf*?Z3u;pNTfk"gmHWN2/(H:+.f%f3B+L<_Mk>=+S\t?^!PlVGeJB#+%:cTUrOe_;PTSBkTBr^EG3Y]k<#t.AkKM#T
%bM-LrE^bXeQ4#?,D[CL1"5c*s[)u!`j)Knk=mS=T=C1Ri2.sZV@<fP.Dgc,BmEY7aP%Pr'E+/X=IHRT9dJU;[p9sO376eKWRJVEd
%\47Z)[3+5@Z@'$?mFMf?l=p7gTtRN5oPJ/0';+a[(*8gnmMBdnIV<4.)de!O?FU=OURg8u2Yi]YVo:OdC$g0:V6%G:[/!_qVSC`l
%M1XW!Mbfs_0'S(&k>,&Ia%t8e/)OZ]iRJ?L9`=A?X^E!GQ%'B@iH$gZZ1-fS[="1]XBYM;$)<uSok10#_>[K\*>Q:?(=!u9r4Z;`
%4h-uj:Z&hYp@#\APM=j5mha7ZX5DODIpP.5@IiRXUD&L2%sI'Pk)!2fRlB6dp54QBa!VhVDt`5AZhhB,il9Xr5ra8geSu'Kc"KB:
%n9b+FDK"^cb@9F=je]mjJ8;\!5Q]bBp@[FO\#&O+Uo1Y*>$jGXhTd.Tkk543lU,Ou'>\.jCYoK13i!e'[t4IsRia-ScLnAVcO*kG
%e%3A;YkE4A=<JN-['Z3=H=-O#.uE'ViWb;aalh>GVoO#`1iZL.f\+E<]F[aqCQ#=FYJl4%Qe@n;G4\(MGk]CMS4O><G436<M[T8`
%%lZ--K?MNYSSU$T=5!oJS'5[Y2_-$#FkU-oqZP]FLE#CmRiQ.Lr8o-bI*drOf4"])m;8ThgKU/j9;gXNAaqDOQQ%bTmV')88Bg4q
%=30jC^Do.=Xr=@Mp"h^(c*OBbqNeZR83Yl.ikt`KC9_/pcki<lI74A(#W..6Hrf#R=AI^ZhL!GY-S(e'?/e]hO2&+EjhGpgomEn3
%[[B4gG^#MNGe"Z7d+V`>^=%r6Q^s2JK<pI@eElf*]Y1grTigKq_V'S)2U/^V+^*gegNUsGN_Uh3r-W#hf?^)%"2Fk>3&N@LF)UK3
%43;gCEsG2WC[S[cneuSY81n;;W'^*0[[+[5BN9t+>@Jbql9?7N.`Ke%Z6dN%Km)2)>^5i<30HCPhh%L;]$<<1cp&MKi-ns:h<pdF
%s"<36ntK4_Qok6B@RGS0jh@n$4l==YQ*5+_+7.e/M\!LbggTZmN5"Dri+Z.g?Z294m`Qo7Dq)8he^"\%F.ASn46#nlq10qIf:Roj
%]gkNY`VV#(rRtGQ?XFn4EqVdbI=(_d.@%T@b4fdjn0]-/)oZ#nmqr8.Qac2!o6pV'^XZXq<XRR(LYfcA+hhg?O%PF]SEK-,BjH(r
%nF!:PojRi]b5dOgr,-pG4q(4`cMZd>2<o30`tJjcgf^C)90(PW_T-<]UQS^9G5'Rdb+!&9j's\[L-^tN3''sT0Hf'#JH!A3ICb]A
%+3-ld5d$XUn0[?!=H_.L(U=CooC\eF)WPFN093SNX8kSG^i794?S3\V!V<*YBJ2P3GU8iMSp(N(WZ:0Dl16/5pnH%qq8<R6OaZm`
%?6oUl&!MN^!4WQKG(Q$Q)i7Wi-N]jiQ%p6M^:W8J=it.s.ccW>bQI4H5"INnl#Rs14<VIJSnJml'pGKn,(biJ$(@mqUL=?UI=Op-
%s08_1&l1WKCru#?15=\Yg`m+^o8\44+$^L`(HYc;)9*YKR9]\-]r3s1.6)&S+b?XaBE24(]OOem!'a=kS/C>6W#(CGTc$="+[*ib
%@MD3ae=T/]!Xq:TOF*VqJ].%E$^=-\IL@Vn_o*r/.#@*LhVCL"LSKYf_,)CC-g<bI!%Aa]+)T$m6-+b95\$$:^l9#OSFM;^A(ZhX
%??$#8R86Bhohk/@mE5\C;d=h1+-C,TVT1!OQYV[F5Mmo=h0m%9]_*\"U%tT:DP3(Bh^.rqE4LFFkKWfloukJRB)2#pI48o@.Z`-9
%B>k#]e1^tUXrT)8%l;"GWeL'+LX2cR]"e45;^?u/k+N"D\c2<=K"#aI48;Wsq=8kr%T<;EcQ+hLHg?Gog8AK$eO=MG7CI;=?>6g2
%[H4U2B)f?$Da4.jG4Sp#`3EHO3dR=*Qh9C,Yq,CCk6:n5k4=rQGk@`n7CZ4;i[8q'#&@Jk+`eRq\5t1=@=+$uj./anQ^a%[%mK)/
%[q.<HX:IO09<k)>Vf)M=>:LKPg9q[t-gghb_>`OO18ru3[f&<dT\eJ9</TJC(O=TBPGhBmr<k]#^aL1>$N1o*B\;$t0SS0W%h-8:
%T*d7Cp&c5liG&;aqSu,%fCqIQ=``2$C^EVZCOde@4d3l!Dh+bZbA:VaRoAUiS6CMLj14ci[W@\fHh3D6T!iA59Tg_6%22l1'!"fF
%qbaj<[dl<Qr*uA,dPk0pVnZ<c]"I4T-@<E1DbQQ_/TnO+[nf/*ERfF_/V7*>4!Ui,[0Jg/m]a.68BoJqMt4]j4am:R/PfO$7ur&7
%f;1LO<tY8WGZ0""]X)VJl.-29qW&nEJ^7I#3;YI\\[tCUe,GaQDNkm'0jjL<qNG.2(Eq%=/!YET_c"/Jl\sTlG.tJpq'd8+j:o@V
%IWVKtg$!k7ms0%Wdauq'`ueTb]^m?IH@L?MJ,$bW9$O^:ra,$cX2DF9&-Q>[Ikr:DY^'Ss/pjMng.j/&gZn/$m9_h09\^ed%im^`
%_8Z(jqr3UGZ?uM.7p+<5XaYse\tP[?)r!*Wp0.:TH*`jh+?c(JFD`DUiT$8p\,(,*r8PfqSuq/=gWcSfp?`[BMiSo3RDc[saW=Zd
%1e:Xf'T4=LDd<?D@t!b:94Rqqp#>q8MoER`8OMqc%Drn+m!=?VjnWrU7JkKaTmU"X[J<eQ$b(,M/%(?[Dm%s=\t-I:UuJn$Cd`0i
%^28h:8abZlA?_9>IVkZn<'+*lE45\,FKEaU)gu"hE)+4#)>3n'(<Q/U-Q?N1j(43cXU+[PX5_%kqq^&NpS&iJo#]'VPsV>8/HmE0
%E4^)_i0dWuG^`.<b2qcfVci_#J."o9Fo90]n\<rT'rmko5L.ld#D2e8CdbkUb,[JhkKT2DpHI$tcYoq8c[T('7G(%"IDg[']CuRE
%hDSmUr+VXuO$?U-RLQUmO6gsb,(/RD#]$nlQk\\gT!N$FqO:jc:/=Dd=U"7SHam3be3<!<"n+=R_IFBt_^^8,JoPFOmFe!+L$a3Z
%A);P//t74dB`C2=E3ra&]!q@ca^9ot40H@i!V>Al@Jf*1,A82)>_RFqg0lg^7F6'Yma;!FLW,H=pYQe4#\Eh#HZuIY@c?94V",r,
%ir%XZObJ"+p$D,*`K3qk&uu8.c,E3H)9]W_(Vl3A:@_cChqmaD_kD9fV9a)5h4<OkhE&e3-bahE9ABHU[AGtjjXn*4GJB]>X]-CT
%hBbU/$&1sTnG`6Y@;D(*C+ZT;DLVM*<L(%SS6+h&]tPtsrg/D,&8Ub<Y.Qf&X_oaK56t_^QH1(M`Qqc]m\:#cqFr`7!F!(`+ka/J
%+Vg/Qp:IGd<uZ(MoaqHO`R$;C:YW?BP#hP[J6%!pHVAK[]kLV9no9SKF,$b`Q8\#$gO<&urd:hEgT_si==rU#41D#ho4rEBHMaj6
%,]<&3)Gdi3_e;UShHmPDnoi>#Mqm13k0*GJHn2@cX,3r1XLFP0*]We<cM:^j`PZq-+)cVt]D)3,l@!G43$MYdbPPQ9@dd0!7D^SX
%/W,&V'MY4^oP?TY.Sl\h7RUqs6Lc[LRn#KZ4(+?EUi?%=o29lteU4"H.;n31T,0H;cOZW)I3Q+@hW)f7n1(t=hq7EXg+F,l$Jj?n
%LbIYr]tSORT<Gl/p.<K=)YLA75CCE87C9FOEAahKOH/RTac=r\C:j/XVp<lbp$Wu'hhOj9&D,_(i5FS3&]hHYlYk+0HEkbfg+Rc+
%lp53.IHB!<&9LTkV]SG&m:'Qm*@?L;p3TQlak'**-C3RUmI>o1j_KB^hi+>jq-L8or(Eqd=?8$#&?J%-Hg_CUjnnNBqVG.dOD\C^
%-AcpA+b.$P(5V"=pIKisH<`EkC6LfZS^h4SEP(i<ldic/XdAA@4(#RQZXu;B6jkW/TNdK<kkRRc=1p,%S38Y4\'\gnhW,KSG89S\
%qc;6hlggdSp%4hOHA?-+7rnFmLJHLd.M&jk3JIS2#n5j"_-d'@>GAUZcS1>K$P-OD]m<Apdakn_T#_j]NBb$[?[LM<'Ao%*C.+[D
%O-:?1elhiW5CI$Zk,d[2YJE(as"I]3Vu!6g*t=K3[u3>-c*GlmTpN(rqp%>>BFf./iGOe/iVe5.R6)?qrtpKps3g<#,OAfhPUc'J
%ATuNEfm7c?<oOC'fWIrRfb;jW*[>?(g<3!GS>JM$^*^GfWbn'Z[paV!et9Fc#PFFPd.M3H:g<D?CO@8I.`^P4(EZu%&4A;;F2$e<
%hdoGJS^6"L-ug=$^c)a(QI".90k_3fMV[G+[=#+-qV#lQ&'FFkbu8KH6!V<.kd0@e\Q[+q&^)2?[WY0a*AhuOKr)KOPsBo3m"I6V
%j:)W@J$XOWr_/X'X`e^54a>heJUDrrYf#Vql<4)bIBr:Ufha[A.T2m>YY4n@1HT?r6UbMXG]Rln_'7k-bOVl`o!"L^52E(6q!p%s
%?Hc_9o^Vc]XnXTQT_FLnfY@:rX:s@aqo5[2n#I-V:HKZ2LfZ?&:DR8$Hk-VIe`5qcPr5E(#$$O.[Dt0[9Y7b$]K>#p\QbUWcLmNl
%$bTSj]-6%\40/A'rAjt.n1[&ue*hFU@6Q4=8_2S<\YlS$R"Sl(qr)\^3@TMRD=t!n\![UO'r^8i_W+ancr7j#@t,<O+XuH,`T$_S
%;>O_iW,aa5F#17`+kD/P(^dlC7`RRS.;QQ+_khKZS+B.04rW6.pMQVagu[m>k_XI)OcaTtpj)J:;R,,nq>AfdSo$UI\G01:/IhEu
%gZrXYNA$!P0@t)s-fP"U=,WpPS*R,IhiKna]O'+[V=.u)qB%=]%%jqJ#;tg,@`cQL9CLFn&)Z1q]R4/'bE4m!PA^n?YX)C.rWhWM
%Ut;8c)c$h(Q@4*sWV<B,5Q1RpPK]gmhhu9hZD,F%;2%-t;oG@E:[9EuA,lPfPBH&3J\r^G17pLq_b+ueX*+0[Em+Zc<6@]]HKih+
%^:#SQ[bcFWf:]P9js0&]XRbWa+%R0^IdUJaVW7as:Wn`o,BI8;[;JR=aP#V8@p8gi$b=:AGphZoYqCrA^Z]eUM,>)r%?p/Q/a9ZM
%HA'31pP?f%mNoV2c5jT<N["+@Qg<OP#kIh3_T`BDIm#-0e^?K=D2mF2N]BuT?hjqB7tjI`a5s_*pFl+uGA/"%hQQY;KRML6M%dEb
%9(1L[*@kK/'DLU0S-5J!#;YqiZsMW:ET)CP/KHdb'cq:B]3!e[RaoY9mk3H.mob*(V".Uac/-KZMV7>15B5"CBnMrm+*L_TRq;Jj
%Q/@#bYj+'R?S;o#Z!W\IYZlK?<.4MYk43ln4Du8[b:sX.IT\_X*>LVr&H2+sAa.k]ZCi#T!*^,Y!Q0p=4]spR\U7<M>^_)L7W)X)
%D#TV,WXnIsL<%!%nTs5)]s:nqY&,0QW<&IeqU;"p_TTT]g]+M-N$1.=6'$7Y'fN)"H$Zi376D4[-9h82kS)8mm-,"M.3C\G^i2,.
%dQb(D=o.u3.G&ffCVTXeiNnObnYu$;esR;C>ner2nmurjn+hOJo'XaO6/rcHqFCae=N:g:*;\P[)W=WMa`"B<q4&XbMWKiZSLe[H
%/pal*(RJes*Ha9`:S1R(Dsk+&H>b]+hY#0TgGHD&E9LrLjGkk8?-Mm>4cSJ!F<ktOm-t7Y:8Yf5rKB0NqpPim2St,<NpAar$c);8
%@aU8F.Sa<20$u[kE,W$Y6p@$9Ct4#p3o8ib$c.Up+9$/]eucAqI]b>6?4cVY%mc4?mak&?^E;)?*Th+E6Q\U^Z.Fd:""[pmhtOg4
%ILiW[,@L,hfF.$c[Jf81+sXs;k4-pj1.$1@\n08B(.rdGs86AXCEkA$:4jcGBl:h[VL#RSaK/o_m1ZKO='7VYl>OP`Lgk%l:cZBm
%ks?$uhc;g0%%D&5'V,*sLR-'@a1K+cr.@DZG:mRfVZ`3tq$4[JTMOIDm&uAp1:rs8T=%AS:\sY?cTc@hA/RVsW5tTSn;70"Xk8Ee
%45,&%J,[iO7c_!FWt'4g[N1C\(`N)[^YE^si!NJjI=c:;7'7nns#iAuOt.qCoJ"-'rQ)R=D7[*KGd,S<FS]BjT'6kOkUR%E*,8VN
%#ffCTbqt+4i.Gh2Ng4lkqAFsVnbAJ<<q@<SYVDHE4"b,R$_^^D9K=-FF>V19&%YL83RJ'Q>Vi^<VRC;c>#r-9#gL5*NNAo@:9;sL
%SZK%PPNJOk=i^*gG`hF8=#`cJ`_&rQCRZZY%D+E51TLo<c%Nuh-.LGoc)e$-B"X]aZGQ.%=DtI=fW_X/@"(ss+V]RUQ31r<=i9k_
%h&u>,L1:K.'M[oTg&fp6"5I$3/YP`X#g7mB7NuRc<bql*K#Y&(!s?):g@QFbXQF):f@!N2ANcMpb7jFtY"7%8Ldd]"Son!a0C(W=
%P,9S3#,=XDW,#1q9c_(_'ffFGFc?e6cqMnUO[n'0AQ*#J4^e[I'`p3`_[<EB)5nr?)M9Hce?uA,CJf9cbt]kt[EpWG$tfrPQYhkP
%R>Qfb>b^j6i(CWpQ40KX6B=Wp-![<G_seMNL?7]*!fH'R^nmX\,Wp:+#b66b4d5+DP:#X;.B(Jp2LnZRPsqin8d)\Z&9=M".jU5h
%rbTn=:o\.k=p`m5'"XkZ6A3CHFDV=C6"JA4;ODQ2c&h^C4l%I3Bf*@Q[(+c:'"<lOHa@Qb+d-eQ;?KCa&AjN'+_Q(L[Xhil_3Kh(
%oB.3%B&R1\h=5D+<o#(MdX`cOVmc4(37_g7_?C-c,>05P-;6kHm'-'QM7Ni?&H3,s2ks#F,PNC1e2<I.,&94T@EBYOnf/'H(rZ<M
%TqQ*F?-rnp2<EO/-DA`UA4tZ7dF-6BQ=nAA4@3?Y?'qd)aD$_mPmF799OZ-/=q:$pK*oUX&[>sV6LQ%m^PYd/>'+_,3P8uc&r4E3
%1n>4j8h+;'i<)m4YYBa_V%FB&+O[9Y!>8[>@pIB<]"5hSihM/Jc`q=VUG-dkiE@(=!=2&YBrJJCV:geach.],Lh*;\,e,e%$&L>l
%5bi4$[[aXsA&DgHFMjBJBnd*G#/L39FGf],1jKLe/Ong;ZHCROVb&RU5MIds-7Z<h*ALFV6q1jjGufGVh-t[d*%u(>@mI$4ZspN\
%JIg$M$-u&&g50hn^hhBIdqPe7g'`p0q]/,<h3m3BI\<Qq-S4jqf/,K;N?K0%pnk0-(]t2kAC,!6[[S-9ln9P__]c#$KKpR4Np]Ii
%dUG9FM67&eWC43t]F`2R#'9i[8^qQK9L,K^OQ^Y56opW,]90OCQK4;[Mc^r9Y*1^Go1<b.cVR0..2iDW>"#9sR6csdQ_kUVN'+JD
%IPG84Xt(`ZR(KTM'IhsG9e[3&hCqnq8s.1'K)-Qc.8bYKpTI+tTagGBN*\b<=s45ehO]>AJ\7-l#)L&)5XJ+J&K4N)lcP)Q6\GPZ
%Wn+uf!pL@Hc&hM=&u:@&T#<:1el\eR[+@G]pn`\Q/1W+m5mV%T-r$YK?ngB%GUoaaC(SkUH6h*qRY_3mD?/<r7ASG</nG<JV-/Nd
%U6-]G8hDKaYrbrKPRuRSG"bQf9/ECc"5Gq2)^a)oJ-`/e1YX&AQm2]gQ5&,-#K*p=!/H;ndMC6>JMB;4f_\oA-imLo;R9A-9=JG9
%/)]b2KSTp,KTlb0#jo(E&5WV2'\Z!kkD>=J8tWI:mgTYu>>PQ^Th1pi.jBiqKii(U;(637#4%ggDkp$1\250E2(2ocLh*hYAl'(s
%Oj8;1ln2<Q)`Le99JG`aKVBPjM%J;O#'3_kgfS[(X[3r+_)_[4G+QMhM+"&8.=Ft_1i+&hbo3o'dV]6./LrnQ0WgG&8%ciP!T;Z_
%T/EI:0gTMO@jE8M28t*=N`_$8kT!5dDXRll4j,Wd-;NMR>:&sudaX#K<OR2IP1iF1lHCrIL/(0ta#p^N<f$no),`&]rTb"Peg4@>
%P8.2X=K`4P8^JHQFLOfrf[(A3aR`pog'tE6_2=>*a;&E[FQ'Gbml@HO:m#C3GBUcf/Vg%\VUWCh5&],*EStG'>7SgN6ljU=)hYR)
%$lmgGdM-%DFB4,f#:Cfl(249QeISZH!Ni[\LLo%TaLqR/0Vnb,U!0jkDqLX4E_$mU?r/;3Rp%k-C!'`HAPJ@?<WJot<Np:mP.a]>
%W-;g@Z6V.l;aRIaUtluYX`g22X!18?Z:J+7CcNs;Nbf1O&I;s:!>N>ddQJnl*+?]XmK[lr2>gqJ7CuI]L)SDQP3n!XROeTa/6eRo
%[Tm0RJ@VhiX`\:[)[]9q:0]8#E//+FS5DI!(Bi-UBeeoZlffNU'OX4DA^%A.Bjoa.3]86^e20(s/Q`s[(t+5hOn!-t#*CuH*FXrG
%0ao4R8:l#Z+dXTm.Zrudl6W!=,c=0bVeH`s&c8nZkle7h:J6oZ*VosuT2,#l6&Ud=&YWu2=[k3*8nes%/ki*=G9kDRb+c?'Y[Ihq
%,mE'['8=Y$5TO9?@7bjjW%aTCfMr3m+J?KiM*hq6+FKK3DFf&\g"_+<#!JOb4_Z?Q3Z8c6L\1jc%m,<P5)Daj+6H'C"&7!/)6$<J
%Q-`47kahE3WP07+"lZ*Y&Vm8UNXrB@Y^LW_A5YHDN[rciPn7$GLp&dGk*doLZG8K*!lP7ZMe=?O%ge@n<^C4eJMIL<TY/sLAo"K>
%O^\bA+ql&Xl@KWT,iqkpBYL?"KGLi42@g;n.udsR/d!e-$tn<_r?O&<EmnTVAeTB]XmYJ5"!'-s@obj^E[<!BZpW285_+GW8/>&/
%l)Kcg,t`n`g_&YY&toA+6'dC?"=PV]A4gYF7s7<0S8mJ;V:c3"e:YdNFi0F7ZClLS5kt4.$_);Be61KZA0[6U!N\<`WY-YqP)#?W
%8o.P"L`K)D_9jOBQNc$MkOOA$hJ<_&O+7UtUeSj`6>W?G#Rd0K-IAEl;i(rKA32J9;\aU2C!nn1)a5coDqZT_=s\jEXmN\@.pKFc
%DIUeW&h6!Pkh2C+a<>,:&AhdDOgZbT)=#q+3lKh$dA.,pKf\`Q7MURi-Eb6KYh9QN8DrE"Pc,f7fp&E[CPEuUF4HLG_6,-7$+O?Q
%_"OQQ7qa&%9?;;'pjl)-oKVc6L85G[RnT\URXe5C0%N=$lA"bo2?d.(PPBjb5uM>,]\cMG!bO@V3j^;G,<;i`$JJ$],V"[^M[W%]
%9.^Gt@?Vss!$='<M',tX-4qC0"dgE]ag_s%R&])%-6.`h*>+)!)?>gLNmO('k#n!:SOrI0&m&^P%7_s`.TBrq6sr:cf8m)']#nlm
%PDX1n3J<e3ULYN>rPG`r"Pd?RSH?H/Q]qb^/1cWM)TQmJ3YPY('%!hMnN]MHmmC;7j#r)+>O&'c^pGCZOq>K:K(.?">;4>[Me4Mj
%(lJPTr6;C/*PdhIG8_G&!eMM,#aX86*fM7!-%4I0kTH)C$W-*P)KT@^3c6Yc%;m=A&uLj1!ptJ&XT6=l1IsbIK]$D>#]p9_7ZcTL
%_?#2ON_h#K8<=Z6%W59>WM#uMkY5b]#*/H)daJXH!ql_96D0LtC!2)rN@Q"p,R0*9i(t`[OJpOD(g'M:5$:9H%;%*e7n_qQU/eML
%<'Y<=6a3>YiQ>le]KZTCrH3dn_-,`M3h^0k=S-^6.2^Gje0]<`bB&N81Nk</O(D6oqO<%*g5B2J<]f=\XsB'J6+hm?_e?FQF:ZHc
%:O7O](mKt8>;Ii8?*h=oA._?:AfrW>fi!t^OQP6!)Sn7A22dkRcbhWFFp"uJB'[VtV3;8`e&#N#e0YDJF_7]drb.e#%.5F"/<X*A
%#ma&Dbuc-'1!j'uY"41c*3pp/!J:HQ2T^$UW"sQ^l,7q+8n%llKu(F=Y/7aD6RXZ=Lbn8+_2=jGggU1PWf40(WVU>9AMPYX8n6\G
%E%/#6E.Z3K(HS(:-!aQ+%l5crR"AD'p8]F&RV]hCbnTDe[VY1?K9n0l/GhS5qpUh[E#fKGAuFYhONAFhMQ@ETG-J5gp_S%OA<Z<?
%Z2AVO?.SU((+fWm8gFu(H&<uR3J>?^UlaNp!+HgF!`(:<BEUX%8u0EUi5=/PSd?-p3l)9iCQi91okq+UM@puf`IY3hF^40sT^>!&
%YpDK,Fp9d6968U5oTb=I5)8/i=bb]IeBj;)e:B5?gW\3DLIH)LYc*!N-.m0d3ef(0/IRFsRnM0mM*`0<=YI'aBj'@ILYLMjjGHOo
%&+=<O7IXnT^tTbb!&:cf%QS+KVTr$$%XZAAIU#73<mrm!7uB)m/gq;nZ#E]PJZ_*<Gt=-a\cNbD+`1[s=E6f^Zo9hk1s]/WOS$?4
%+H1rC"FSX==<WISSCY7m0*LiR'[e>Z_8UZLf[3LQ&6H?:Z-=f+_;JF7<ldV`1GLEEM#/XMh$a"$BY&Qe&C[0XYA(S#ofC<0,9I)9
%J5)t&3-4[2K9ZYWW*gRg+e9T\3_CIa?@jI?+:Lp(P"D5_`9V*?$Z0:A+X9*>=Nmp>&jt3&QuiX_#,J"50Qe#N83B*b-?U:j$)s!W
%@3:D!h:AAH4=VXtJ`Yf=XFYf>M@A3G]IdW)(=!t7>K&Y0q39(G`'t2nd$En5G.;BcC1p@Mp'0?lMS`5#A`;^Ec9`'H@1C_G?RQh8
%U48_>ojk<>J$rKIf"nP72h\#pNhh'Y1urpm]Z?hl.ZZ=DV-li)(<=%^%1`DbHsB[)[U@=FlR"*M9&PB974#39UV^D^Z+^8V#(`$f
%eK%'D5[,FJ<SBla=_^;<;Q25_-6791amt:G%$qNb,'c_0,16T?A_DkD@'c@q4m66$1APG_KCClCMHnD:Jq4+UALr-Alr_Ud:EEW4
%a>7s;(-+@C`9b8r\AU5babpYDKulZC8d-A%K-J3@CPTo;f@gdT,p%dGo.;LlVkbu5nb9ijq-:JcWuj/3cXa%(52A+Brusi=)>U'$
%WB;R89,U!,o!BMlNdtRbVY"$lXJc\"KPkA\I5u?6`!9:2N(fbE1)Gm!ifJc27at^C'H8r2)GDg8>l_bbY_oG)Ear=u1]-lH:`A(D
%n<9'9P:4;!Z*Z^TV%0j90>=oOR2@:5(`QNk-21G>1"\<kDc')Be>P'g?*(40L-]2^(20O<=6bpPEHThuZ(fB2,[dU5@0Z:e"ueA1
%cZ>Ki>[(,V-u4*>`U5<Y:iuL&%4n-S6C1MZOs\AQ_IlVAI<F(l&gXoU,YfL7\Y-OURNr@R49J$Jn<p?d6TDs<.SH5m"#*1HXTZnp
%L)J=CJr2)i>AFf(J/I2sOIX4RFmB[JI*sP>X%cb3E(ap_MJQ!aVeaH(]Od&#$tYuPIRf]DkQ?S/V!jfB+V4XKF%Cqa=t65$do4/-
%j8^/*M'>G#fEMQ\TL^-qTh)Mc9*bF#]3I*)YW^eOrT"_hg`2Fo!inWhWDAu@8K0^b>9mR+![1kJL*<<?FOpHD(Cf1(7i*RoUnc\K
%Up\!9(^RC3<7a7NJO:s[QoM($<EY,Z;e(;A[:T'RD9ZHI+\^!4d+2*7";mKU5La]VX$29S!?8&<_*iqF333mM&3;>i#k^M4`"6Sa
%1fu$s!tf7:1?&XhRO/\&@Mf5lac8P7J-o!1Taie/`]o&@U=gsPZis`oqS3XpPVO_?a&?A,2B9l>X[QukCeK[uoBrJRVA0g8Uj+*9
%q'][\/XH__piBBPBK?b5S6]V-gC@c%$fNlIBcqD4*2Kfnkt'j$H)%2;;;hIuE:ffe_8L<8dgVc-kg7]PX:n#RNgVgE1/O#BN1^6G
%W?t\<pZ0.;#2m!l<e*2D\1B#&95>/[I;f@BdrOe.(\*nEMHl@i>'+BqW\(Ch&*aHsBgnVj-Hnci6\#UO!G\7f7r[sC\g.F2".C\s
%@@_qm3HBk4Ct9G;V-R$i7amLV.$WGe-KoDr5u"#<MSI!qG!2D\P'49q73!GDoNCl$W<4<)M9Y`VjX1UYm-*efO>t#nNm]tePiWqs
%CRIj`AoODul&eBY$isC;_'4']"]bp3`=dcGVp/1sK4/MUQj38sTR^/GMDXQZ2MC]YZ*p<<g"tY8B-9k]'o<#REYGb[NrE14j!$Z-
%/^(\,8maM'5$7WEMR[)8E%SFD)6q/o.>&A3I#c4aE`<I9]#$8Qr%s^R"2GE#9i01NiAr`1ZlUk'qCIErJYgXCf`2/OJb35Z8%<M1
%DFbZ\M#*C5i9Ht5-YY=F[5TFC>EJnoK/H\lLt7cAPlrh6EI]PW*6JXD__M#g(?^l$P(3]J6BeFT`11P_;klV]O#C=$VTG'S*Tb)]
%MLSoa-j6t/=Hk%bHl-m%7Yp"GDc.=Hqi96l.$_`@(Fq="H#0f\(9foDLe;Kf)Mt/d&C*P1[Qr=WD*8@QN^aFLUc4E3OhrkL\[S?*
%U6=/Z;.2/^YbtmoK+J4kX%@)=_`pn2Q0VOgKGlh\db(=)Z-aZm"n!AO,03(R*HRTDSIZZRV;m7d,i;0q7T_69_,u6l2iFgKqLV%(
%hQ_n0jN<B)YlRirR88AS&'jL>)?P]Pm0UC^Psck:$K\p04fPCk67B*-HCD)6WWGNL1`>Ll,MX8J#)*+JN6QGMQk6N\Q*G94L`e7O
%,NQZFZq;Pk`3XNdA:%RS:=u7s]AV0YbXoHP[Bi!3KoV+BKegdOll=sjMZ^Ro?Dp.8T2Mq2\?^`R[UO)Y<fj+L@Lu#q+Gde`r'WrC
%/(^8h<g0OA6:qD`8m#amFbGU3=7Js(\]7<]TIFA$@th?">DRDjZ6$#cCd_9TL,]W!ie<I*Y$CRkX/I:%@T41</F"^PquDZgLCm[O
%VIl6EqaQi>)hJbsNms"[TJ"r=n&>]W).=9QK[<"_:1IfSPU,rs==r;>6!(=SBZ-i'Qrqk'Rem)8&oQu8K3+>LK/FfSLVV>P_&+3r
%MPWm5OCr0g\jg%/#*UnuC.Y7hH)]_FQJCS$S+K#jX!))<rfIEikU<sS@,\td/L6R.'LrNY4Gb+&ok_fL0b'MKm\p4YdkWKY2kO>!
%MOYn3:r7Qi&43ea1c7o3[=@.*YHtiD7YU=iKMr4gJcP=PNh4e35cQ\h'17tg2UiV:?nWbif#7))(mr=)]:M,?+?i;]OX^[MBXe>B
%1TFkVo#d(S^thSR!jO58W"P[923,%>b8aA*D1#q+i$&Z6+=MJBD[ccH!;C"PYJEC?kuVhC(*SC.KtBAcT#I"f6.B`1D@[G)'2"(>
%B9_oj30&!GD;"4@JpOp%Qi^0IcQ-9aWEQS;02e36QRn/:5U##4+YcRt:lWPnMi4V<]PD<dd2G;<%_JB#KPnZIY"9uW$M]R&!'k\"
%V9>V]a]G.Te@@Y)?"HmPG7\%ShIY[ZNs!#tLY=<>C'cs[jYWdW`oqdS)'#BGKN&hE4oL[O2TT[e$o,\*`cljP(l-Jc=[W:WcqiVn
%^bnTQV^J5Og`XgtmuY>oL3#7)J;0iL#2rLDd8JBI#+R6QF<85mK?K!SW54`#p!C$VJIW3P%?I`eWd)rqUbY+P0l06#HQ6nA]8T@(
%Bh;]8>e,m+MukL#*#u]+A&'+\\]d\ecVl,N!ZPs9CG8^h64*f)AR_=jY(8CL[T1[2:CC4[+Fn4C20FJ(R24'RlV.8qrtPXQW]7L:
%kUP0''>\;=J30"*T(HMYPAthq@:6ooJqcV_3X^TCl>WR,C<9S*WAiP@*_V3q]N>H>eoY,^#aul7^6FO`Eh8658,*5-*\uos"OYR0
%C0!=\*J@5*9brCEPQkkSF]l\j<EL4JKch.I!c=AY9/tjm8h<ar2!(Q2W6A:]9A!9g/ZuPGXQ8$"N!D6-5h[>?b`\D$9uE+#66$+E
%TSZq]<JTpG04VlLDQAb3/+8;YYn>6UH%IpYHmtL0$U^Kk%)Vb."!NK%Cs>fKAXJ$`.Ed6gclA-\Gq<rlOQ!JG99a[Q@Ln7QL*UF=
%%LOdG2rm]SWss[\hW07"LqWRl+bpZOgYqGQfJQ$ABhNkuK@Les&tu2n?&fIt\AUmX4YqW8Tk:*^\K#S/"Th"hnNf'R()VE#C6H<&
%).kapn@b;2?biR42G<dH.=KX;"VF',4YGLa[_1CG!-oH=&/Hu=?$.MM/7g[YF;X]ePm!kJeWi-Ie8ZHq,SKdh_-FMF)\!]$@F/t:
%;8ifqYe*2/,sEFDJqOsb;rE0VbCboXEPt/qN&!eZ.3k@kV-m6XA>]fJAAH,?5&]WJ4;h2A[ugfKk6@c!.G;-^-O0T:XJ?@IWmk%k
%Ggm[OleqU/B\9O[iBpqpM(4+u9Gp;6F;G\2`f67`q*huN5R`3E)<3tiHrAT012Id$_h];6==KIpl!?lAK&`:p]I8>iYgbqFElR#S
%?4M7sKkIoiEL0&^7:*o[C5um/2`tnOeUUO2l8*<Wa]hV/.#ebhWMJr!(2^!t&C?YN'bNjVpQbt8\fujL%tLP#Mc$i@!(5p"5T4GX
%@6h$IjM_itQ).*UPUpBk),T0R(4=`(P8H\T=RmXsmc0ZQ#O`M>?7S$%1oat/?&6dm!Bltuj:&sqi`6o:]Ptg!iSn%Ugb=Pj1-#-b
%'WeYa3<STN<6rD"3(kH[*ON[?UUrfOIq)KK'OdtYia.S(O>A@a6jog+I:pQ(o8PAmN_g<MreA^6Tt;;H%T>sngjk7&is!7s*B2Dk
%`Z"FWjqAf^cf*=[JJ2rL9Uij7^o>[J0XAq^dc=,*JQ"$>;dM9s[NP_ebN^R=c?,,7G=t\te6"?.AaE"t;FiCg;@+\7'8&nkb<U&9
%&aAAb$J^5CP:srG\HcTL!rE+aOm3qGZ:NBIjeY"uSVH:D="AtN&*g.8NnrnU<L+0S+eO940Aia2@?/HlR4^&$>k".cSk;qSnNe6%
%rTQAH@5q[N]D*'R=5;m(=95%Qk,M()#T@)S`3"BE0S\HFJK3C,8al0A/%5G]Z!EEcIW3t5hJ5T&.Jp!)Ohd82L3emO[C7n'64c'_
%IkObR\B?`gLmQ$$^^nP#A0)-,Y%Xq.h*jb5bGg:W259Y5j\lu!"lG;9MoP$"djLYX\E.VfN6_b8b4\@2i8b>pFsAu45uWm'ndfd`
%S5XJ-(I"/F^c@<oA=.ChL@g*+e!#4ePGJlc#EP2u'1n93Lf'kNC$M"YY#;(bT&N*JcA]YRJ:ceb3/(#8`sd7WU?Fq8#GIALpj(>/
%E#X+Ehua#=aW%bR9ni/Y[YB@FJi]):OfIC_6J`L.jdBi$.Zu?:8e">^(]uL3$I@dHa?0r3AE"HNOut&O!m#on9,[Xu=p/5EXJGfV
%K;bW*o/sR5W'g8XToru.,W4cC0^O<E.))N>dbVmo?J4eh63Ok`DKYO7>(Y/mod#Q@%WR"$0SCB7h#+iZKqp`A*XFb`!O,2#67%;'
%>X)%q@Ie0s\kF-]8LgO7Td%BRM,8dJ*([&6.q'U(5.R+U-K7"D'3uUp`PciE)n0t?JRp7A3;J3IOm*-p5boai(L`qR3'oX1,m>B)
%#i7.nbuip])4Yan)F<5MkGDQ6cN7dRCg.khM/.4O$8T,/DL*:8%Z1YcRY8;@BM!CW\\T;A<@Zcc5p34%42^DY=CG;bB2!mDc-k@q
%+Bin`MN6>R_u1Do2I&);$B?I"1$D:?&_j!9&[l)WWOgt'DsPMlgK]k>iK0&eBW==AJlF^!TOpKE+f$2K1,8s&Bt1tK5+u_#K7Or&
%Be6\4"sQcH?4I(2)r-r4(rR5q_f1@_Z%D]S1*j\YJ[Xpq=[qI.Mnu]8b?9/$PW0d/OLU&jfpB_TU;]RLndJTZgYs-96m6#F*17Mb
%<[bm\FbmWemV`44[ga3-R#_:="%Ta.&]5'U]KfF.O/lB@Kd1Bij%,s,Z9_9L?Ef<;QCJ8t_S&^D46eTZM;&B*P6-HH`g/h<&>&:1
%fo^eP;eVAT)5B^q"sC!7;RiGOgcP3h^B)fAF<ih$5b;br#\EC/;gGo=V5B+(bW(0<ESs/%rhuW1=:'4kV&KfB\gnL![/iu]pIlq0
%O?:7A`9BK_6rYb[%gOPpXt&G6#"itI]`Gn+48kP%-#"`7+UkHKS5^(:Z';o]9i'-GRDAoKe7^I^b&8W(k=A$)hDD)ka2Ur"D1E@H
%CEJ-rFXA-9:rH((OWp<*[M0WH7^N.kN`:1rcJX=/PR5ITc>>]^L;_NZ_"#$ncqCpTS2ggbll]Vomn=k*8)8$YJQ2,=,chu]qI>CL
%ljtckR.,q?.>09UTA)Et9SZ%YZ34&o09j_4aE:I>0,@QrAV]=2)XeCC;AsfrBFlIs9l('uCs\l/Xi.WF]-4g&7jDEe*2.s.=-qq#
%OXiYlQ>13>:De>"OZ3Ades.dd$38Y5VQ<V0<f>Z8/dkb`3>ZKi6^=fFUQU.OH+@Ln6Xn%@G3)X7huK0u3(HH2LIg1>E`LaA[%G,O
%MGdO8(sXQi*RRjCAr1=>\0'f^#"@<*L]N?4FAt"B.!r*$TcT2/+TfkB"%lT`)E$L.+>MkFF=Lqq6K"Nd=:km1I(54Y&P9irrG4t.
%.E@>XQ,bA#clKSqQ`F3nG&?SD^37_j:`37UAJsPVi._T%Q,.g$<-hN$"(i!i`TAs02QKNtObCTO)r"=AQ5V??U'Tp?e,Y]mO6(L!
%9qH1?VWQfi=&TbB[j3%TBsOJ,mco@Y186=faX+5BP.VAs#a1%!I)$If?fK#g'.sS+UC%W6C);IJOXJZ>&5tsLA/nVcOY#K"ojA<o
%nhu?;$4@c.Pm@l-_4^@"[u4WbAY<H&Gk*V]XjSNd@4\HWLkiCsBS]atc=flh`/<Bq8I`1obn_!b#<lKe@07$`W4_TcW^ruraW+k;
%,`G*&3KS6L]&Khs2a_sTb*hrM[4bE'I?>LobP4Ig+e;*LJ38*S;O,,!O>/oN#,I3FnKJ'\S7J9nX;&.W9]^/2F@YSsI!WVsB0p0`
%o*fLZH&AZJJQWA8,o$/&%JW(cg:8`hR-a2sSBMP2kQp(F`HS_KGXXeNja@O*1(Gp2^7o2<Rp<D&9N(A$WTW2E:[SW]A]'IG2h9q^
%*bCb7ejLc)OtjNd*tZe>A*[j!*t7.hP8&<qYHNZ'8jfc2=F/n-K=(8M/?/kk,HW0"%lq>/`q`f2)[K]p5u=RTdj$h"O7E7:GAb*[
%,fb%V(Vp&i?3L%7O")f*H^'O:S+\a.'/C$60F$R^(.CTG6O_"&khj"d[3FqBX*V@T]4i3>!FiXHCM.3jAOa[N`<uFbZP5]@>Dp]*
%`^&!$PDp?@VeIm_UmeAOjt\uo0?L>Y?GM(dh&IbC7WgUY>F.'8_dpC_l/a)RKG.].6YT/f[E:p5j^hTqfW&$ZfNQ5J(p6CCjR[ra
%"2JVP*/<Pa;H=rgkXgAh:*oN@0,=/ErRW.s^k7PVb.er*6DLN;APZWM$l\!6$t(f:j4^V'LVO\F\s:A5c!n?-Thn8bH&W=mV7:_"
%IOLX/"20@TFPjI\b*0Mrqpn#]W_&R?RRH=YYpGk-(tjs+8s*QS4`.'-FhHJMF.V`9-TPg=DI*rs<&'-42EIHUY1_ps$>?R6M:GPL
%LX-PafUUQD:krc?]BVga,(^HE$9D*0,uH!(.AB2V*f4`!d44"bLm:On,c;Pm6/ecUB8<"$d`$[IhO#*@ppA3tcbee+3M!5F*PbFs
%/b'g>#&K#0$9^d':#Z"mr/!*#l^M)p@5iO'Ge]DEDqh$8ZXD[pgMsi+Le?<g>o2HfZp/DHo9nh6<.`#oZ2J^jlU%[Q5&a9_39pYY
%Pf:%e+Eeq?.U3mM58p0:)EP];6G#Pr7kgc\hAEk%<o_V-C^k+[CXX6\D4CfrX)V+c?,8fMN4r<4$;"GD(gmELqFWV)!]\0AX'M/T
%s62ZOqa(?haGEQ@&i$\JNd]p+E3YXGhZ%ZiD'#Bu:/a%a6;L:.gEA#t=UnM!r`;,3pJSLl@tc'/gpl"kV&TmTjQqo=oEB:BjOM4:
%@p(]sQH*nRVlm0FS<9WYkH@oY(C<VSXZ6+AdNMoZ^gSr[rSr5grl$M#fLqR#/p+-]o\L[#OUcLLQi1ArLq.u^TFk'B(.JnIG`>iA
%kT]eL`@W[)?h=9N:6Eb4Y5oNlDhhAf"dT%\'`@*"_3%2ZY>Z*sUE`kY-4[Mf1Rgs3"i)D?/*EjT$4I>M=Lp]qYM?mR5IWbU?W*K7
%@<ahdUqqNB+`q#l`oa#pN^%[mXW;BAP_,]03;rYJTru/YiXu5?lc`p1Nft]JamMnVYrObBXMEAe'b;O!e_9ne2PL>N9QX;D#Mkh*
%g"?L]gN2+p._uX>EUYS<FCb^,Ss8),GOCPZ=fNu2mh5qbi-nT^a/.4Q+R?i2c/q&?Ne`I?"pF,'WOGm8rV"'Ga2#HI-_&JWid[h[
%-B]Ps+m%GR]ubs5poX>c9_KK@E\_V1/t-BskM[?l?&f2n(%9am-QB+\jrAf(Rl=<:Sk?9Q;C(]b%@Ke-XQ9U"oqX,hgTO!dB[V76
%89IX6h]&Gjhh"@8m-1b"l&^!rULY-J2GFo@cI#iR5mNVe`l7!803lV%Y(&/`'>Pd4Trclt)Trb('`'D\Rjs3oGp-l])=1q,bil15
%KG(S:I1'reQLIXo0UnIp&lEa:b+L"4UL:$'qt._P*_0FgUol\L:QYgWd,G9&n2RPUTd"JBUr%_)2SE'J0J(mD^56FKoXTM1!&nId
%]'BGuGh4,MQ=unIabb?WCJ`H?r$;IN"S'h3*L`\4FS>!_(M0irP&)i0df/>7_R:64'+ML5^PD]'Ogq4e(:VH4KA[<H>g0a91E^#J
%:lTrgEXh8-<9Z?P-]oN.C$X^JK"RSeMUM!.$Ha-@%C;T43S[hS<kgRR^\Hm#J_4l2b=*,"OUS".+t.5)KUIEQ,K3Nm!K.A,_DElR
%GqepB+\[foF@1cjM?@1U)ib*CCADQYkdBD4$:l[c.$Fp9V\87/[3]ZhOlLM"+Bg)+.fAaf94@<"VmY,j[]dn%Jjda*$@:Wb9K$!t
%B-UViY.bG3*5fpD[`u;i,ME^/[aW_V_BG;,)2uMOX[bQ'WNDJJGC::1+K_Nh>C187[O4W6<R?b,&P4L4(HhQBKTCn)9TGD)XhL:5
%kn<M#'ipq@-..fKUu.*)%b79&f`$<Q13B%"a;maN,-L-gW8'6"'6TWq("G.0ejmL:PH.1V">"(GB[Y-H!n5-LbH4mcdNT$9+4ra_
%MtK`#DP5"[kQ\d9G8tX4ffX!f*0,p69#Xq:\a6l3M=2kM]-lR&*'300U(t,7MCl]l*Rm-)eHs_/93VoV6^&k'%e_4':TWF`_=P(%
%QQ_>d%JOO31jL'W9>l.BhRb<1*P'"4F:0B@M^*UIDq1+bBNgFfRO27rqC/RNm0b22Di8)Q[(^-^J9B%o*ntK=9_[*^E62/Tn8OtV
%:oi(>!ElYn9@J-[Z`3s9jP5a"=Xq;b"iS_2D4)2<"$sdmCNL]Zd":JE"rBC^*f9sM\<D?:BN"14?faZoU4+To1B"XLQ81*jHDLJa
%'g7"]!\-ADrR5](5_Vh@]nBXLgfDB]_0__oI2_^EK2d&a*$H]Zei*Oojc#d3#ro+>\90Za#RTj`Hmk+fFSIb7h<W.jO!mFsR;;,T
%:?!3@drA%-lLb+!n">3V+uWeP=;#G!3c7?ME072;4-o)-hg'USYA$n]mVi0e.hJ@m4Xl7l.;`ud:Y5`k_`Ji#a8FAq4/#%HV1ERJ
%=<<0RP.!UEr76_QX(4cgHZ&BVf7Sn)p2U@97p52Z30H.`o1iiTSH&h;&8d:>:AV7j"tHe0NVuUM@Y;W+fSNRd2,dhaZBn[7d>8>.
%9Vbf^hh)nMfXL-E1kAGA\B98(Y6?sC7IpHW^m7r9@_6;e1'21'Nfl4jWSb=7/%JF(mXF1:[RSkQ:bKL,X_k[%PB+-\>K3cp[ph"%
%XPLPuAGMVknWLo;Xk$A(D/O0lMBfJi?ZH*KMVLreOLJ)7.ntk^G>JSkX/;TB8i>78,eV"hgf8K*Z6CLJe/Q5k"GGIo6+ACk;>RF&
%;ej+f<ND9'<QkoeC0raS8+F;P/M3see$)d3(e5WIZ"g3,0pK4Dj%_C(ZBOEZVa&V!9"Z,X:#XKAV6&s\4lsRVBB:9?cOS)L)fMc9
%+sf4jTTo<'<95A?fS)pUSQ^OEQT/a&2h>qak;F&<3Of!\aU<GsUfTF=T?!J3[+YZb'him:)A'D,do=c@dK"[Y>!L7O5s-_,4!3i*
%GrM#aYSoJf6&mkYC^!C,-<id*[?Q?tOlG6A.[g9:;k*;Gdnn)[Od>hTeXJED7n7]#fR-5:"fMp>+nnK+.VM;I/fL)NBVm+N@qhf_
%ZUkff$`#DW`[d0kVsg`7/sk=5^HC8f*!^%RD+=,!N+grsCKM`c1gt<SP>L,8*mSN$6e`^plXnP:h$/$n[&fIO!.Rko:pOGQg!55-
%V5f\TQb]t*%&*it/5NLSA_Qc.'`GIYQ(78=?U7Z5hp$SM4@&N">+^YKq!+RugHCpN_kOU-[\i`23a$5K1!%SA>eB#8X!lQmhR,pI
%BH,m`\slsjmUEp!%D0&KrA5UC6*VGq=tJ1mm$/m=^+/NY"BY^<Wi<:n$4tCTGYe#TQDWZopoDY'>G)/;=Tgb[fnA'020kNB_l,,<
%3D$e%^P1S#WH1$<1C!5/8(A1!"%`YK3mOgL!V/!-/4Sru0Ot1r6]i.Q(1f=#$`0unS$J<BLO\&^,9Ee\Cc[F+,m7qFoMVPF/n)FO
%]0N/]/1F\!mu(-OCKe'&<IV$W/ED6JMV'9lXe`:1S]#BO2:msi3g!FDa[97Gaa)o#Ko^3rk*@S^i$uR%.WZON3#/YRMKr)`6J61t
%E.0[XN>R,07]8?L:m(Ph-nslZU4Jec=[u1`4VW2V-`01>K%2>C+5ph^e>inBnIuB4;Z9dEI-Dp\[fE[gA[11K<G)"CR72g'+GHO4
%.aYol\'ir5MQ^tgAM&/,8q7p^!cq$->(<UA<[-VD99`=]cm"u8%Yb#eR\j56+4H;jSDOB6:*ifC<TDO1FJ<BakLYXWbdB.H7pR-O
%6_j0'$?Qq5a0ALrK5N`"hUeDQ=Y)uS4;>?l<-iDlZ_sU&_d/QF<Q2@7V)AL%^I;ul%UFlfF.6lNF%g7fD?mdW6r3]WmH!V<X,R:*
%(G$#JdhK!`F#EEEe[\r)MtOg\.bC:GO$Q]4MS.AaM\s%4PJD#9V1"Dh!=grod/`"Fd^X_4-aQoAJQQL,Z-;4ad[0E.P]piD:3RN*
%_(!/&a[K$L.2SUtE'Hd%YiD&j_ahdu"=AQp6H&u9eJFtnip>'_Ml-Be)6+e]bQ5R;Q6On)a-Pm2(6bsjcA<1WamOFjIaKm_J;$$O
%UpS1OGCC/8b%2\J,c0W;Tfi2NI2C,H9m"+QY!qcDCqc"hf91Rm5U;\`;C!-l3"hS0nr=N`BO?4N&$AKm.8/I%mR2>X<'tM&RLk>m
%?fr"Kr_oTTe/BdY[Kl9GHH+2nq`$m/:5-$U_EnmmX:DlQ=][l9;r(WfJQD;QWAUHhjWR`=eRT3e@$V5/-oFK'b7lYAP(K]4S)<!N
%_M.XNgF="dl=/p^ma1Q#^=_o+9E1T%FS_/%+$>_72./F1$5f:!i[RHuPpS)Q,1#SPP'fhR[^3=fk9P$f0'gJ,d&/=uG4B8g?fHC!
%)Y0j=c2urVR^X]2\$\Q])cSBlifT#J?i>:p>jS/Bc$$?B0D=hq8mEq#e\YXB!OC-c^Gjmj$*U/"!o"'PQg1hBdXJbc#LfO&?LXBl
%0)K@O3`FZ>2?H:-Cbc])bN!Jo>.$mGUE1:t\Q=tj\jKRlHW-SpPZ<dD\2-(1oD'g&V]phu<ljXk.s!4LgGRKJWZe\o/>j)[ioS#N
%pM+1^'g9(*GRf;?D,J:/JCp`cMqNOkjlX2eDmh(\#:u>31lI)E\.ugGi`P#b:7+ISe:3o2_jOQ)8EdJ,,pT$eq$YftGdZD+DfY[<
%5"k#gnNM^T0"/[U\MgP"N%)V+8lolP\BM?fq`ts>Pm4<nL,@S("!I$DTgltLD0l+ra"P.i3&W[(hP"\^^U>&V18Rmt6o]6Bl5uI;
%KLTXB"lqb)VNBd"d-7;?C<KRtUI>jrE1^Dr6"?pnB!75i:=^.NIDH/5O#X%be4#UeeNcZ<[npa=BB"7'MJ(ah%ie(FO577B^hY<@
%bV<!4Gq/)UZGkfM)b77-'btsL%otDtl$H00b/'NQ-J//GBr))e]1TKDi@qL,"8u(]XOiF&4]F*OiENn=M%<c*!FH[`;kLm`q`5eq
%a<&0:dNpJ#G]Oq.?fV(;*\7,2gnE(sO_aQ#Q#7XC"dJC?/ls)cMDenfjQ&7*#t\BQA(jt5%&S`\oo:G8<FOS'g5k#68q%T4']j&=
%1J6%X+kQ?Cq#2UOZ,Ys#S_OFKh1<]OOb;T?XLtc%M,.<$NhNtgr,JFOobLOEVEf/V%p:_#5R8+@\PT$]+r.e\Zmp,N]SI2(^11u'
%LXeu3\(ma8X-,"63N(Dj""L2u1$`l^D(M<cc=W'*!YpFRV,@?H7hQ4@KCYR,ATf70Y7>D]6UO.E],SOgc+8rZci`K?kX&L(5ViOa
%PSPaPJCljpgEaF&K=^pmFf:*s_%Q7>O'ZG]fj*mX[OqMZ$-jRbp9UpOo?hl"XbUE-nm@p=Mc5'"!A6Rcq.$!\qPsW9:E/BO?l]/`
%eY!\/W(iLG5p_XNT.^6Po@'OU[tm9)0'>=[;X.PE`sX&:-#>5fns/EfO,P/*3iA^nLb.0dZH61S_p7_5J7hH!(8ht<j)nl(\_-7g
%TUl\5q;e',f^&35]\NKfkN"c2l?r0JU]03b7t"o9q_Q$e)7jt?&j,RLcq<X/(DFhAerRurGFI;_!iMa%Msj-eA.;k.i_k0dS5q6e
%=-%d:-S+WTl*gKL1Yb*Rc\Nf.^77hPWWii/ehrUZXkieNHN[$p$9^'X_76K.@TUu;3O/KKM0s]J[<H3Co_sQ(S>h"AN<9;e"uNG[
%*BqWcH$k@G-q@P4#;i,1_+DRIGRO#q%+u7dM,f^@bMZIDjpI;]hIFGq"Em^#$2Z.pVY'/].H[[BgKJg!MY\b/OdqKiHfK#Ek,AR:
%Obdn5Cf.?+pr-A$ZB.aq%5E)aBt>L!00qKt7Fkt*$/b3M:a88L@Ni.!qGmWd(@b2?Ej%ujZftS!5'Dh/7X7'DUH#cY;1=kR"KOI@
%3g@u@1%A7XkhH2t>)q<dl<V6&gqkiU5e&)RM5VhL2i>#%,VOFH"X-,R6[t^1V%?TZ6fbW0i5lOVP(7b[n9uIEqVZ?-IST5J0R(9h
%$@8)h=IiD<,1J&<^_M#lP2F6uW:_FKpF:L?2!<H2Ob]&4C&k`9&"GjPo<'Z#L1!(b[P%E"kANIJE/BP2$HBW1DlhY'UYucaa7:PY
%:Y334N='bO3C"uB)M?/PGK@lSLERTZ+meD0NM9%A,o^#bN7'>p+m]trq0\_WNT*DCZ,<&:cjPb#7oJSd2k2hOH!akE^=+,dDr]#0
%^A&IFhs9:.iiMO1qc>Tr9TC;X<L@90G@;9\.a4d5=FNfd=#%451,KGGe6$.^(,2/S:Uk:t7JN]=kKDC?f[U3OWmfLj2nVBRe#>=!
%SBD#3i8bH*S@CJn1&;#4nj_?X*#SE6kR:+:)N&]mpm;?5Pt43[&b>t+r)?Cg'%H3DG/@MC9b8W;;$a!YCAM@7l+:4o0ob'X7'*LF
%gWlT`!(G9:5_OK4VU%d4,T\RKLatM;MB6@>4u7.r/r*<YJOK9Ff5t8o04?#b$Ht<K/`.pGC&54L0P^"X*`UP6YE.>d8N`Wro:\>g
%rNgUUg41!ooX'meGPi;#1?$1j.)\OIB?A&/cKD$<lhp"6SKOh^&;nljC^gXeTlf7rd&nprj^2Cqi3n2C_[-e*M,^\<hA$mmAl]K\
%WDFYin)T*74X>N\/Thsq-)[NZmBUEM"J34F^d/iqJ@20`JK#U+i:W$k3fRESMZormMdV/kEL`s$qAGVhJNZU#+4O).1*q_00J1(o
%,.JMcCp7*K\CeYEW0XC>-jlFunk`jlP.Wl#d?Q[8^phIF&0Xqr(mhjadIHj20q17XMun&>)G(Fpe\"\YF'cZ*FWNSF=P%`S?nG:3
%ji."cBYlL/rB'!F=EgquntGnSC)#,>e+Yc[U;8YhM65i\d7&ccWuulA$aX:AIGaHY:(M8(IuM\b3dLZh9k(gW)@$q8.8$Q2*/4na
%l/`.2J&h/i^>'@aSTEXnQh.pnT(<S$Xn;FA>^Wp%Dqde5#5p'T.[kFPSZ+aZM"pNB45Y,B]C>C6,c7X7?<p;[Z0a_O[^C>YNZY;9
%SE8FnDWtUu+V$"N]t0NrK\aon2jpcB<=N]=`BpZr4./d:%Fm%\#D7\^ZQ)*Nb-O4D'Y>_FpuQQ+Eb`h@C6Y&'+1Bh*otM=1/,s$O
%&7T!n4P2dV1g":ad1oj,Hd1E3d7?m#J]!TG,&Xh)%$]-^nZ<Bo*8(a6[6?(EK8GgDRrh:>]+0lTQ5UX,aqu^/Gkl'9UZHn#5<_r\
%IXIm#p%UplnF7B#qpRs_j&>E.a/>sBkG-N6S*5erMLBo;'^SPr&XD?C8*TQC.`FaYXVMR!Y.BLW*3*^#7rq0I?%1qnddFT58QuJg
%U"tg)6e[RAq'98B/ioh<UVWd<"f/8[F(WH1LFr/+c?9hInjS-ioefuiL)bRjTY<GX//L<]a[*c7"<9ee3jJCAFYKRiX#;;9,=0bj
%3lP<"MAq?ZdGg<P2T_$3A_.uWgb$(b9/i</ojK\*d4N9u-A9(<mHmnIKCs02%`I<U\#",m?B*sR9ach/;or+_A+H9.5XLBSE\Z1d
%O4=M'f3?bkO"M$A=tru(JiKZOAJ.t<0R(M6@;k?Er(hQ(M:[8+Yq2G-k8=rm'.3IuNDV!b;CVALBj1Kn]1LX&QJ@`QZAS0G"tt'D
%a/[/lQ6.l+'qJ<pBq"*llrns!I]JOIH&#g/`1oR?3[MJC)3F^K9(n^+s%K%G39ZV%YFIqrSB_e;Z:i6[QS#s,\UGk[a%<Cj6J;F9
%q#lP`-KSM5ZYWuq:bECFDFOOmdS%3G[VQb$K*_)QT/XkJ:6hSGpFdCLVSc8]\.#@u!f054-Ee]64HdKg.Z=O8/27me8h+tUBll$8
%ZLKX37[9G-H=mqMej4Dg1b!iC7$XqD69I5l)s*.jnt4p+7ng^-ZCH)t)4#hBG*;=T,haI$golQHaug9]E@)!jL;#8_/Ch;P1GgDT
%i,Q.mY0:Pb0!A*SjP6d;$HXA^P<n=\&d<.H'NnL99@FXb9W:C#kJT=(;_!SY>>r]7okRjBP6iDoQGs)'_Nnr_;46.GTh50'oh`Uk
%L,Iji[CQ\>WGH\nR9OEh%XL<"Y@%!&6^=iR]mP&9BgfQGm(/#1Yu?TpCkmAF$-TJ`Nd*3VN1("q+d=ppq@XMe+7#I#hel>o%o+OX
%(n,1ua1@MTlbmBS</q`Q!Z*MHg0&QQZLgBR#uV*FP@_"t?H\MKhVbk4[RCt4YA1e7)5sR8>u]:d&N4;f(O0j,.d402gd(hCI)du$
%:IoNSM8YOXBU1'++&7$K<#^I/V+=ga@Bk$VB^#@0%V[4m$JDuPlG2$npe6sL,gW\NAiCkAQHn,2ik"<>;^BOA!8e+`KR9QZot2d"
%>Qkb/P]>HsGnj2nCS]:9$EA&UM)E\fg`LNn4^bdG*Gt,"+<%H/Mk$"pKcJR$PK4M`N#'s#n1I+#<B8c$bS8Z@aO#o+K`_Ds1*i,$
%WEN+L6cg"/I2#R[VHi1"Ou"m2;*.rY:(#@K?67VgZ]_NT.!Hd6Afo'_Zg?+<X_7]A4*;H^2julPMk;H=##N#-fMGESHA^Km&Q8s%
%_`fEE,L-E\AVkR[]3?1f2,<Ha!,:>Y?):J?]H.bUbj"bId0$Om.-g%J"eh!h2ld"K)HGR\(;gYr'&.DpRoDe9jhX,WZME[WMcQ)Z
%J\<Cg)iplQ'KL\nFRrQ!jU\[$%*ClZTYEHpoAh[N2fN@AkOe5SE[p#g\i/"KCY4Wpfif^O4JUoC,*,X-+1dn5Va8GTZ@L>5PAd13
%*c=q1;8$`YbLRh&F4hJN9o@Zjk(No\Lu,tp?STnfnVZ<ZPV^d.._7!+F^4\"9N/oU6KP7r,c!IP*FL6l@(CM()U)_"T2l[;Z4[Hd
%7I8W,%A7TlCnE%ijP8GrkIru'IAhlN"2u\"n9YPFhEcpmK&B#7a!G1Pia`BrCCnhrM3tj^I72"S8m?GW89EA/V4`rp-@OsT'bUTa
%jT+)3lL\`>1m,r`'XJ-H4NuFl0H<Y/Y3G&hp41V0!3#!5iqfe+3-bn-`a+-h7AW7j9B&g,Wg-KN7V1eVWQ]?(k8\WU],J6i2les4
%@'^\MX.@Cu8oHj7T.bTlG"I5l]OMTkM]"2Ee]8&PF`Gj/03mp)fd=q)jBEX=iTYaL"FHi])H[ch-<Z$?Osc7V(:FMmo+H*qfXnNC
%R#pHh]1=Io<TauqAos5lV*SI2VbbFB&4EcSJ!_"[PE;QREXFC1AVqTW0Cgu(<AB:VA]![1<bOtRRN.&[&UN@+@eW.`;n6s-R;N,S
%1$'Q$1eNUjO9aaof9e-LL3Tqb9F0?+ZmM<+1c[uS2sWXYZ)?0bKnKgTjY=OUS0UrqTbM\071^(/.\"kPN?72Y]@"nk-)gQ%e<.j)
%^A(R`XtDhiX*bce*huOP9p%TgWPkN7"tM61,^mX-mC-9[ORN!ZN[tHISln@`6jp0iYX=qb/]0k2%bRDe?l[t(PLP>pEi5psjcD&m
%cm?j6C#Woq/;+3P>#br)/CL@pW+"@\6DpQh-g3G_;+2>CHUXP^2#s/FE1Fdhd<]`5[5AFmr-Ed-ffZbTnF<PGN't!OU2^?^Fl<YD
%h@CG.Ek.X->m7K$%A@#;$;;_uV8_/QNN)$PASF22EaH/^p)LJ&YWO5]3<RIfQ'B1kUO0=KI0%:Cd$Aoo<sc"G5p=YrN(/5`nXet\
%%S=LE?l&oZ.T40oL_UZ#2b,s+c^oj9,Eh1"*Z&cs@grI636L!LF_jYkB2^WF!f5ML*[1q!\jbU[7h.@$BI@4p^u8Z[.kt>-E)F`t
%s$)P?0X[\4s/S?K`Oac2J1]Mb;(8hYX!/Q`WZ,3+[hCi^5M4KVE4`oomIo@@%EuH:TP*FtE;V41E`lld^Ss?==NfN.>5uSr(Boie
%$=h/uThW.j[MhQ)'k[BS[J<3k<B!h)qMN\9qR^2@p=O:ZFY:V<mgMuen=+5ImD;5s+5HH5mQSt\N:M!cW,?QoF;8!moH+19T9YN_
%,4#UVD4F<<X2Y2W+hg"qG0scnaJlb^pO3&W=W?%LMc+5:IX71*B;2lipXr!+lf5%4ePL;.@?AganMKFK5Y5skcFEBIL01*0l5FhP
%&r^$0,.sasFg?^F@tU(]D&e3r_OlNjIG_eKE\r\4;A_et]mGdTEB\Q%_W9.!I698$;%ddL43bPSj6S;jpL\fEI#rt5"dPJK*oYDO
%e#IV7UUtSb7d@lCZAi%8K,Yc;I>JB[qr&RBad5P3)1u/WnDkE8o_Uha5%;>)[s*g;D*Q>EA3<(Xl-Or'e>OZghpAYs+N-i80Ikp+
%<#;YVs&N.$aNu/@7c[1DUJ"f>'3G&%rU@*jlsmRr$,k[aS,K\D-!Hr;bqXjg&1AeVYNK?$VjYLO,q>SOP;9>#9<#%\TW/0Ij^u1a
%^.HPAinOO<aN=!AT;0T3<T1*MWXBFE^)u28TtYjgi4/6JT:B/ep!>/(8$SHLhbT%aFlUqQT4d9-Oub0Ql_Z*f<5,A3Wt':#f#k!u
%T%tfi7ZAk,*N#JqN^hjO<;2':rk<a('W&bnLI0ZfLZ_-:Yn%iV16AD^s(\9AW`-;IjR[3A,[1HR%RlM;]t&osFUJ4Y=U.0MY,'O7
%*\I6]IB!98I&O,%CTYaeo]5o.AQ(>RI`t+2btl[ZqWc+=75R/gcU/OQc-5!WcP)3SYO#[IrA2!K3o77oi<6.?1/2sZ!6^Yid"N;3
%TiP]`32J=O<P0JYLKX9@1T.O"2U(kQ4Nrq;"Y&r>MT^cFq`sWj]>\P7ipFVpL/pNJ5MYk[i[Vnd(8^]&^""M%;qK)E;Xe2gi*`/E
%`u=%nKG%*sho]8f!D`,RXb07rM9&uA^[?ld_%5/DDT%5kSK<JPI!k>tQ[*TXS,Em:9@RskVl>BO,"h6sQN@n&$`c;9>NB@UeKh'/
%q*->n2#7c@j'kp:\e:MndHWDD>`H=En&Lb,%in"C%]s:)iRtU_`P,\%$dAW1#1,kllQ!okR[U.5)mnloR3PPB9UUe!VS_bqFN*f)
%m,DJlV9ZJ(>A1rW:c'/(IfL='>Vtii_R79IFPjcfin6qnTb0ecnBUnYQ^p6\rNT/*U/>TTrS,f,)+@3-+6R?-9fF=]V."A7cU2X4
%E*52X/ZA'$+E9?(@2f"c]G'hB>/qa*2OBu\$E\sAQL;O*`U7Srs!!FuWi5"0n_)?(q"EMf7ncdo*s2<&<1\klRbI?V-HAP-lGFcO
%L12J/E/85qVf=mAie"Wj>;OtCZ1;(QG-n`f%1X6s:@[l-G)?h/Y,D%SL3AH8j#tYh8Sd+-254/E*IkEjEt',ZL2bau"L`n7hBK0m
%+V_&PUWa!?J%*'LK0;8YdXU\?[u%\=)Oh$#]PN@996`X\rMGjoA3Yh&P,o/R4jD68?I:="MC!UL_>>b$P_HNE=s1V.K"`[2.\u5m
%p6sd3TU#%`h[L%E/HU3c&tn[ipAeP-M["Dsm@Ks:,$/L9-NtNUlZIH!Er!f:31hQ4)Di!XP?m-0m3]`na'b>h\3$okn#jnTa_N.f
%cdq!Q*:1h8b'bR1<3:5+AL03R`5]M5?8ge>ajF;D4LG'n@GO'=S"jf\E=@9FCd3mQ1c8'SQL^Ue.28>h11ctj;QPBiaFe]'J`\G7
%_?OT;Ha:YUq3n'4LDqK3,&T$fAD;I*MC=J;l+DcV8aV\E@c(Z&G1"4>9*"2dUHHdKDVn</Yjg`[6c&FW#4n6F-j#iXSLk%cfP=;I
%%c1JR)f]Y,M20I.a$-$_\7N%Hm`2g0VLqi`;R(c4PKiE6m'SVio$[kP0WY"p[&9=;auEo:Qb)Aic<4aQIEtLK6[245-'s)DdKQ8B
%TG2T5BaL_4:$.3Mk9P(@MVSu-@/$DKLOpc%.NRoKK_QZcq:Ol7!b$:k#?b-*VdZ/D'Go0P#ALoTK5A+MKhFr3/>`]"g`6eYjZ4U"
%Mjo8ONsNR%nT1pr0[RokGa'Pc+(*TW!()Zm%iZPd8$NP'`:hQ[p_BDk!;K$[H4GQj9e:0*88Y4Vil*rGgd8NNQ*:UgA+H1E"2/d6
%BYosO(PuUValjTpM\J>]P!^L1!LJf6@J;N"2p(bE!"m]7*hOHWn^(RV=ZlG=Qg_s[6%EB'%/44CnWDG!))+n*QMJN'b>!dsbfuur
%)c0P]pl=_LJL`08nu>quB`tR9Lqk7$27jY67PiC>8CZ+@2$tHI]$.=^GC2Cn)#5QR_`UXANpRNXrZi<MW+-4_G#:[[i*(b-;KdpG
%#fXkZR<iY^UYnD;H.<?ulZMS)'3a/N[_7KShn;5h^ADY<BD:KFo_q4M5]*iC%;p)+a&X((2pV#Rg3&l0KKP*ufD[8)HQl:Qj/%ul
%\@oO\d1,8fCmUl[gQtXbPrcA.c\PjlP[eV*A@uP]Bd$kDp;c&TfSOJ(cs^[#Wt)=.&VN@Wnp*:jUYj)MiA)Do2h[i(54cM_g^pMe
%R_sRB]$ZqM>.2"[3)V4`Im:S\>d`/5H#nA=H#ND)Y25YclW<i*@Ap),`C7DO3=9hYqt9Y7cuI`g"4h2mZVf)7)Qi&X'1Ak2%3_'q
%$Zf:hh\](f$Wk5fh7[Y(9&Mh>ehDc;ch:rP3-JNC&3:;pO$._)mV-8fj4T?2EuDN_).R"]BgTXtk!lDjA_pBU\_Z.C"n.PkPU.c`
%&L5d/:fhA=pVV>I,@kon#;,l48a<([d_aD.X32SlXjE9eg:KYBVpdhGB.3I*.qN1[rFM1&Pdd_dolFkT+Ms&:k7lci*/.j.J>f18
%A,?>Aj&FWCp*I8!)8qPT5E/SU?ogCXYEMS\m(9+\5W:og5X:1j1tpF&RXjZ*_CRU(dRTlX1/\>a,1=,&nn/skb'E+mP]=pJAeCl5
%DiM"3?m3-e<lsHi6-^1Y;sF)JAfmWsD'AW/-Jtq$,:GGiT140rg&3?jU>jC)9b3p1:l-B)\F3oR!3AV8J):K(P1];/>\.7JG]X4!
%s0C;a](^W_jR?gjQQ1<Wj!BHmX9"O&B[8IBq2DU2a@q6thguJ4(J`kUaQm^b(9[cgc')4l-O'1S;=c(Ed0RgX'1cu-+\_G!4W(K*
%@sX"n"T'RoP>U$,>q-M7IX:f$&?t1KTB6eoQ4+NC/%Ot_rM8pNi0-eGdNBE>FJMd-pq$tGKjOg>N,r]MiTVFcfD5-#_:VcAL=l_8
%%M)J+?9d<>#Yq???T^/gpVR7I'5@?PWO^ebUc,lrEDf5Vft*'L!LoB$;jQM^q^=s<h4RU0g_s`fhoLL&[3!l_+oFg'9inWap.oQU
%p9)_9]fj$!?o9=o0[Ahf`C-ti7(!5R^FRm(7-SSb]=Hk.n)hKr6R9RVorG)p8I_N$`i>p29H\VFCjJ=[D0?i4>"@TXT:VU*=Qe&7
%3:,]FhN*5)Dtj3Z]]Zi]=0DKt^]WRQ'B2H"p0-gJ`EhC7+^cDY,urZQ8c["c8TlH-WY?B)36c64N/=E-l!s!U5dKs99i8gdmT561
%e8XEPFh8WHip7Ujema3HP+boRWU&6j.3&BbNCQe9])NW@nn)aHRm.[9WQeh$1E(\L[DcdFN"n*^Sqkr,aaiAT<Z-Ei:tS!kV&C]H
%b42Pr95(nBN\c@o^a]<m+`0Z5i2X0uQUG,gZl.f@:n5O%$j']f8CDN5Y5XTc!'=]uRh+XqAfk3fH.fkurTL(FaW@=Ym?o-IUu&,\
%541JI:%:KXSF#`5,Dr!AJ2fnI#C^D,`_<g`0\XU.XH)LP%V2T4=JDLH<g-4MZ"mq$g)F?EoNI:4GJQk-D4mDnqrPbFI-$GQb6S(2
%Ps^&+YifCcJX7QDL3nipJEE$?h"(I*:`.&IX&5KgBP(U$M`;$?5ZUEuPLS:k.2K$;mZ+8Z7Qp8MQP?Gt(F[:>8Bn/!3J1c*%'BpH
%XP$AMKXbC7lU+lo&D=ul0-!P!iBrR8$j(mR7UA\pW%W32GRtAER1+q*8h7Z0!-2YPD;6b&lg2#fF`AppldV7@*Di"mPpWiaf(#..
%Ib<lnYd:=9,fh>85c\rWmKT;n=JnuBF1B-6;u<5`>9m/t+2)h7]$AYoeNb#'DJJeo7_K"dAaGna[H4TlFYQ_:):'R<gb?`FPKrKV
%6>bmsZ5ea:M2,(jbmauTBBNs!el=1P!(nb:n'OtGE=E1Ng!*3Z_Ec*g3R@%Zk;CMB-C[5Gl,59D,dp3u-cD0)Zuh^egXH-r18R_2
%:2::\!f>N@KuZ\,J=0S^1X[b]BM!&0CHT46!I\9%RD]Dec-q=a"mi$8gdFqA_`e\g6/s9[-!V3#3(I>67oghHGqlc=/fk`=a.JOO
%Yh3]&+N_f`Ro@*PiH2KudK_Q4P'P_+#-EH.<EL.Uc&a/*d#XlHE<l7*?A4'ZGj,g85An8X^HXn>jP-F*r.H#nF6,jJ<0K\FWn!l_
%.WgFh&=K&el?pTfcqRc'Ta?^R#mg!dh0s%mrKt4]UGGZ&JD@l6E>@/[R&=Oq:Jl(sm/bpV)C*e5`?/f:JZu3gX's;F])AqXNU0]Z
%-m]#HC]ej%7LIun8jmN=k)F>Pj5NHKoa&\2$%V#(^E6_L7@?`r7h6R`;#-mu>6E@mDpd:K:5/WUOeAdhjU?t(ZF*/N5uaAa?Zu=#
%(E?V']CG#kV0K<d;'t3q/@K(UKHr<;.]o`2h*giWR7!jtcu+V;^L);bN)>%f'9is;U+lcX^AgB_(=&f1DPu1[-IHRSFgD+8FnZl%
%rN`2IikAOjZ)>l-O>g]S$^4QM^r8s\>hUub9jlUNL%j1c)@;ln7#VpC"XS"`h.0-kSd@GfD#==&-j%r!@tT12M;#.e?mt.s+\d)7
%1J.%qQCXFNPRT&eG#[FL'qS\@*?u_ej+]".7]t\u+fSXkDD.W;/5\k>blPO/BW+eX::'un7c7Mr5CdGY0JL@/7P_*9&X03ZL?t]m
%S5G260t[L<')2PN"p?$kE8bp\h)'`:ib"cTX<'bQ^KR5nSN05F2]&TpPHX&;>4eLq.9Ii[r(U/mQefTU'hjB?*/^(i7IUQbV7hUm
%ZHA\:5X+KO1+a=D"_@MlrY41QHCjM34O*kJV1JU[*s,eCa*J(_XI09nE)N5%E-(Z6A#K5q#K$o1:0@j',cL,7\)IP,Kb?Ag5.gnA
%p8*R([br:c\Y4(r9T+c?SP^EW$WZ#/'M%KE)(U]5c4h9.Rl?;E=Z$E$=VFUR5b'an:G]\noFGMWr+=XQ>8kT?IuF_uSC/!Oa>+XW
%957-qar<mp&K*-m<R"S?/[#*m8I?a>.g:^\iUYqJ=9f>"EB+#%';L5Pm9GB5_4WRUCTD6F'=A.q7^O>PYd(DRcT)'<V1Da\hTe'f
%G*-.8N/?=n:K..P@Bq9^bLAa;4e8!t:.-?E-.$dRON_UE)k;s73<9SR005A3-+Q6^_M73JU9qEMj<Y:P1\\Moe]Jb(^?KWENku5j
%hk"%57rKB!>W'bI@prmX.Dp8qlC,*>HlJS2ASV#mVg3^DKu:Ug/F9J%T8tO7$t^CIW,D->$[bU"JuIb(k@&2/+p,ABI#oNg"_E#F
%(%CPo;\d6WWG<Y?\Kmp"(-gK)22.2W$t_u?Odk0)HWG&CNQod"B(Fp]i8E%UpWJtQB^(i]d.P:P0M3)_YeX*m9kH4cX@Y-SEYC%1
%R")([B>i$,,"mkZkemROGM4!r[d"uD'![i3]FL'RV^%FYUoT=Agu\paj<;/#e@5_<Tt/Q3MT<CVC@UX=W!A"tRl.9Ne1-&F8_>J2
%6B#=b,iXP#c!#MhGXl2"-jlpT&9hbu/pGJ%[l(\iH"p]4onaB[6+<$p3Y4C[$jdPiR\BC8Y`>0P[8dVTU53ecZ+i<'T_[L3g?Kme
%;/Q7aXa/1h-/)crW2?p*c'>An",#Eh/b%B"[$d.`ZVdigDF8PN8j!EbA?.d485#'de.RC.iH.JA+2g<9&\c*Xo>S@+A;<t(h,o..
%c+k]G]Y\PA(I8bfX_!BW@3:1]fW>a/QUDjl@VC/S/Hh3WAjR`2ftd9\FeS+@Lj3dY)0.#P.$C@H\?:,PH#e8?\(a4X#==-Ch^N<?
%beY(T0oV6k1,ZdV%sP,@gQ#50#d;W4r.G5\L=1u*XeZiW3+U4V9qkD`l/Zk,pZ(BA;3mjV0&1,mA!a3^V9mf+ho(0=AX0RL:YhJ=
%B+/l[Bt#KH"l#I3Q8D&Sqq/j4TGE?2Lqj]cRa@">G)A78r'`*36,2eB<Ad?-'g79ej3,Of>n(u`9ZCdY?ZrP%r\Iq&<[1N[fL+.`
%FK+?jZVHXBPucNQUm5t[UY3-7KUCN5Kt.Ra6<!.,(W<PkQ'0jV/tjX;8&<]I6hK&^;ac=oGki$Z/#BA7(hIV*ms.*(G.e/bg"Qq8
%*/d1Q6PhI-P*'g%'/@uH+peEgn,5MC[>Yb)S(]g@2(,%#n:MMGWijrn,@)WTcqaG;pLCU,mCjCuRedt%hcscrkJ`opE!Z$ZWO=Oi
%B^52*^?fU6rg:!K@HedKXh__1quoMGW7\*r?k2EOP=SVOAOS82Sq2,dLY2XFoc,e2@mt(JOI1U-KXWInD;n5,gS<43jfE(Kcg!Bn
%(rWkYDkm9g7G?HT6ig^,Fro7Z*@LQWA`/=p-W1K\L$55Q.c-$Kr_@VMi2&Vh<oTAd/?`j7EQe]kc@3'Ql<k@j>?b2>&?io\G=uDi
%NJLZ!)b5*C$c:N:!P?1j2Fh)!T,bPYRB+P-JjbahPSAYR.=@`5O09sTq-k@nFMM'/^HcTI7*G*<bt7s^\Sd_8L/ZfkeV7TY)/gf,
%c^UbTODIeG40lj?a&f\S+c1qc(Z1[64LM=?F`%B)-:-7paPec(:ia47fk<7NeeV*&Ih;$M%4e__\eT'U>'%4@d;NN!o;o"Z:p!8[
%62-:oI7R3=_:O*Wbj<7%Qg;kr#b3<Zr>CFh@;od;_M++mWT;JkC3_[T^Y%FI8NI_PGA!%,=\nN1\I\%S?Al[eeaj-B^:(WGCC1o;
%V('BY$<,c5.P'6L&rm4\@0U_>%@ck#R+I+Z[Z9AlANoqp.a:F>f:'MXGdO@_3@5*TC.%X0N?N+D+(f7.!b3^I8iT+oWmsm2?e.)&
%!6LbV^^%Ochh)sob@EWu;[m";T9h(ejiE(bHar)YDL`]PE,%fAlT8`m?K8D_VY6cXLEZa<qa]O5pqg":6YC*i3I<)M``Pq8Yd5u`
%REn@IZF"%7!ipI$Pb*kf/.q1@[@P_)#U@9%G4+K:hC^a=3u/#k[Dd!-l=D.A+nI>j\eKltH_>UA7:'.Ef2@hOl8IBR\sV3,V!#DG
%BDJ=SN\"]YS8q7I-f=j@*IoL2Uno2r9rqkb.\0:bl7&h\$r>GgDA(:37pJrSKn`uu-7S-Ed%7>t6NOgJLLWbebM;([H0/dNb=`uk
%asW]2NE]\::8-I8B(TY9%(7:Fj<McfL*lH8oKJIPX8%&m1D3gO,R=`KrK40cK<sZ/:B/Zuk6H?"+CZn0>hc#c$\UIF6s(&1Ur,o<
%1gA>_"'G!-&j'ZlK:8cX:-\^lraafgS\4ifbi"S:(DH\]0jPilCB*fRp0bIU'qWUl9kYQZAHERnGYP5&SR_gNL0DHW_I]Km!suTA
%DQ$f'Y!@cmeRHOurMf]_i"V:m7r*9>?t^X<K&!KkLGYMf!oE<'PVT61J[XZpi)Ng$E8q&1R+d<JLIIV'dmjX:\bIBq:K<3@B9Jo)
%\FrfM66Sm35_*ALqD<"I?'umX\147&eE@MK-uM;K'WP%]Y+MuV^$YSG"B,?Hf_#Wg<Xm31D%,66HJA=:]UcBjn!A+md"re6<78fS
%)K@k)"sdgr*1S!Z-Ekl7drd<B+jL7Jjt0+/k^7@>`mUA]H):B@E7[,-(fjnji6>`mO#C@e.eXm++Wr1EPDYJTUhcK,D6#@:M];t!
%NP8s_S0mj$S[PIHh=/giF=g`@FX#N#P"?Z/2,>7DOKa.^N3;X#geYdJ$C;N.PI&%LW8fMrlJ?#d:--OBEr4EE9CXN0\6:hl.Fc:r
%*18b(J4:1`9l%$oHHb=,U"Kk!pT)tpn6@=8jZ`MrGkpYiHm2uJ;CdaCk;&(6&AGQtSC45=H-fRk"r1/eV-O5(2$GS8;7##0,pM*U
%m^B"dhSs@JXZ^esVO(S4_F`#4rk5Gu&MAMCE.)[a\^oS^^?1dr[j$S#ND)S)T=94n0g&>tN2ofp+G^M-+[HomCO+R6(Tq_($nmc8
%(KsmU97,^:Q@CaNHD&XOg(g\0>e&N->KaqP"V5ErCn4Ghl82#W*Cnf@>T>%O7fqAp$L&(=7_B>mM@k=rOb1Q<h>N=*.(,,;_"A:[
%aX5c0Xe2_p^$oIV?>G7=E]LR4Dto]dCH5_Rrl2.m0l;tfdqScNB,FPp[d%$*dn5%q2)6@bZW3_bF^UlXVWcE"*nFL9L8KhJ@!c]a
%F'?1Z>M:#<qeW2tXdkNo>$$]hD+@YC/J!J74g=UaD+:Y.di;T&WQu$^M$79,2dQ>uf1'YSb(OuF)>.pP3Y2JIP,;Cj-$r2Vj2P4@
%ZZIgqGjB*[BeOinUEpgM7o$_%F[`_Z)>Mr*>Dq@j#.?_(cDU@-4MeIHTA]'eN7LR_&8B9ArH;kNC5,=f$r\QuYc6p(Uq12f.[krP
%^$ish/!R-]h/,mR^&%-IMXE`PS?4l/.\GSPRT*3o*T6ePDK;kko6`ctp77T;PQd%@qK?Zt`4_[fd=tH*?!cGZMLTgr#W*8n!67=%
%Vk<E^HN.Agk^5&NqH,rXmM4lHh2NOS2/I[>rG`UhdS&[?nc*.S^&&#VP/Ba>K0]Efgq@N_62XH9`_b1-C?M3TA3Km?f4<IdX[,\e
%aRcl9TJ><[d7#4EFU2G:mS:M]bi:Jh$=4m^%rtfS]C'j%K5$WJiri%P.6fu)nJ8R!LJ@b_,1cFlo\A'LP'0'+NO\+B*oFOQOo"jm
%f(-%4+@`e'[gmoTlSQdb.T<[.P$1ghRh<u)mQU8kBQ:Ad2\gJU;kkWXCLi'*L5Pm'mEf%;QpO>.%d+h2f*"380j^YMX[QI/[TnX]
%3Ka:/\nZ_50@\<O>Asi8qJe7PrVKb+5MX8d5.@"Zlg6gXc]Q6L*K0BF1-u"GhRCe59+T[UMHj<X/P[$o.-ado?.6]-CShTq*omBB
%jhA.7>uSE1@8p-?%CWaJ41l)U3c4=kRiY%oH%<L3[qW5;cLVJc.'4o[ls/tf@q2p#`seId:Y\629mUi/kLq19R"C0AD-b@11Uh5W
%m@4#Wm@^jA&YGUB0=gc\[g?Bgh.p6D_s$h3htl7hMm^1GCd6r\K&4<UC6]j>7_S.lCOe.5I.5\j*7PM49Ck,F]/De\H?6B,CD>$Q
%pju[^>>'>-_t:pq875iH03_MSZeK]ub1<B:5O6tQ#C#cshCb]%)2GCFF_e:,<?u'mLIN,KHJbsh5b(4G0h\7bo=Qqodr_IUhjsnP
%4O!\o[[).]5?o/,RYWH+FToGufS&pOXWcbqLXd<PTspW=1Yh&<e2pt&_Q7l!3u.,gq;*Tm<`d4O\VO94fBl[8:H$tUY&TJbkC]0u
%D]'<G]]<T;V0Uth:b5S&r`^Up%p9L^f%$oLhY9pW2&aN.]&1(#?k&uKHXgi:LmB[uef)$6\$""t>hS#<r?UXhYQ!\=Du]Xphu*/n
%J+:eXhnT'VpL!suO'hpbDgqHXY@#'C_nUTtm6?'u\%happ]'ZnDu\E2NrG2)S6q]?M^Y5"6'09RV+Q7[aBJfi(s1R`V"?TrGUbuR
%[VqZM4/CHb=(8HME3dPYLJh=?A?BR6faZXMQ]G>mjR14g^:'@$8q+</P+!u@o%KGVEmTsGV/)94$BK%@gP4V^3mZ6HJ[C2-IO6@*
%I+#"GT]BG_7]`ia)_1rEjLAu9L4Va,=CT/)>+Sb=>+oSrbi.^0=Ogg6BJ3Y\]Fsfu%(euN467WhI;LRJGA`Bp['cfKpuc?T[cE8C
%Gf['*Or"-YAY4.J_D7t9pu>=oC25j]_qGI9!ZD<d9F2J3>F]))ag)+lTt`3E<5%$MJFJITCug]K("FQ2oc*J9lc3:pILD<5T!\/V
%!.3iU;J!U3q#/"P7`CmVdI9(5N8P92UDp'&oFWGOhU*#eeO1h&QDc"4_4g0VHC%\6Eo]&c!$C4*GjJe<lcMY_K6#gK5buK!a<qVl
%nCT,g'J,d"#mX+Cn(D-+>>gUUA7s'7kp)tkj/(2(i$bhO)b;OA-u2cRY)(;jPUIQ_rYA"4!*&4t[AA.K''"0X\GqX05pQpuLqoh,
%X4Mr@'+Q)$>Tl2/o1cC&cJY4JJZ1knd^Md_e&2Ha^Bt=;.5]s\Y`_OqE[?PX_o6Im:,IbiHImIIB*oKW\sW2NMJ#BG9CcRtHoJ(J
%glcVO]n]Hak#]NI3]h!lbV\QLO`cjU5>#0b,-j"dng6Ip$Bi=kltSR<`A-9Z8$r*UeQupN)1!m)(pdH-4lrSEr)82Cp.e$0NHf2%
%,>-,rkW+X*DtEIB<Pk@jc4O@fa'jjL#YYAoJQO`66TcZ%fJtqs^'n&^=mZ/+?bISZUnLZtk?#`c<]6+@l)TQh__`sZpM/]j+"V*&
%6.1nLDR2_^ac"jgia;dX15cel^1:=)Zf/tZYE:GZ@s<RA0SrA-I,/k^RZ]FS]9imjG_r%VC,=Zo,;\O0!("]JqS=sj<"M?Dk9,qa
%[&uL/djQZ5,$IM,aZ7#JXHjJ9FKG>=4O_#aBEAdjMGC:oN,%EpC0RGdiYAZ9\R7J+Eu0UR'V`$P$@Db%SF!l:JNsbVW&gRu!><a%
%k`o*"ablieTbCjP2[Mf;;J,ul3R&"3>BD2"PuSA,TGu-L]o9l_l!<BD#JXe-88^*QVGZoSfR7BjF-7]`0G%4SZ'/F<N"WZ8`MiY&
%g`ibYPudh?:='a^AG6HSTW'Jr-Hgn`(L%o?6BTHTPfsP2_NbUWCl5sMObOT;GF@e[`Ifo4XU4sZRpp/<rmXZR3(B&5PM`BTP.TJZ
%oqpVU-C_:kmOirm]-2G!<=IudHnhO.`>]kR'?TPAB%W3uTV+?t'Nj8>[3CHcL;7pim:V?AOGHasf@dNt!Ac#.Xda-\ljbgfl;R6K
%2TcP[6Baf4'BQ-$aaEl>(0-PlWnQV-+)B]E&[-t0s46k<&Ps4UmB3d?`U7uN0N<os>D!c8pY3tne"'#W#oiOu`>_%q.__n)DN.\0
%\Yd4-bj):)DY(%B)CF\E5dfsn7PXauY;(,R'FAgRhBiW^!N*rR<DK1=lhG1A:k2!.cBFqcq-U`^?qN1p<>CO3G,;,V/.(ipifcr`
%@s8Be>.#0A-p)M@pF/8o#9GBXiAq2qN:cH&&_FnN,;Ig*+m[9m.b$(*Pn`D1Pm3j\G=ucd<C3q*7&I(.Eg8tV1!e6q)P,*@1ra3n
%F&5QT6]=`.R'VrcbAJQaT`K/ko,/LI8FEp7_A,-^EOtm#]%H,=TV1o;]ij[l-F!N&Y#)ua'U]*k-#^iPciS55ebSWm,H&,oQ>%KP
%Zo*42"i[`>6qHHb$k*;HX/\br<4,-Z#gZYiC@VE.fc4:e^hD=<Vctr:orPCl3Wpqh@T.(pb@NufhsP]XI_>>;H(M5cp*n-l\=_Fe
%$r(@e&\c)82-Gg_PsVsn60>e>&:Gkk6G[+P9(i](i6p<"-WamIU44===cE$Raq5G@;7@P5+P*H:@(iafJIkIZBR3k@E3Aj&F:j[`
%J`P8'MX;<.K<*NJ)>^&?0Y<Ven,^HL?k'ACU=+6rrU<7/FA$'nS_=eT;,"eS\1Y2E%&X`Nn`OQ_6`7i6:bTcm8M8h)j@U-SA'2)@
%]Wp5Y9F5\'KJ3'c$:@1'"*?o[EZ?GAREZ8#U;)'^0lkP1:?`=TPg55n`U,-RJT,=fe/][l;3Zl;Ur)O"TdT^9[0<m<:=Hjk7(Nh*
%h?:>qY0lWrV">1XlQR.I84*)ERB^nd6K"p8ah_[6I;ptudrD\p[f\[]#W23sh_NlM]QL&9Pr[cu\OunP2)ao>Tr_^\;JnSJRs>9F
%U`/SYMBf0h+uZ]V:Y8"!imlJ$D(QWjkMOO\LAj<p,,W_7Q&/,I/81\n9I#)S/n/eeN/_:IdpptUY_#i+;i89Tdq/V#U`./]&q9//
%VS(,d6"`t+(g?7L#\'K470[*HUf4FmOiEaIbng2=BO6_4/U4l_h*fE`Z>2u<k('@Q*N[qZ;rU3hI<;WM#'Huq,pYP@8p0hS(uT@&
%<IY9Ue]1$4.:Ci;ec9P,RLs4ig+$nRp^pjZes;"!ZY^;GMb&C*?Ehu1V/l:C4Efco+6<]SWiFd@nAFs5Z7cI5V"<*J<jeEkiApVA
%/af`t4I+cc[p:N<;@PiU*cpP.FW,(FpL=\*J24^I\C.Iu&h06>m$#t$M!a*_iBo4dGok0(Eoin*oOF'`d>u2J&I=nI9%YcP[*67?
%c;00C^ce0DU/93["Fd'3+8GumZCP$?FU@MB\=WhM4&uejrok+S0H(08Y\;X'hbgW>.gEF5!k+FYs'!.2?RoSm'*`8_?Ro4=C[;+T
%1\][?`Fo'5]iHbQf?Vk@EP17+-!nbr]PDe+"a,!qCYY2=8?d<>C\`j0/RNM#jX\J2d/#6L]OtJ",$\&0SrI]k8F262HK/3[=*/6@
%)1?JC^+e<q%B0)1^t2%FFVD=H*8eCT/EA<:.N2#,YiDIhkk.<Ak+B`&G""i"Y*c01'bOHVih8F-q.7Todm[eVP*LcZ`aKSZAOf+Q
%Y#qXN"UW_icS%BB6Oi+KSAB[?A-\:TYY2pKTb*<aYYW3'@B>O!bJ_-fEi>6j-MD;@;m@;tZ'C*HW[tbUCt%e$6R&teY\Q8[@38er
%H.^EZcA+7CMs5VBJGTZKZ(DN)(=#m+G6au#)HR%mR+4Ch@'WQfg=uF[gUWg.q/m3rR'edOYe0<A9_K>oH[=W*bN7KmE/=5a-bk''
%LNhX's6_gQ0/*.K=RI*(r-WUed!X%05cc4ddNI'dLF8P3bZ#1tMFY#-2*cUM#I&>f,B^!f7>P8HW8p-\Dd"+T*k=2SN:msJ+7=a3
%dFPP8D/F&U>5O.25L&Jud@6I`@gM'X)WAid^0fC7`0(RHJX/C/L`'f-b%5!K-0>p0or0sm+&Q?:OSrZd?l0R8aielN)24;*rXR3_
%1ko7#3/hmFSa^4+/!+U7'\2Hd#Sc)WJq:ci`G-WT[I%I42m!ks-S'qG.<S?:!29I7L<GVG0c1V+PT+GV:0sK#d&3%4Eqn?`ZYRXB
%7EJ;VE7>;U>UQ`/XE@ciS#dD!R/X9GjeERub9'i0$6K_Sc-r\$R=Ugd;Bh0\BD=RQAn']<-5*pUBs8?iSUdo\)o3akgf=a@Oi<^M
%k"p45Sli;X3ZX,.KhPL38oa%@!qj%nb3URo/_-u=>%cg;`tkmDV9@e4,iX-=fia@`o?.\n#`hk+nP^"EgjkCB=g#%nR1(@HK,`s@
%7g<tbp_;XVV*a@)g<M`A'Xq#+%.^>4bO24LZRUQfYO\3"P=,%,)N1:e&`CVTLX^<5:NWscTH^mhB%Q`4OZGf<eaZISHMX+1G/1nk
%l(+1!$Qm4AFpD^]I98>.Xf>+b.]#i3`EuH_5^4gVW!`H[(aO"4X@+^\-h9WDVYA5ss.`IIeZZjih4DKeWnL1UmoB<^iFu;Q0F9'I
%HkEHRUAu<:<sB$+.IA&-nm,Ik0<SiJj<[nle<!!SW9Y<c>+.3ia,0-e9/KYM:%l$Uas:Xp"BagDf$N/=d!kXA(I:QV9+78HYtTOJ
%cs/\2o5$fQ1nm!t]H9FTJCb*/1V6^X3h2-_9Q]i370,^DU5#crMMCcGUN!je)M0#B;!]Mk/R9&J:_J6<ALq\=3NJ/ZY$8GAZMZs.
%AY&<-B_Cn;,c>+fN[I%E\Y%%oc$8)rbDA-kS(5m%HqZ3,Km$L>+OUg?!AAIO.sA:Y6O!0#(SU!(m#s7dqs*.Ap4U5A#\"QN^nT2t
%F1'4M.lar<0[ZelH2BjY!8l#?>H5ChmLE;HU7n#uP__mh/c^;kj=dJliiUA9S`1!75[G3JY<H2f0#lpV0OOs,\9gicp_e>jR2]"G
%eA)s='hXKa84&p:hLLb-nL.J2+s0M:;1*8%81RF<Rt-i2#RB%>KY<^fP/eOklWp9@2"+b#PO\?c,440ba:Ln4AYEKf:bcT^d"*[P
%\]bY;#73:K4-%t)j$;;m/R%4Fmg]8nT4/9Hlid=qAt`O[BrGF*QXkZ%-3jtbl7$:Lh,-7m\e21mF$p@t2nF\K``FAh-C+eVjC4@+
%$%)<Y+WSAKhZZD:9:[;_Y62G`%tg)j)1`CC;Pl^t#g8r)j<8Ipnm%)>71KR5q.k=c;!ZH136VM2c5<&a[f@'uf7<kIokf<?a1Sh=
%O:E;=*FnE8?C>'Fe7?^V68/alLT0,UQn0fnm.]2@%CLKc=!O%7#_n+5ZW2p=`_(n=Mc^#E/-llN+P`8TjG3a\VT?u7d23QSdm/mF
%&a=6-p=,tRaUR\hKq7)$4St5"8qPs9@.0dMcW2k,g/UCWCDSX_%"2f<B,ERPCf9A/E4J%'_2^(IZZnnfkUSN@T2?8gimu(J^tCG"
%Q*?j4**A#upn;CG.FeIV0g?Y!0b":4E$SHgB`@Wt.3ZR,7EWXu%;.CR?_HD?>Em0Sr6hr#bFAF:`SC3*P@P=Y0.6ruHjZHiLjJAH
%>)7M#VVn/6Un-jWV,dWE&Cp%ZC^+?ur;!_`C/I.:L]YFU@^6HG&u$Qamo.k@/CdC[')gP+dqflD_h9ot&ZoIB,N5Na4)l$3MP_Ya
%BdLtVnf=LVdbHb!N*o'oUOOXg%/3d@\EP?F,Z*5R7g+Zp0d>J>[`_q]hHL4R'e^>rW+,:;43lM&'`F,6fTZ3)Vo0,!Y!f&9(,Ao)
%.G=`?Cj"Xdrl72f"7$dP3MB"3I]1c<9&m.Fd9u'MRl'3]3?=H@104ON[07NoDR?ONBSN8RkkZa,?ERej^6kW-PHlk%UXGmZ4o9.n
%UQ_e6(/Z+r&piA'M4/GV[+fAL#gMA^[No;"?:_f=D.ukGG/(WiL,jIc*<HBs7hk32:r#nNEubeSa^JKuT'b/B$8/2CO/".5j[oYn
%GCmelU=p.FTF:'S<l$6o`83%WRS@<(!>!n&bEX?@PrHg[<!j`o48G]9n>$JG&7^TeGA+3Te.I<,k2&Ztapft(8&#AUUmfg3.U&%X
%_8a1d<A_H[Ys7W+,SrPChBY,[,jht0^^&rYW)^GGP(KXb61+(?d9oYfmYXRf4Pqb8]'ffGBpTReLb+nOmS3l]A;kK>qN@()iTB-G
%A-`Z2DjRDCTa!O$j/Os@H;<4;/B!9nZb'FG7>,I5?1,'6JXDl-TGKX]Yc8#(!dF<gcmG,gkH`O0DjX?`Q%N8''H7p5g'ajAcLGKs
%3!-&n=Z<B"`.F#L&_rTs-$D/E;UI2q<kiZR\l)JE=4N8d%;feD)a1`fhbM?.85PX<."[&1#Wj$+,#9V+H;H'D=^go+nPk?>%RO)g
%`OO45hW_3FHJfub8hP>mafWpA`=YuAHEn*D71"$9VSt1oI:C[6K`[[,"1P;k,&*W@>4m'3T=N\jHc4(4G4T&;k=6c$Z">0cI6(iu
%fS5Ji,;d-@1I,jd>MkAO,c"=ER^k`e21B`r%8A=qg$Ba_Xc@;*N0)!bqW4:@KOC.oge98UIiKm(ldI!Vr6A25n8tD!KJa!rThlAq
%R=!^F4lrVd-K3UfFRNs&_XWYSd-O@[I5':I`i$seO@S+X<!qlofW,JYC`_?t?N'CY4Z*uaF#N^#ciYIOfbt)qb"f5Zm;AIAA*p`6
%kggC(;AjN0@l^J/eulHIp-tU-f#SZUS(>:R4J3OnDeojno>d7.+kjAuY8s13Gj2<^\]./7o+X)4M<#XV\HNRs6_hg:ed-S?EZitm
%7gK,d%iU][VoA"LVc>8U@Km23_rW]H&G+iJ&W:sa)=3K6.-`1WqCuFhe6#heg^D1I9k\Q"/3p7P[%_PZ5`EYSYjC5<rsmc53[J7f
%JS,BEh^]`oUNcS(g/a;hlodF%qGHlsnl`!6l7suWGneULHpo5d(D/kH@@)%"1nluE>`b\`:2ZPe[M7S+@\.7<e`)aL/In?t3>D:C
%Eh(Z*cPfr>5eV,f;2t*kOdgj2,R=_TOVXXsaAfuT'LrpQlgpWG%dbt;k>f&p3)4Q:OMHK@:iN0^&hYUR<Cf0Ul_qI]pm>A&Bt%E9
%q*6q4F7<21f_6QqLEY;;#:5D;PnT9)(D&l$q"BU_fU&F=rk&.MoR<T5X_h5*Q!"VhOj$4@(?p,?ND:Sdq,:YfLO]67Z\#JoK\Yd#
%NWtaol1G?"*3T&@81&*r.h-@#%[*%]!JKQd2/6_l>2u'=i^Yf$H^#WU,!ok(Q_3mr38:]B(R+_"WWU)4Z3j6k(Tn;.Y37/%CqkkN
%G8<h,:2Y4t7%0n/Q:fhV3DJbGD9\\J@aCn6]K\[*b+(qd1ebH$dS=*,qk2EM,gZ-CgV576_hT?gOfQnJ,?M*X3d2g15,qa_*_PT0
%P#pUB(=c#Z=mgP`RMMC;LdUJs=-J&=OOK(m/aK(B8>5>$?'IOqL7*,"8X_4rZ(.jC?k5K=\S&i1`I9/BCbg)Q$Z`dTdH_6q%jqU$
%X?f]t.>'clcUBma<rhUn\C^>X5<_7/4h$L"cKErbD$Vi+'QTJhVEETggoHKUqI6@@HM-5m]Ap8J/gbpOOOK@uXQsTjc_'Cc)tr6[
%8Wl/kVEA>t.5cUB/u@Q!FIn0OV$PZ*=*iWl.<0('?NQju<41o8os+868L>l%*ahaZ'GW\:?R>\i=Ai+Z9S.Om&4]R^(i\&2I;G/B
%--EE+R/'=8SOD:*(g]eX;e0b@1e\:<SWiM@=,B?pB=VU/p[&K$,)pjWXOXtAi!eUu(J^@?:id2CRuFhaiUt4K!'!mgN3.YoL,EGp
%dF=0WBj$r,,)'R1enh!:OsS@1/qU*r`ps+/.a-s?D^8=7l-)]9^jMZbD+d`//qT]@4K:YHY8m5,6hRNo4as]2p%SZ<iUNn:ob1lZ
%j-'WEitF*2o:\^`UpT)PZar13PHB6l/[FgILZ7hq[l_?n;9XFt/Je#8%$SFpQWMVK1sX+['5<`k9q,]FD9K,&9D*SapA4#=S?7jE
%N`\A49m6aQPc9fUKcYnKBXJdak+P2?d=#*W!L(3^Z>1a-!*&,Hm'Zs+=Bmkb<27)n$J+qJ<nm`"Ee";EdLO5[dJL)L"(R7XXli:R
%GsH/;6b.>*\0[$6@F)FUbdMZ1[IqbN[<Bt:c88`cA5MT%0MJsh-3!bnd;--;@\dcE:Qp)%^OoD\cgMeU[$H47bBMh`qW,'AIeWM"
%r9g37IJmN&pRCXO.=*R!J+`EjIt."L0>;f-_scI\Bc6Y0s"U,D@)r<Hh=#gi:Z&p:@e&g`h*6Agos,impYE<ns7"M;nEh<h+9(2k
%J,/K(rqO<is6]:3paX%*pW'K;j1BeT?,(lH4TC=`h`]iprqkL^lMJT<J%k_#bGsdLhnOU+IajJ7#Jnp'r.jB0s)VoOdrLMar25n]
%p><KKhu%<da'W.PXo'imXYB4t5H!95h^h.ll_!oYs6]9)F8tB0hL0U[/Id4*Mf4(AmN91?B)0O*rTl1dqo<W(Gk^dRmsgD^Gk[!T
%T3d!Dh7Gm(PCE8sa+*sZ:UKVdo`p!BQ[eo,J+p:aptqKOdF\~>
%AI9_PrivateDataEnd
